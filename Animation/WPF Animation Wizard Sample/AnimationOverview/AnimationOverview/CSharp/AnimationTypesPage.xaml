<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  x:Class="SDKSamples.AnimationTypesPage"
  WindowTitle="Geometry Attribute Syntax Examples">

  <Page.Resources>
    <Style TargetType="{x:Type Border}">
      <Setter Property="Border.HorizontalAlignment" Value="Left" />
      <Setter Property="Border.Margin" Value="0,0,0,20" />
    </Style>
    <Style TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.Margin" Value="0,0,0,10" />
    </Style>
  </Page.Resources>

  

    <StackPanel Margin="10" Orientation="Vertical">

      <FlowDocumentScrollViewer>
        <FlowDocument>
          <Paragraph>
            <Span Style="{StaticResource MyHeadingSpanStyle}">Types of Animations</Span>
            <LineBreak/>
            The following sections will go into more detail on how to create animations.
          </Paragraph>

          <Paragraph>
            Note: Although all of these animations can be created in code (e.g. C#, VB .NET, etc), this overview will focus
            on using XAML markup to create them.
          </Paragraph>


          <Paragraph>
            Because animations generate property values, different animation types exist for different property
            types. To animate a property that takes a Double, such as the Width property of an element,
            use an animation that produces Double values. To animate a property that takes a Point, use an
            animation that produces Point values, and so on. Because of the number of different property types,
            there are several animation classes in the System.Windows.Media.Animation namespace. Fortunately,
            they follow a strict naming convention that makes it easy to differentiate between them:
          </Paragraph>
          <List>
            <ListItem>
              <Paragraph>
                <Bold>Basic Animation</Bold> (Animation<Span FontStyle="Italic">&lt;Type&gt;</Span>)<LineBreak/>
                Known as a "From/To/By" or "basic" animation, these animate between a starting and destination
                value, or by adding an offset value to its starting value.
              </Paragraph>
              <List>
                <ListItem>
                  <Paragraph>To specify a starting value, set the From property of the animation.</Paragraph>
                </ListItem>
                <ListItem>
                  <Paragraph>To specify an ending value, set the To property of the animation.</Paragraph>
                </ListItem>
                <ListItem>
                  <Paragraph>To specify an offset value, set the By property of the animation.</Paragraph>
                </ListItem>
                <ListItem>
                  <Paragraph>
                    The examples in this overview use these animations, because they are the simplest
                    to use. From/To/By animations are described in detail in the From/To/By Animations
                    Overview.
                  </Paragraph>
                </ListItem>
              </List>
            </ListItem>

            <ListItem>
              <Paragraph>
                <Bold>Key Frame Animation</Bold> (<Span FontStyle="Italic">&lt;Type&gt;</Span>AnimationUsingKeyFrames)<LineBreak/>
                Key frame animations are more powerful than From/To/By animations because you can
                specify any number of target values and even control their interpolation method. Some
                types can only be animated with key frame animations. Key frame animations are described
                in detail in the Key-Frame Animations Overview.
              </Paragraph>
            </ListItem>

            <ListItem>
              <Paragraph>
                <Bold>Path Animation</Bold> (<Span FontStyle="Italic">&lt;Type&gt;</Span>AnimationUsingPath)<LineBreak/>
                Path animations enable you to use a geometric path in order to produce animated values.
              </Paragraph>
            </ListItem>

          </List>
          <Paragraph>
            The following pages will introduce you to these three types of animations.
          </Paragraph>

        </FlowDocument>
      </FlowDocumentScrollViewer>
    </StackPanel>

</Page>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html><head><title>Dan Crevier's Blog : Attaching behavior to an Avalon element in XAML</title>





 


<meta name="keywords" content="PanelLayoutAnimator">
<meta name="description" content="Sometimes you want to attach some behavior to an Avalon element by adding some event handlers, but without subclassing the element. An example of this is my most recent version of the layout animation code. In my original post , I had code in my code">
<meta name="GENERATOR" content="CommunityServer 2.1 SP1 (Build: 61025.2)">
<link rel="pingback" href="http://blogs.msdn.com/dancre/pingback.aspx">
<link rel="stylesheet" href="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/print.css" type="text/css" media="print">
<link rel="stylesheet" href="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/Common.css" type="text/css" media="screen">
<link rel="stylesheet" href="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/Blog.css" type="text/css" media="screen">
<link rel="stylesheet" href="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/common_print.css" type="text/css" media="print">
<link rel="stylesheet" href="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/blog_print.css" type="text/css" media="print">
<link rel="shortcut icon" type="image/ico" href="http://blogs.msdn.com/favicon.ico">
<link rel="alternate" type="application/rss+xml" title="Dan Crevier's Blog (RSS 2.0)" href="http://blogs.msdn.com/dancre/rss.xml">
<link rel="alternate" type="application/atom+xml" title="Dan Crevier's Blog (Atom 1.0)" href="http://blogs.msdn.com/dancre/atom.xml">
<link rel="alternate" type="application/rss+xml" title="Attaching behavior to an Avalon element in XAML Comment RSS (RSS 2.0)" href="http://blogs.msdn.com/dancre/commentrss.aspx?PostID=543854">

            <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
            <script src="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/global.js" type="text/javascript"></script>
            <style type="text/css"> body { font-size: 84%; } </style>
            
			
			
			
       <script language="JavaScript">var doImage=doImage;var TType=TType;
function mhHover(tbl,idx,cls){var t,d;if(document.getElementById)t=document.getElementById(tbl);else t=document.all(tbl);if(t==null)return;if(t.getElementsByTagName)d=t.getElementsByTagName("TD");else d=t.all.tags("TD");if(d==null)return;if(d.length<=idx)return;d[idx].className=cls;}

</script>
<script language="javascript" type="text/javascript" src="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/minmax.js"></script>
<style>
.DoNotDisplay { display: none; }
</style></head><body>
<form name="aspnetForm" method="post" action="/dancre/archive/2006/03/04/attaching-behavior-to-an-avalon-element-in-xaml.aspx" id="aspnetForm">
<div>
<input name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwUKLTMyNjg0MDc1MWRk4kqgif0qb+BsXqBU64DM+rPSfXA=" type="hidden">
</div>

<script language="javascript" type="text/javascript" src="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/Telligent_Modal.js"></script><script language="javascript" type="text/javascript">
// <![CDATA[
Telligent_Modal.Configure('/utility/loading.htm',['CommonModal'],['CommonModalTitle'],['CommonModalClose'],['CommonModalContent'],['CommonModalFooter'],['CommonModalResize'],['CommonModalMask'],100);
// ]]>
</script>
			
<div id="AllContent">

<div id="CommonHeader">
<div id="msviMasthead">
  <table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tbody><tr>
      <td width="100%"><table border="0" cellpadding="0" cellspacing="0" height="22" width="100%">
          <tbody><tr>
            <td id="msviRegionIdGraphic" bgcolor="#ffffff"></td>
            <td bgcolor="#3568cc" width="100%"><img src="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/topGradient.jpg" alt="*" title="" height="22" width="250"></td>
          </tr>
        </tbody></table></td>
      <td id="msviGlobalToolbar" align="left" bgcolor="#3568cc" height="22" nowrap="nowrap"><table border="0" cellpadding="0" cellspacing="0">
          <tbody><tr>
            <td class="gt0" onmouseover="mhHover('msviGlobalToolbar', 0, 'gt1')" onmouseout="mhHover('msviGlobalToolbar', 0, 'gt0')" nowrap="nowrap"><a href="http://www.microsoft.com/" style="font-size: 95%;">Microsoft.com Home</a></td>
            <td class="gtsep">|</td>
            <td class="gt0" onmouseover="mhHover('msviGlobalToolbar', 2, 'gt1')" onmouseout="mhHover('msviGlobalToolbar', 2, 'gt0')" nowrap="nowrap"><a href="http://www.microsoft.com/library/toolbar/3.0/sitemap/en-us.mspx" style="font-size: 95%;">Site Map</a></td>
          </tr>
        </tbody></table></td>
    </tr>
    <tr valign="top">
      <td width="100%"><table style="" border="0" cellpadding="0" cellspacing="0" height="42" width="100%">
          <tbody><tr valign="top">
            <td id="msviBrandBanner" bgcolor="#ffffff"><a href="http://msdn.microsoft.com/"><img src="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/msdn_masthead_ltr.gif" alt="MSDN" title="" border="0" height="42" width="225"></a></td>
            <td bgcolor="#6799ff" width="100%"><img src="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/topGradient2.jpg" alt="*" title="" height="42" width="250"></td>
          </tr>
        </tbody></table></td>
      <td id="msviGlobalSearch" bgcolor="#6799ff"><div id="msviNoSearch"></div></td>
    </tr>
  </tbody></table>
  <div id="msviLocalToolbar">
    <table border="0" cellpadding="0" cellspacing="0" height="19" width="100%">
      <tbody><tr>
        <td id="msviHomePageLink" nowrap="nowrap" width="177"><a href="http://msdn.microsoft.com/">MSDN Home</a></td>
        <td><span class="ltsep">|</span></td>
        <td class="lt0" onmouseover="mhHover('msviLocalToolbar', 2, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 2, 'lt0')" nowrap="nowrap"><a href="http://msdn.microsoft.com/developercenters/">Developer Centers</a></td>
        <td><span class="ltsep">|</span></td>
        <td class="lt0" onmouseover="mhHover('msviLocalToolbar', 4, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 4, 'lt0')" nowrap="nowrap"><a href="http://msdn.microsoft.com/flash">MSDN Flash</a></td>
        <td><span class="ltsep">|</span></td>
        <td class="lt0" onmouseover="mhHover('msviLocalToolbar', 6, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 6, 'lt0')" nowrap="nowrap"><a href="http://msdn.microsoft.com/subscriptions/">Subscribers</a></td>
        <td></td>
        <td class="lt0" onmouseover="mhHover('msviLocalToolbar', 8, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 8, 'lt0')" nowrap="nowrap">&nbsp;</td>
        <td></td>
        <td class="lt0" onmouseover="mhHover('msviLocalToolbar', 10, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 10, 'lt0')" nowrap="nowrap">&nbsp;</td>
        <td></td>
        <td class="lt0" onmouseover="mhHover('msviLocalToolbar', 12, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 12, 'lt0')" nowrap="nowrap">&nbsp;</td>
        <td></td>
        <td class="lt0" onmouseover="mhHover('msviLocalToolbar', 14, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 14, 'lt0')" nowrap="nowrap">&nbsp;</td>
		<td></td> 
        <td class="lt0" onmouseover="mhHover('msviLocalToolbar', 16, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 16, 'lt0')" nowrap="nowrap">&nbsp;</td>
		<td width="100%"></td>
      </tr>
    </tbody></table>
  </div>
</div>
</div>

<table dir="ltr" border="0" cellpadding="0" cellspacing="0" width="100%">
  <tbody><tr valign="top">
    <td style="border-right: 1px solid rgb(153, 153, 153); overflow-x: hidden;" id="CommonLeftColumn" bgcolor="#f1f1f1" height="100%" width="181">
	<div id="mnpMenuTop" class="mnpMenuTop">
        <div class="mnpInherit">

	          

<div class="CommonSidebarArea">
<div class="CommonSidebarContent">
	<a href="http://blogs.msdn.com/default.aspx"> Blogs Home</a>
</div>
</div>

<div class="CommonSidebarArea">
<div class="CommonSidebarContent">
	
	<a id="ctl00___ctl00___ctl00_ctl00_AggWelcome___Login" href="http://blogs.msdn.com/login.aspx?ReturnUrl=%2fdancre%2farchive%2f2006%2f03%2f04%2fattaching-behavior-to-an-avalon-element-in-xaml.aspx">Sign in</a> | <a id="ctl00___ctl00___ctl00_ctl00_AggWelcome___Register" href="http://blogs.msdn.com/user/CreateUser.aspx?ReturnUrl=/dancre/archive/2006/03/04/attaching-behavior-to-an-avalon-element-in-xaml.aspx">Join</a>
</div>
</div>

<div class="CommonSidebarArea">
<div class="CommonSidebarContent">
	<ul class="CommonSidebarList">
	<li><a href="http://blogs.msdn.com/search/"> Search</a></li>
	<li><a href="http://blogs.msdn.com/MainFeed.aspx?Type=AllBlogs"> RSS</a></li>
	<li><a href="http://blogs.msdn.com/Opml.aspx"> OPML</a></li>
	</ul>
</div>
</div>
                  
                  
		  
        </div>
      </div>
      
      <div class="mnpAds" style="background: rgb(241, 241, 241) none repeat scroll 0%; width: 181px; height: 100%; padding-bottom: 20px; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"></div></td>
    <td width="100%"><table style="table-layout: fixed;" border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td width="100%"><div id="pageContainer" class="clsDocBody">

	
	
	
	    <div class="CommonContentArea">
	        
<h2 class="CommonTitle"><a id="ctl00___ctl00___ctl00_ctl00_bcr_bth___BlogTitle" class="headermaintitle" href="http://blogs.msdn.com/dancre/default.aspx">Dan Crevier's Blog</a></h2>
<div class="CommonContent">In search of a better name...</div>

	        <div class="CommonContent">
                
			



	
<div class="BlogPostArea">
	<h4 class="BlogPostHeader">Attaching behavior to an Avalon element in XAML </h4>
	<div class="BlogPostContent">
		<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;">Sometimes
you want to attach some behavior to an Avalon element by adding some
event handlers, but without subclassing the element. An example of this
is my most recent version of the layout animation code. In my <a href="http://blogs.msdn.com/dancre/archive/2006/02/23/537966.aspx">original post</a>, I had code in my code behind file that added this behavior:<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">new</span> <span style="color: teal;">PanelLayoutAnimator</span>(_tilePanel);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;">I
suggested that one way to allow this to be specified in Xaml would be
to write a new element you could wrap the other element in. This would
let you specify the behavior in Xaml, but you are left with a more
complex visual tree, which hurts performance among other things. A
couple of people alerted me to another technique that solves this
problem. I think this technique is useful in many similar
circumstances, so I thought I’d blog in more detail about it.<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;">The
technique makes use of attached property functionality. The Avalon
property system allows you to register a property that can be attached
to any element. This is what lets you put something like
DockPanel.Dock=”Top” on a Button inside a DockPanel, even though Dock
isn’t a property that buttons know about. It also makes use of the
ability to register for a callback when a property changes. Here are
the changes step by step…<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;">First,
we register a new property and provide a set function that allows it to
be set in XAML. I’ve also set up a function to be called when the
property changes on an item:<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">public</span><span style="font-size: 10pt; font-family: 'Courier New';"> <span style="color: blue;">static</span> <span style="color: blue;">readonly</span> <span style="color: teal;">DependencyProperty</span> IsAnimationEnabledProperty<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp; </span>= <span style="color: teal;">DependencyProperty</span>.RegisterAttached(<span style="color: maroon;">"IsAnimationEnabled"</span>, <span style="color: blue;">typeof</span>(<span style="color: blue;">bool</span>), <span style="color: blue;">typeof</span>(<span style="color: teal;">PanelLayoutAnimator</span>),<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">new</span> <span style="color: teal;">FrameworkPropertyMetadata</span>(<span style="color: blue;">new</span> <span style="color: teal;">PropertyChangedCallback</span>(OnIsAnimationEnabledInvalidated)));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">public</span><span style="font-size: 10pt; font-family: 'Courier New';"> <span style="color: blue;">static</span> <span style="color: blue;">void</span> SetIsAnimationEnabled(<span style="color: teal;">DependencyObject</span> dependencyObject, <span style="color: blue;">bool</span> enabled)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>dependencyObject.SetValue(IsAnimationEnabledProperty, enabled);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;">We
also need an attached property that we’ll use to see if an animator is
attached to a panel. This is isn’t something that people should be
setting in XAML, so we keep it private.<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">private</span><span style="font-size: 10pt; font-family: 'Courier New';"> <span style="color: blue;">static</span> <span style="color: blue;">readonly</span> <span style="color: teal;">DependencyProperty</span> AttachedAnimatorProperty<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp; </span>= <span style="color: teal;">DependencyProperty</span>.RegisterAttached(<span style="color: maroon;">"AttachedAnimator"</span>, <span style="color: blue;">typeof</span>(<span style="color: teal;">PanelLayoutAnimator</span>), <span style="color: blue;">typeof</span>(<span style="color: teal;">PanelLayoutAnimator</span>));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;">And, we’ll support detaching an animator from a panel, so we need a Detach function.<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">public</span><span style="font-size: 10pt; font-family: 'Courier New';"> <span style="color: blue;">void</span> Detach()<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">if</span> (_panel != <span style="color: blue;">null</span>)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>_panel.LayoutUpdated -= PanelLayoutUpdated;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>_panel = <span style="color: blue;">null</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;">Finally, we’ll use the invalidation callback to add or remove animations depending on what it’s set to.<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">private</span><span style="font-size: 10pt; font-family: 'Courier New';"> <span style="color: blue;">static</span> <span style="color: blue;">void</span> OnIsAnimationEnabledInvalidated(<span style="color: teal;">DependencyObject</span> dependencyObject, <span style="color: teal;">DependencyPropertyChangedEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span><span style="color: teal;">Panel</span> panel = dependencyObject <span style="color: blue;">as</span> <span style="color: teal;">Panel</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">if</span> (panel != <span style="color: blue;">null</span>)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">if</span> ((<span style="color: blue;">bool</span>)e.NewValue)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: green;">// Turn animations on for the panel if there's not already a PanelAnimator attached<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">if</span> (panel.ReadLocalValue(AttachedAnimatorProperty) == <span style="color: teal;">DependencyProperty</span>.UnsetValue)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: teal;">PanelLayoutAnimator</span> animator = <span style="color: blue;">new</span> <span style="color: teal;">PanelLayoutAnimator</span>(panel);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>panel.SetValue(AttachedAnimatorProperty, animator);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">else<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: green;">// clear animations<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">if</span> (panel.ReadLocalValue(AttachedAnimatorProperty) != <span style="color: teal;">DependencyProperty</span>.UnsetValue)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: teal;">PanelLayoutAnimator</span> animator = (<span style="color: teal;">PanelLayoutAnimator</span>)panel.ReadLocalValue(AttachedAnimatorProperty);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>animator.Detach();<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>panel.SetValue(AttachedAnimatorProperty, <span style="color: teal;">DependencyProperty</span>.UnsetValue);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;">That’s it! Now, you can animate a panel with something as simple as:<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">WrapPanel</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">myapp:PanelLayoutAnimator.IsAnimationEnabled</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">true</span>"<span style="color: blue;">&gt;</span><span style="color: red;"><o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;">Isn’t
that nice? This leaves the animation decision to the style and keeps it
cleanly separated from the behavior. I hope this technique helps you
solve a similar problem!<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;">I’ve attached the latest version of PanelLayoutAnimator.cs.<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;">Note:
I tried binding the IsAnimationEnabled value to a checkbox, but it
didn’t work for some reason. It may be because I am using an old
Avalon, or I could be doing something else wrong. If anyone knows
what’s going on, let me know.<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: Verdana;"><o:p>&nbsp;</o:p></span></p>
	</div>
	<div class="BlogPostFooter">
		Published Saturday, March 04, 2006 9:07 PM
		by
		<a id="ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___AuthorLink" href="http://blogs.msdn.com/user/Profile.aspx?UserID=3401">dancre</a> 
		<div><span id="ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___InlineTagEditorPanel">Filed under: <a href="http://blogs.msdn.com/dancre/archive/tags/PanelLayoutAnimator/default.aspx" rel="tag">PanelLayoutAnimator</a></span><input name="ctl00$_$ctl00$_$ctl00$ctl00$bcr$ctl00$_$Entry$_$InlineTagEditorPanel" id="ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___InlineTagEditorPanel_State" value="nochange" type="hidden"></div>
		
	
<br>
<b>Attachment(s): </b><a id="ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___Attachment___DownLoadLink" href="http://blogs.msdn.com/dancre/attachment/543854.ashx">PanelLayoutAnimator.cs</a>						
	</div>                            
</div>



	<div id="comments">
		<h3>
	Comments
</h3>
		<table border="0" cellpadding="0" cellspacing="0" width="100%">

	<tbody><tr valign="top">
	<td class="Comment CommentAvatar">
		<img src="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/anonymous.gif" border="1">&nbsp;
	</td>
	<td class="Comment CommentContent" width="100%">
		<h4 class="CommentTitle"><a id="ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl01_NameLink" rel="nofollow" title="TrackBack" href="http://blogs.msdn.com/dancre/archive/2006/08/25/724938.aspx">Dan Crevier's Blog</a> 
		said:</h4>
		<div class="CommentText">Sorry it's taking me so long to get the posts out. The series turned out to be a little longer than I...</div>
		<div class="CommentFooter">August 25, 2006 11:58 PM </div>
	</td>
	</tr>

	<tr valign="top">
	<td class="Comment CommentAvatar">
		<img src="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/anonymous.gif" border="1">&nbsp;
	</td>
	<td class="Comment CommentContent" width="100%">
		<h4 class="CommentTitle"><a id="ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl02_NameLink" rel="nofollow" title="TrackBack" href="http://blogs.msdn.com/dancre/archive/2006/09/15/756095.aspx">Dan Crevier's Blog</a> 
		said:</h4>
		<div class="CommentText">In part 5, I talked about commands and how they are used for behavior. Now, I want to talk about a better...</div>
		<div class="CommentFooter">September 15, 2006 11:56 AM </div>
	</td>
	</tr>

	<tr valign="top">
	<td class="Comment CommentAvatar">
		<img src="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/anonymous.gif" border="1">&nbsp;
	</td>
	<td class="Comment CommentContent" width="100%">
		<h4 class="CommentTitle"><a id="ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl03_NameLink" rel="nofollow" title="TrackBack" href="http://blogs.msdn.com/dancre/archive/2006/09/15/dm-v-vm-part-7-encapsulating-commands.aspx">Dan Crevier's Blog</a> 
		said:</h4>
		<div class="CommentText"><p>In part 5 , I talked about commands and how they are used for behavior. Now, I want to talk about a better</p>
</div>
		<div class="CommentFooter">October 11, 2006 9:59 PM </div>
	</td>
	</tr>

	<tr valign="top">
	<td class="Comment CommentAvatar">
		<img src="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/anonymous.gif" border="1">&nbsp;
	</td>
	<td class="Comment CommentContent" width="100%">
		<h4 class="CommentTitle"><a id="ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl04_NameLink" rel="nofollow" title="TrackBack" href="http://www.orbifold.net/default/?p=595">
The Orbifold»Blog Archive
 » XPad part II</a> 
		said:</h4>
		<div class="CommentText"><p>PingBack from <a rel="nofollow" target="_new" href="http://www.orbifold.net/default/?p=595">http://www.orbifold.net/default/?p=595</a></p>
</div>
		<div class="CommentFooter">January 2, 2007 1:17 PM </div>
	</td>
	</tr>

	<tr valign="top">
	<td class="Comment CommentAvatar">
		<img src="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/anonymous.gif" border="1">&nbsp;
	</td>
	<td class="Comment CommentContent" width="100%">
		<h4 class="CommentTitle"><a id="ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl05_NameLink" rel="nofollow" title="TrackBack" href="http://blogs.msdn.com/dancre/archive/2006/08/25/dm-v-vm-part-6-revisiting-the-data-model.aspx">Dan Crevier's Blog</a> 
		said:</h4>
		<div class="CommentText"><p>Sorry it's taking me so long to get the posts out. The series turned out to be a little longer than I</p>
</div>
		<div class="CommentFooter">January 6, 2007 11:37 PM </div>
	</td>
	</tr>

	</tbody></table>
	</div>






<em>New Comments to this post are disabled</em>

	
   
    
	        </div>
	    </div>
    

      </div></td></tr></tbody></table></td>
      <td style="font-size: 100%;" id="CommonRightColumn">
		
		<div class="CommonSidebar">
			
<div id="BlogLinksSideBar">
	
<div class="CommonSidebarArea">
	<h4 class="CommonSidebarHeader">This Blog</h4>
	<div class="CommonSidebarContent">
		<ul class="CommonSidebarList">
			<li><a id="ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___home" href="http://blogs.msdn.com/dancre/default.aspx">Home</a></li>
			
			
			<li><a id="ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___Contactlink1" href="http://blogs.msdn.com/dancre/contact.aspx">Email</a></li>
			<li><a id="ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___LinkListLink1" href="http://blogs.msdn.com/dancre/linklist.aspx">Links</a></li>
		</ul>
	</div>
</div>
</div>

<div id="TasksSideBar">
	
</div>

<div id="SubscriptionsSideBar">
	
<div class="CommonSidebarArea">
	<h4 class="CommonSidebarHeader">Syndication</h4>
	<div class="CommonSidebarContent">
		<ul class="CommonSidebarList">
			<li><a id="ctl00___ctl00___ctl00_ctl00_rcr_bsb___bs___rss" href="http://blogs.msdn.com/dancre/rss.xml">RSS 2.0</a></li>
			<li><a id="ctl00___ctl00___ctl00_ctl00_rcr_bsb___bs___atom" href="http://blogs.msdn.com/dancre/atom.xml">Atom 1.0</a></li>
		</ul>
	</div>
 </div>
</div>

<div id="RecentPostsSideBar">
	
<div class="CommonSidebarArea">
	<h4 class="CommonSidebarHeader">Recent Posts</h4>
	<div class="CommonSidebarContent">
		<ul class="CommonSidebarList">
		
				<li><a id="ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl00_Link" href="http://blogs.msdn.com/dancre/archive/2007/10/11/more-skydrive-goodness.aspx">More SkyDrive goodness</a></li>
			
				<li><a id="ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl01_Link" href="http://blogs.msdn.com/dancre/archive/2007/08/22/frustrating-error-using-remote-desktop.aspx">Frustrating error using Remote Desktop</a></li>
			
				<li><a id="ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl02_Link" href="http://blogs.msdn.com/dancre/archive/2007/08/21/tafiti.aspx">Tafiti</a></li>
			
				<li><a id="ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl03_Link" href="http://blogs.msdn.com/dancre/archive/2007/08/09/windows-live-skydrive-spaces-integration.aspx">Windows Live SkyDrive/Spaces integration</a></li>
			
				<li><a id="ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl04_Link" href="http://blogs.msdn.com/dancre/archive/2007/08/09/windows-live-folders-is-now-windows-live-skydrive.aspx">Windows Live Folders is now Windows Live SkyDrive!</a></li>
			
		</ul>
	</div>
 </div>

</div>

<div id="TagSideBar">
	<div class="CommonSidebarArea">
		<h4 class="CommonSidebarHeader">Tags</h4>
		<div class="CommonSidebarContent">
			<ul class="CommonSidebarTagCloud">
<li class="CommonTag3"><a href="http://blogs.msdn.com/dancre/archive/tags/ASP.NET/default.aspx" rel="tag">ASP.NET</a></li>
<li class="CommonTag6"><a href="http://blogs.msdn.com/dancre/archive/tags/Debugging/default.aspx" rel="tag">Debugging</a></li>
<li class="CommonTag1"><a href="http://blogs.msdn.com/dancre/archive/tags/DM-V-VM/default.aspx" rel="tag">DM-V-VM</a></li>
<li class="CommonTag1"><a href="http://blogs.msdn.com/dancre/archive/tags/Max/default.aspx" rel="tag">Max</a></li>
<li class="CommonTag6"><a href="http://blogs.msdn.com/dancre/archive/tags/PageModel/default.aspx" rel="tag">PageModel</a></li>
<li class="CommonTag4"><a href="http://blogs.msdn.com/dancre/archive/tags/PanelLayoutAnimator/default.aspx" rel="tag">PanelLayoutAnimator</a></li>
<li class="CommonTag2"><a href="http://blogs.msdn.com/dancre/archive/tags/pdc2005/default.aspx" rel="tag">pdc2005</a></li>
<li class="CommonTag4"><a href="http://blogs.msdn.com/dancre/archive/tags/Tips+_2600_amp_3B00_+Tricks/default.aspx" rel="tag">Tips &amp; Tricks</a></li>
<li class="CommonTag2"><a href="http://blogs.msdn.com/dancre/archive/tags/Utilities/default.aspx" rel="tag">Utilities</a></li>
<li class="CommonTag3"><a href="http://blogs.msdn.com/dancre/archive/tags/VirtualizingTilePanel/default.aspx" rel="tag">VirtualizingTilePanel</a></li>
<li class="CommonTag6"><a href="http://blogs.msdn.com/dancre/archive/tags/Vista/default.aspx" rel="tag">Vista</a></li>
<li class="CommonTag6"><a href="http://blogs.msdn.com/dancre/archive/tags/Web+Perf/default.aspx" rel="tag">Web Perf</a></li>
</ul>

		</div>
	</div>
</div> 

<div id="NewsSideBar">
	
<div class="CommonSidebarArea">
	<h4 class="CommonSidebarHeader">News</h4>
	<div class="CommonSidebarContent">
The posts on this weblog are provided "AS IS" with no warranties, and
confer no rights. The opinions expressed herein are my own personal
opinions and do not represent my employer's view in any way. </div>
</div>
</div>

<div id="ArchiveSideBar">
	
<div class="CommonSidebarArea">
	<h4 class="CommonSidebarHeader">Archives</h4>
	<div class="CommonSidebarContent">
		<ul class="CommonSidebarList">
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2007/10.aspx">October 2007 (1)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2007/08.aspx">August 2007 (4)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2007/07.aspx">July 2007 (4)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2007/06.aspx">June 2007 (1)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2007/03.aspx">March 2007 (1)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2007/02.aspx">February 2007 (1)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2007/01.aspx">January 2007 (1)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2006/12.aspx">December 2006 (6)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2006/11.aspx">November 2006 (2)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2006/10.aspx">October 2006 (3)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2006/09.aspx">September 2006 (8)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2006/08.aspx">August 2006 (7)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2006/07.aspx">July 2006 (6)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2006/03.aspx">March 2006 (6)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2006/02.aspx">February 2006 (11)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2006/01.aspx">January 2006 (1)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2005/12.aspx">December 2005 (2)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2005/11.aspx">November 2005 (1)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2005/10.aspx">October 2005 (3)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2005/09.aspx">September 2005 (7)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2005/06.aspx">June 2005 (6)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2005/05.aspx">May 2005 (11)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2005/04.aspx">April 2005 (3)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2005/02.aspx">February 2005 (3)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2005/01.aspx">January 2005 (3)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2004/12.aspx">December 2004 (15)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2004/11.aspx">November 2004 (4)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2004/10.aspx">October 2004 (10)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2004/09.aspx">September 2004 (8)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2004/08.aspx">August 2004 (8)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2004/07.aspx">July 2004 (5)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2004/06.aspx">June 2004 (5)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2004/05.aspx">May 2004 (13)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2004/04.aspx">April 2004 (15)</a></li>
			
				<li><a href="http://blogs.msdn.com/dancre/archive/2004/03.aspx">March 2004 (18)</a></li>
			
		</ul>
	</div>
</div>
</div>

		</div>
	
	</td>
  </tr>
</tbody></table>
<!--NOINDEX_START-->
<div id="CommonFooter">
<br style="overflow: hidden; line-height: 1px;" clear="all">
<table id="msviFooter" cellpadding="0" cellspacing="0" width="100%">
  <tbody><tr valign="bottom">
    <td id="msviFooter2"><div id="msviLocalFooter"><nobr><a href="http://go.microsoft.com/?linkid=317027">Manage Your Profile</a> |</nobr><wbr><nobr><a href="http://msdn.microsoft.com/isapi/gomscom.asp?target=/legal/" target="_parent">Legal</a> |</nobr><wbr><nobr><a href="http://register.microsoft.com/contactus30/contactus.asp?domain=msdn" target="_parent">Contact Us</a> |</nobr><wbr><nobr><a href="http://msdn.microsoft.com/flash/" target="_parent">MSDN Flash Newsletter</a></nobr></div>
      <div id="msviGlobalFooter"><span>©2005 Microsoft Corporation. All rights reserved.&nbsp;</span><nobr><a href="http://www.microsoft.com/info/cpyright.mspx">Terms of Use</a> |</nobr><wbr><nobr><a href="http://msdn.microsoft.com/library/toolbar/3.0/trademarks/en-us.mspx">Trademarks</a> |</nobr><wbr><nobr><a href="http://www.microsoft.com/info/privacy.mspx">Privacy Statement</a></nobr></div></td>
    <td bgcolor="#669aff" width="105"><img src="attaching-behavior-to-an-avalon-element-in-xaml.aspx_files/bottomMSFTLogo.jpg" alt="Microsoft" title="" border="0" height="29" width="105"></td>
  </tr>
</tbody></table>
</div>
</div>





<!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://blogs.msdn.com/dancre/archive/2006/03/04/attaching-behavior-to-an-avalon-element-in-xaml.aspx"
dc:identifier="http://blogs.msdn.com/dancre/archive/2006/03/04/attaching-behavior-to-an-avalon-element-in-xaml.aspx"
dc:title="Attaching behavior to an Avalon element in XAML"
trackback:ping="http://blogs.msdn.com/dancre/trackback.aspx?PostID=543854" />
</rdf:RDF>
-->
</form>

</body></html>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:src="clr-namespace:ICSharpCode.WpfDesign.Designer.Controls"
>
	<!--
		This file contains the default styles used by the Controls in ICSharpCode.WpfDesign.Designer.Controls
	-->
	
	<Style TargetType="{x:Type src:ResizeThumb}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type src:ResizeThumb}">
					<Rectangle Name="thumbRectangle"
					           Width="7" Height="7" SnapsToDevicePixels="True"
					           Stroke="Black" Fill="White" RadiusX="1.414" RadiusY="1.414"/>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPrimarySelection" Value="False">
							<Setter TargetName="thumbRectangle" Property="Stroke" Value="White"/>
							<Setter TargetName="thumbRectangle" Property="Fill" Value="Black"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="thumbRectangle" Property="Fill" Value="Gray"/>
						</Trigger>
						<Trigger Property="ResizeThumbVisible" Value="False">
							<Setter TargetName="thumbRectangle" Property="Visibility" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type src:SelectionFrame}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type src:SelectionFrame}">
					<Rectangle Fill="#519ABFE5" Stroke="#FF7A8787" StrokeThickness="1"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type src:ContainerDragHandle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type src:ContainerDragHandle}">
					<Canvas Height="13" Width="13" Name="Canvas" SnapsToDevicePixels="True">
						<Rectangle Height="13" Width="13" RadiusX="2" RadiusY="2"
						           Fill="#889ABFE5" Name="BorderRectangle" Stroke="#FF7A8FB5" StrokeThickness="1" />
						<Path Fill="#FF748EAA" Canvas.Left="1" Canvas.Top="1">
							<Path.Data>
								<GeometryGroup>
									<PathGeometry Figures="M5.5,0L3,3L8,3 M11,5.5L8,3L8,8 M5.5,11L3,8L8,8 M0,5.5L3,3L3,8" />
									<RectangleGeometry Rect="3,5,5,1" />
									<RectangleGeometry Rect="5,3,1,5" />
									<RectangleGeometry Rect="5,5,1,1" />
								</GeometryGroup>
							</Path.Data>
						</Path>
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type src:WindowClone}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type src:WindowClone}">
					<Border Background="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1,1,1,1" CornerRadius="5,5,5,5">
						<DockPanel Margin="4,0,4,4">
							<DockPanel Height="26" DockPanel.Dock="Top">
								<Image Width="16" Height="16" Margin="1,0,0,0" Source="{TemplateBinding Window.Icon}" />
								<Button Name="CloseButton" VerticalAlignment="Top" Width="43" Height="17" DockPanel.Dock="Right">
									<Path Fill="#FFF6F2F2" Stretch="Uniform" Margin="1" Stroke="#FF808080" Data="M160,400 L176,400 192,384 208,400 224,400 200,376 224,352 208,352 192,368 176,352 160,352 184,376 z"/>
								</Button>
								<Button Name="MaximiseButton" VerticalAlignment="Top" Width="25" Height="17" DockPanel.Dock="Right"/>
								<Button Name="MinimizeButton" VerticalAlignment="Top" Width="25" Height="17" DockPanel.Dock="Right">
									<!--<Rectangle Fill="#FFF6F2F2" RadiusX="0.5" RadiusY="0.5" Width="12" Height="5" Stroke="#FF808080" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>-->
								</Button>
								<Label Margin="4,0,0,0" Content="{TemplateBinding Window.Title}"/>
							</DockPanel>
							<Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
								<Border
									BorderBrush="{TemplateBinding Border.BorderBrush}"
									BorderThickness="{TemplateBinding Border.BorderThickness}"
									Background="{TemplateBinding Panel.Background}">
									<AdornerDecorator>
										<ContentPresenter
											ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
											Content="{TemplateBinding ContentControl.Content}" />
									</AdornerDecorator>
								</Border>
							</Border>
						</DockPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type src:ErrorBalloon}">
		<Setter Property="WindowStyle" Value="None"/>
		<Setter Property="AllowsTransparency" Value="True"/>
		<Setter Property="SizeToContent" Value="WidthAndHeight"/>
		<Setter Property="ShowInTaskbar" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type src:ErrorBalloon}">
					<Grid x:Name="LayoutRoot">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Rectangle RadiusX="10" RadiusY="10" Margin="12,36,4,4">
							<Rectangle.Fill>
								<SolidColorBrush Color="#41626262"/>
							</Rectangle.Fill>
						</Rectangle>
						<Border
							Margin="8,32,8,8"
							Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}"
							BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
							BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" Padding="10,10,10,10">
							<Border
								BorderBrush="{TemplateBinding Border.BorderBrush}"
								BorderThickness="{TemplateBinding Border.BorderThickness}"
								Background="{TemplateBinding Panel.Background}">
								<AdornerDecorator>
									<ContentPresenter
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										Content="{TemplateBinding ContentControl.Content}" />
								</AdornerDecorator>
							</Border>
						</Border>
						<Path Fill="{DynamicResource {x:Static SystemColors.InfoBrushKey}}"
						      Stretch="Fill" HorizontalAlignment="Left" Margin="34.75,9.25,0,0" VerticalAlignment="Top" Width="15.25" Height="24.5" Data="M34.75,33.75 L40.5,9.25 50,33.5 z"/>
						<Path Stretch="Fill" Stroke="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
						      HorizontalAlignment="Left" Margin="34.5,9.25,0,0" VerticalAlignment="Top" Width="16" Height="24" Data="M35,32.75 L40.5,9.25 50,32.75"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type src:GridRailAdorner}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type src:GridRailAdorner}">
					<Rectangle Fill="#302020ff"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type src:GridRowSplitterAdorner}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type src:GridRowSplitterAdorner}">
					<Grid Height="{x:Static src:GridRailAdorner.SplitterWidth}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="10"/> <!-- 10=RailSize -->
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<!-- put a transparent rectangle in the rail so the user does not have to hit the small railHandle -->
						<Rectangle Fill="Transparent"/>
						<Path Name="railHandle" Fill="#FFE6E6FF" Stretch="Fill" Stroke="#FF584FFF" Data="M0,0 L0,1 1,0.5 z"/>
						<Path Name="line" Stretch="Fill" Stroke="#FF584FFF" Grid.Column="2" Margin="-1 0 0 0" Data="M0,0.5 L1,0.5"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="railHandle" Property="Fill" Value="#FFFFB74F"/>
						</Trigger>
						<Trigger Property="IsPreview" Value="True">
							<Setter TargetName="railHandle" Property="Stroke" Value="#D0FFB74F"/>
							<Setter TargetName="line" Property="Stroke" Value="#D0FFB74F"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type src:GridColumnSplitterAdorner}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type src:GridColumnSplitterAdorner}">
					<Grid Width="{x:Static src:GridRailAdorner.SplitterWidth}">
						<Grid.RowDefinitions>
							<RowDefinition Height="10"/> <!-- 10=RailSize -->
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<!-- put a transparent rectangle in the rail so the user does not have to hit the small railHandle -->
						<Rectangle Fill="Transparent"/>
						<Path Name="railHandle" Fill="#FFE6E6FF" Stretch="Fill" Stroke="#FF584FFF" Data="M0,0 L1,0 0.5,1 z"/>
						<Path Name="line" Stretch="Fill" Stroke="#FF584FFF" Grid.Row="2" Margin="0 -1 0 0" Data="M0.5,0 L0.5,1"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="railHandle" Property="Fill" Value="#FFFFB74F"/>
						</Trigger>
						<Trigger Property="IsPreview" Value="True">
							<Setter TargetName="railHandle" Property="Stroke" Value="#D0FFB74F"/>
							<Setter TargetName="line" Property="Stroke" Value="#D0FFB74F"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>

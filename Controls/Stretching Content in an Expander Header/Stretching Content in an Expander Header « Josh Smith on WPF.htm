<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0088)http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/ -->
<HTML lang=en dir=ltr xmlns="http://www.w3.org/1999/xhtml"><HEAD 
profile=http://gmpg.org/xfn/11><TITLE>Stretching Content in an Expander Header « Josh Smith on WPF</TITLE>
<META http-equiv=Content-Type content="text/html; charset=UTF-8">
<META content="MSHTML 6.00.2900.3199" name=GENERATOR><!-- leave this for stats --><LINK media=screen 
href="Stretching Content in an Expander Header « Josh Smith on WPF_files/style.css" 
type=text/css rel=stylesheet><LINK title="RSS 2.0" 
href="http://joshsmithonwpf.wordpress.com/feed/" type=application/rss+xml 
rel=alternate><LINK href="http://joshsmithonwpf.wordpress.com/xmlrpc.php" 
rel=pingback><LINK 
href="Stretching Content in an Expander Header « Josh Smith on WPF_files/global.css" 
type=text/css rel=stylesheet><LINK title=RSD 
href="http://joshsmithonwpf.wordpress.com/xmlrpc.php?rsd" 
type=application/rsd+xml rel=EditURI>
<SCRIPT type=text/javascript>

function addLoadEvent(func) {
  var oldonload = window.onload;
  if (typeof window.onload != 'function') {
    window.onload = func;
  } else {
    window.onload = function() {
      oldonload();
      func();
    }
  }
}
</SCRIPT>

<SCRIPT 
src="Stretching Content in an Expander Header « Josh Smith on WPF_files/urchin.js" 
type=text/javascript></SCRIPT>

<SCRIPT type=text/javascript>
_uacct = "UA-52447-2";

_udn = "wordpress.com";
urchinTracker();
</SCRIPT>
<LINK title="Atom API" href="http://joshsmithonwpf.wordpress.com/wp-app.php" 
type=application/atomserv+xml rel=introspection><LINK 
href="http://joshsmithonwpf.wordpress.com/?openidserver=1" rel=openid.server>
<STYLE type=text/css>#headerimg {
	BACKGROUND: url(http://joshsmithonwpf.files.wordpress.com/2007/01/joshsmithonwpf_banner1.JPG) no-repeat
}
#header H1 {
	DISPLAY: none
}
#header .description {
	DISPLAY: none
}
</STYLE>
<LINK 
href="Stretching Content in an Expander Header « Josh Smith on WPF_files/SyntaxHighlighter.css" 
type=text/css rel=stylesheet></LINK></HEAD>
<BODY 
style="BACKGROUND-POSITION: center top; BACKGROUND-ATTACHMENT: fixed; BACKGROUND-IMAGE: url(http://s.wordpress.com/wp-content/themes/pub/contempt/images/blue_flower/bg.jpg); BACKGROUND-REPEAT: repeat-y">
<DIV id=page>
<DIV id=header>
<DIV id=headerimg style="CURSOR: pointer" 
onclick="location.href='http://joshsmithonwpf.wordpress.com';">
<H1><A href="http://joshsmithonwpf.wordpress.com/">Josh Smith on WPF</A></H1>
<DIV class=description>Thoughts about the Windows Presentation 
Foundation</DIV></DIV></DIV>
<UL id=pagebar 
style="BACKGROUND: url(http://s.wordpress.com/wp-content/themes/pub/contempt/images/blue_flower/pagebar.jpg)">
  <LI class="page_item "><A href="http://joshsmithonwpf.wordpress.com/">Home</A> 

  <LI class="page_item page-item-73"><A title="A Guided Tour of&nbsp;WPF" 
  href="http://joshsmithonwpf.wordpress.com/a-guided-tour-of-wpf/">A Guided Tour 
  of&nbsp;WPF</A> 
  <LI class="page_item page-item-2"><A title=About 
  href="http://joshsmithonwpf.wordpress.com/about/">About</A> 
  <LI class="page_item page-item-255"><A title=Presentation&nbsp;App 
  href="http://joshsmithonwpf.wordpress.com/presentation-app/">Presentation&nbsp;App</A> 

  <LI class="page_item page-item-19"><A title="WPF Challenge&nbsp;Submissions" 
  href="http://joshsmithonwpf.wordpress.com/xbap-submissions/">WPF 
  Challenge&nbsp;Submissions</A> </LI></UL>
<DIV id=grad 
style="BACKGROUND: url(http://s.wordpress.com/wp-content/themes/pub/contempt/images/blue_flower/topgrad.jpg); WIDTH: 100%; HEIGHT: 65px"></DIV>
<DIV class=widecolumn id=content>
<DIV class=post id=post-32>
<H2><A title="Permanent Link: Stretching Content in an Expander&nbsp;Header" 
href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/" 
rel=bookmark>Stretching Content in an Expander&nbsp;Header</A></H2>
<DIV class=entry>
<DIV class=snap_preview>
<P><A title="Snooping around in the default Expander&nbsp;visuals" 
href="http://joshsmithonwpf.files.wordpress.com/2007/02/unstretchedexpanderheader.PNG"></A>[EDIT]</P>
<P>Long after this post was written, a fellow by the name of Patrick Jones left 
a comment which showed another way to implement the functionality shown in this 
post.&nbsp; Upon reading his clever implementation, I realized that this is 
entirely possible to achieve without writing a single line of code.&nbsp; The 
trick relies on binding the Expander’s header element’s Width to the ActualWidth 
of the Expander.&nbsp; Here’s a demo:</P>
<P>&lt;Expander&gt;<BR>&nbsp; &lt;Expander.Header&gt;<BR>&nbsp;&nbsp;&nbsp; 
&lt;TextBlock<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Text=”I am header 
text…”<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Background=”Blue”<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<STRONG>Width=”{Binding<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
RelativeSource={RelativeSource<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Mode=FindAncestor,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
AncestorType={x:Type Expander}},<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Path=ActualWidth}”</STRONG><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&gt;<BR>&nbsp; 
&lt;/Expander.Header&gt;<BR>&nbsp; &lt;TextBlock 
Background=”Red”&gt;<BR>&nbsp;&nbsp;&nbsp; I am some content…<BR>&nbsp; 
&lt;/TextBlock&gt;<BR>&lt;/Expander&gt;</P>
<P>Note: This technique makes the header element wider than the available space 
(it does not subtract out the width of the Expander’s expansion 
indicator).&nbsp; If your header element has a border around it, such as a 
Button, this XAML-only technique will not work properly because the header 
element is clipped on the righthand side.&nbsp; If you need the header element 
to be exactly the right width, then you will need to use the approach explained 
below.</P>
<P>[/EDIT]</P>
<P>Someone recently asked me how to stretch the content of an Expander’s 
header.&nbsp; By default the Expander will force the header’s content to 
“auto-size” itself, like this:</P>
<P><A title="Default Expander header&nbsp;(unstretched)" 
href="Stretching Content in an Expander Header « Josh Smith on WPF_files/unstretchedexpanderheader_simple.png"><IMG 
alt="Default Expander header&nbsp;(unstretched)" 
src="Stretching Content in an Expander Header « Josh Smith on WPF_files/unstretchedexpanderheader_simple.png"></A></P>
<P>In the screenshot above, a DataTemplate was applied to the Expander’s 
HeaderTemplate property.&nbsp; That template consists of a Border with a blue 
background wrapping a ContentPresenter.&nbsp; Notice that the Border does not 
extend all the way to the right edge of the header area.&nbsp; The desired 
effect is to have the header content stretch, like this:</P>
<P><A title="Stretched Expander header&nbsp;content" 
href="Stretching Content in an Expander Header « Josh Smith on WPF_files/stretchedexpanderheader.png"><IMG 
alt="Stretched Expander header&nbsp;content" 
src="Stretching Content in an Expander Header « Josh Smith on WPF_files/stretchedexpanderheader.png"></A><A 
title="How to stretch the content of the Expander’s&nbsp;header" 
href="http://joshsmithonwpf.files.wordpress.com/2007/02/stretchedexpanderheader_code.PNG"></A></P>
<P>I first tried to make the header content stretch by setting properties on the 
Border in the DataTemplate.&nbsp; No matter which properties I set it had no 
effect, so I realized that a little <A title="The world's best WPF tool" 
href="http://www.blois.us/Snoop/" target=_blank>Snoop</A>ing&nbsp;was necessary 
to get to the bottom of this.&nbsp; I fired up Snoop and soon realized why I 
could not stretch the header content.&nbsp; The ContentPresenter which hosts the 
expanded HeaderTemplate elements&nbsp;(note, ‘expanded’ in the sense of 
‘instantiated’) has its HorizontalAlignment explicitly set to ‘Left’.&nbsp; 
<STRONG>D’oh!</STRONG>&nbsp;</P>
<P>Here’s what I’m referring to, when using the Expander’s default 
HeaderTemplate:</P>
<P><A title="Snooping around in the default Expander&nbsp;visuals" 
href="http://joshsmithonwpf.files.wordpress.com/2007/02/unstretchedexpanderheader.PNG"><IMG 
alt="Snooping around in the default Expander&nbsp;visuals" 
src="Stretching Content in an Expander Header « Josh Smith on WPF_files/unstretchedexpanderheader.thumbnail.png"></A><BR>(click 
me)</P>
<P>The question now is: how can we set that ContentPresenter’s 
HorizontalAlignment to ‘Stretch’?</P>
<P>I know of two good ways to go about setting that property.&nbsp; We could get 
a copy of Expander’s default control template (for each OS theme…), find the 
ContentPresenter in the template, set the HorizontalAlignment to ‘Stretch’, and 
then use that modified control template in our application.&nbsp; For you 
XAML-only zealots out there, that’s the way to go.</P>
<P>Alternatively, if you are not restricted by a XAML-only rule, you can perform 
a little kung fu in the code-behind to make it happen.&nbsp; Here’s the 
magic:<BR><A title="How to stretch the content of the Expander’s&nbsp;header" 
href="http://joshsmithonwpf.files.wordpress.com/2007/02/stretchedexpanderheader_code.PNG"><IMG 
alt="How to stretch the content of the Expander’s&nbsp;header" 
src="Stretching Content in an Expander Header « Josh Smith on WPF_files/stretchedexpanderheader_code.thumbnail.png"></A><BR>(click 
me)</P>
<P>You can download the demo project <A 
title="Stretched Expander Header - demo&nbsp;project" 
href="http://joshsmithonwpf.files.wordpress.com/2007/02/stretchedexpanderheaderzip.doc">here</A>.&nbsp; 
Change the file extension from .DOC to .ZIP and then decompress it.</P></DIV>
<P class="postmetadata alt"><SMALL>This entry was posted on Saturday, February 
24th, 2007 at 12:29 pm and is filed under <A title="View all posts in Debugging" 
href="http://wordpress.com/tag/debugging/" rel="category tag">Debugging</A>, <A 
title="View all posts in Praxis" href="http://wordpress.com/tag/praxis/" 
rel="category tag">Praxis</A>, <A title="View all posts in Snooping" 
href="http://wordpress.com/tag/snooping/" rel="category tag">Snooping</A>. You 
can follow any responses to this entry through the <A 
href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/feed/">RSS 
2.0</A> feed. You can <A 
href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/#respond">leave 
a response</A>, or <A 
href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/trackback/" 
rel=trackback>trackback</A> from your own site. </SMALL></P></DIV></DIV><!-- You can start editing here. -->
<H3 id=comments>12 Responses to “Stretching Content in an 
Expander&nbsp;Header”</H3>
<OL class=commentlist>
  <LI class=alt id=comment-3018><CITE><A href="http://www.thirtyninety.com/" 
  rel="external nofollow">Patrick Jones</A></CITE> Says: <BR><SMALL 
  class=commentmetadata><A title="" 
  href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/#comment-3018">July 
  18th, 2007 at 2:58 pm</A> </SMALL>
  <P>I struggled with this also, and came up with what is (I think) an even 
  better method. It combines a binding with a converter, and allows you to do 
  all of the kung-fu in XAML (except, of course, for defining the 
  IValueConverter class).</P>
  <P>Start with the converter:</P>
  <P>class ExpanderHeaderWidthConverter : IValueConverter<BR>{<BR>#region 
  IValueConverter Members</P>
  <P>public object Convert(object value, Type targetType, object parameter, 
  System.Globalization.CultureInfo culture)<BR>{<BR>double width = 
  (double)value;<BR>double diff = -25.0;<BR>if (parameter != 
  null)<BR>{<BR>Double.TryParse(parameter.ToString(), out diff);<BR>}<BR>return 
  width + diff;<BR>}</P>
  <P>public object ConvertBack(object value, Type targetType, object parameter, 
  System.Globalization.CultureInfo culture)<BR>{<BR>double width = 
  (double)value;<BR>double diff = -25.0;<BR>if (parameter != 
  null)<BR>{<BR>Double.TryParse(parameter.ToString(), out diff);<BR>}<BR>return 
  width - diff;<BR>}</P>
  <P>#endregion<BR>}</P>
  <P>Use the converter in markup:</P>
  <P>Voila! WPF has been faked out in spite of itself.</P>
  <LI id=comment-3019><IMG class="avatar avatar-joshsmith avatar-32" height=32 
  alt="" 
  src="Stretching Content in an Expander Header « Josh Smith on WPF_files/joshsmith-32.jpg" 
  width=32> <CITE><A href="http://joshsmithonwpf.wordpress.com/" 
  rel="external nofollow">Josh Smith</A></CITE> Says: <BR><SMALL 
  class=commentmetadata><A title="" 
  href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/#comment-3019">July 
  18th, 2007 at 3:04 pm</A> </SMALL>
  <P>Thanks Patrick. Unfortunately the XAML did not make it through (must have 
  been munged by the HTML processing). If you get a chance, please drop the XAML 
  in a file and post a link to it. I’m curious to see the complete example.</P>
  <P>Thanks,<BR>Josh</P>
  <LI class=alt id=comment-3020><CITE><A href="http://www.thirtyninety.com/" 
  rel="external nofollow">Patrick Jones</A></CITE> Says: <BR><SMALL 
  class=commentmetadata><A title="" 
  href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/#comment-3020">July 
  18th, 2007 at 3:07 pm</A> </SMALL>
  <P>OK — the XAML markup was stripped out. Curse of the angle brackets. Here it 
  is again, assuming it treats HTML entities correctly:</P>
  <P>&lt;Expander HorizontalAlignment=”Stretch” 
  VerticalAlignment=”Stretch”&gt;<BR>&lt;Expander.Header&gt;<BR>&lt;Button 
  Width=”{Binding Path=ActualWidth, Converter={StaticResource 
  ExpanderHeaderWidthConverter}, ElementName=StackPanel, Mode=OneWay}” 
  Content=”Button”/&gt;<BR>&lt;/Expander.Header&gt;<BR>&lt;StackPanel 
  x:Name=”StackPanel”/&gt;<BR>&lt;/Expander&gt;</P>
  <LI id=comment-3021><IMG class="avatar avatar-joshsmith avatar-32" height=32 
  alt="" 
  src="Stretching Content in an Expander Header « Josh Smith on WPF_files/joshsmith-32.jpg" 
  width=32> <CITE><A href="http://joshsmithonwpf.wordpress.com/" 
  rel="external nofollow">Josh Smith</A></CITE> Says: <BR><SMALL 
  class=commentmetadata><A title="" 
  href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/#comment-3021">July 
  18th, 2007 at 3:29 pm</A> </SMALL>
  <P>Hey Patrick, thanks for the great idea! After seeing your approach, I 
  realized that it is easy to take it one more step and remove all the code. 
  <IMG class=wp-smiley alt=:D 
  src="Stretching Content in an Expander Header « Josh Smith on WPF_files/icon_biggrin.gif"> 
  </P>
  <P>I’ve updated this blog post, showing the XAML-only way.</P>
  <P>Josh</P>
  <LI class=alt id=comment-3022><CITE><A 
  href="http://joshsmithonwpf.wordpress.com/2007/07/18/stretching-content-in-an-expander-header-take-two/" 
  rel="external nofollow">Stretching Content in an Expander Header (take two) « 
  Josh Smith on WPF</A></CITE> Says: <BR><SMALL class=commentmetadata><A 
  title="" 
  href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/#comment-3022">July 
  18th, 2007 at 3:38 pm</A> </SMALL>
  <P>[…] Content in an Expander Header (take&nbsp;two) A while ago I posted a 
  blog entry called Stretching Content in an Expander Header which discussed a 
  way to make the content of an Expander’s header occupy all available space 
  […]</P>
  <LI id=comment-3033><CITE><A href="http://www.thirtyninety.com/" 
  rel="external nofollow">Patrick Jones</A></CITE> Says: <BR><SMALL 
  class=commentmetadata><A title="" 
  href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/#comment-3033">July 
  18th, 2007 at 10:50 pm</A> </SMALL>
  <P>Hey Josh,</P>
  <P>I think there is a problem with the XAML-only way. Try it with a button in 
  the header and you will see that the right side of the button is cut off. That 
  is because binding to the width of the control does not take into account the 
  25 pixels or so taken up by the toggle button in the header. That’s why I used 
  the value converter to subtract some from the total width.</P>
  <P>– Patrick</P>
  <LI class=alt id=comment-3043><IMG class="avatar avatar-joshsmith avatar-32" 
  height=32 alt="" 
  src="Stretching Content in an Expander Header « Josh Smith on WPF_files/joshsmith-32.jpg" 
  width=32> <CITE><A href="http://joshsmithonwpf.wordpress.com/" 
  rel="external nofollow">Josh Smith</A></CITE> Says: <BR><SMALL 
  class=commentmetadata><A title="" 
  href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/#comment-3043">July 
  19th, 2007 at 7:47 am</A> </SMALL>
  <P>Patrick,</P>
  <P>Yeah, that is true for a header which contains a Button. I was updating my 
  sample, where the header content is just a simple TextBlock. For that example, 
  the XAML-only approach works OK.</P>
  <P>In the case of using a Button, or any element with a border around it, I 
  suppose you should use my original technique. The problem with your technique 
  is that it hard-codes the expansion indicator’s width. Since the indicator 
  could be swapped out with a different element via templating, that approach is 
  too brittle.</P>
  <P>Thanks again,<BR>Josh</P>
  <LI id=comment-3073><CITE>Jan Kucera</CITE> Says: <BR><SMALL 
  class=commentmetadata><A title="" 
  href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/#comment-3073">July 
  20th, 2007 at 4:18 am</A> </SMALL>
  <P>Hello,<BR>is there a similar way how to move the expander’s toggle button 
  on the opposite side? I mean like when you set FlowDirection=RightToLeft, but 
  without using this property.</P>
  <P>Jan</P>
  <LI class=alt id=comment-3078><IMG class="avatar avatar-joshsmith avatar-32" 
  height=32 alt="" 
  src="Stretching Content in an Expander Header « Josh Smith on WPF_files/joshsmith-32.jpg" 
  width=32> <CITE><A href="http://joshsmithonwpf.wordpress.com/" 
  rel="external nofollow">Josh Smith</A></CITE> Says: <BR><SMALL 
  class=commentmetadata><A title="" 
  href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/#comment-3078">July 
  20th, 2007 at 7:16 am</A> </SMALL>
  <P>Jan,</P>
  <P>The ToggleButton can only be “moved” by applying a custom control template 
  to the Expander. If I remember correctly, the ToggleButton is in a Grid with 
  two columns (one for the ToggleButton, another for the header content). If you 
  were to get a copy of Expander’s default template, you could tweak it so that 
  the columns are swapped.</P>
  <P>Josh</P>
  <LI id=comment-4123><CITE><A href="http://www.thirtyninety.com/" 
  rel="external nofollow">Patrick Jones</A></CITE> Says: <BR><SMALL 
  class=commentmetadata><A title="" 
  href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/#comment-4123">August 
  17th, 2007 at 11:20 am</A> </SMALL>
  <P>re: hard-coding the expansion indicator’s width in the IValueConverter:</P>
  <P>Actually, it is not hard-coded. It hard-codes a reasonable default (25), 
  but it also checks the parameter argument for an override. This override could 
  then be bound to the ActualWidth property of the relevant expansion control in 
  the template.</P>
  <LI class=alt id=comment-4125><IMG class="avatar avatar-joshsmith avatar-32" 
  height=32 alt="" 
  src="Stretching Content in an Expander Header « Josh Smith on WPF_files/joshsmith-32.jpg" 
  width=32> <CITE><A href="http://joshsmithonwpf.wordpress.com/" 
  rel="external nofollow">Josh Smith</A></CITE> Says: <BR><SMALL 
  class=commentmetadata><A title="" 
  href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/#comment-4125">August 
  17th, 2007 at 11:27 am</A> </SMALL>
  <P>Patrick,</P>
  <P>Good catch. I missed that point when I looked it over the first time.</P>
  <P>Josh</P>
  <LI id=comment-4904><CITE>Andy</CITE> Says: <BR><SMALL 
  class=commentmetadata><A title="" 
  href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/#comment-4904">September 
  7th, 2007 at 9:32 am</A> </SMALL>
  <P>Hello,<BR>I’m trying to have a cross functionality of a expander and a grid 
  splitter. by that I mean, I’d like to have the content in the splitter be 
  partially shown. When the user click the button the expander opens 
  completely…Any ideas???</P></LI></OL>
<H3 id=respond>Leave a Reply</H3>
<FORM id=commentform 
action=http://joshsmithonwpf.wordpress.com/wp-comments-post.php method=post>
<P><INPUT id=author tabIndex=1 size=22 name=author> <LABEL 
for=author><SMALL>Name (required)</SMALL></LABEL></P>
<P><INPUT id=email tabIndex=2 size=22 name=email> <LABEL for=email><SMALL>Mail 
(will not be published) (required)</SMALL></LABEL></P>
<P><INPUT id=url tabIndex=3 size=22 name=url> <LABEL 
for=url><SMALL>Website</SMALL></LABEL></P><!--<p><small><strong>XHTML:</strong> You can use these tags: <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></small></p>-->
<P><TEXTAREA id=comment tabIndex=4 name=comment rows=10 cols=100></TEXTAREA></P>
<P><INPUT id=submit tabIndex=5 type=submit value="Submit Comment" name=submit> 
<INPUT type=hidden value=32 name=comment_post_ID> </P></FORM></DIV>
<DIV id=sidebar>
<UL>
  <LI>
  <LI class="widget widget_text" id=text-1>
  <H2 class=widgettitle>RSS Feed</H2>
  <DIV class=textwidget><A href="http://joshsmithonwpf.wordpress.com/feed"><IMG 
  src="Stretching Content in an Expander Header « Josh Smith on WPF_files/u14.png"></A> 
  Feed the hungry with WPF</DIV>
  <LI class="widget widget_text" id=text-5>
  <H2 class=widgettitle>MY MVP PROFILE</H2>
  <DIV class=textwidget>
  <P align=center><A href="http://mvp.support.microsoft.com/default.aspx"><IMG 
  src="Stretching Content in an Expander Header « Josh Smith on WPF_files/mvp_fullcolor_forscreen_small.thumbnail.png"></A></P><BR>My 
  Microsoft MVP profile can be viewed <A 
  href="https://mvp.support.microsoft.com/profile=5F7EC527-FEBC-4A5D-A11F-EEF73467D3D5">here</A>.</DIV>
  <LI class="widget widget_text" id=text-3>
  <H2 class=widgettitle>Sponsor</H2>
  <DIV class=textwidget>
  <P><SPAN style="FONT-SIZE: 8pt">Infragistics <B>NetAdvantage for WPF</B> is 
  the world's first business-grade developer components for WPF, including 
  datagrids, carousels, and editors, with built-in visual themes including 
  Windows Vista Aero and Office 2007.&nbsp; Take advantage of our pure WPF 
  platform features; including exciting high resolution graphics, rich styling 
  and animation capabilities, and integrated UI virtualization technology. 
  </SPAN><B><SPAN style="FONT-SIZE: 8pt; COLOR: black">Everything is all 
  NEW!!</SPAN></B><SPAN style="FONT-SIZE: 8pt; COLOR: black"> This release gives 
  developers the first opportunity to experience the next generation in 
  NetAdvantage controls, designed and developed specifically for the WPF 
  platform. </SPAN><SPAN style="FONT-SIZE: 8pt"></SPAN></P>
  <P><SPAN style="FONT-SIZE: 8pt; COLOR: #1f497d"><A 
  href="http://www.infragistics.com/adcounter/webads.aspx?adid=JSWPFBLOG&amp;utm_source=WPFBlog&amp;utm_date=Apr07&amp;utm_type=WPF&amp;utm_size=textandlogo">TRY 
  IT NOW!</A></SPAN></P></DIV>
  <LI class="widget widget_search" id=search>
  <FORM id=searchform action=http://joshsmithonwpf.wordpress.com method=get>
  <DIV><INPUT id=s size=15 name=s><BR><INPUT type=submit value=Search> 
  </DIV></FORM>
  <LI class="widget widget_text" id=text-4>
  <H2 class=widgettitle>The WPF Challenge Winners</H2>
  <DIV class=textwidget><A 
  href="http://joshsmithonwpf.wordpress.com/2007/03/22/the-wpf-challenge-winners/">Check 
  out who won the grandest competition in human history...</A></DIV>
  <LI class="widget widget_recent_entries" id=recent-posts>
  <H2 class=widgettitle>Recent Harangues</H2>
  <UL>
    <LI><A 
    href="http://joshsmithonwpf.wordpress.com/2007/10/16/the-danger-of-assigning-event-handlers-in-xaml/">The 
    Danger of Assigning Event Handlers in&nbsp;XAML </A>
    <LI><A 
    href="http://joshsmithonwpf.wordpress.com/2007/10/13/an-article-about-the-wpf-thought-process/">An 
    article about the WPF thought&nbsp;process </A>
    <LI><A 
    href="http://joshsmithonwpf.wordpress.com/2007/10/07/binding-to-the-file-system/">Binding 
    to the file&nbsp;system </A>
    <LI><A 
    href="http://joshsmithonwpf.wordpress.com/2007/10/01/data-binding-the-splitbuttonâs-contextmenu/">Data 
    binding the SplitButton’s&nbsp;ContextMenu </A>
    <LI><A 
    href="http://joshsmithonwpf.wordpress.com/2007/09/30/upcoming-wpf-presentations/">Upcoming 
    WPF&nbsp;Presentations </A></LI></UL>
  <LI class="widget widget_categories" id=categories-1>
  <H2 class=widgettitle>Divide and Conquer</H2>
  <UL>
    <LI class="cat-item cat-item-217"><A 
    title="View all posts filed under Announcements" 
    href="http://joshsmithonwpf.wordpress.com/category/announcements/">Announcements</A> 
    (36) 
    <LI class="cat-item cat-item-1002883"><A 
    title="View all posts filed under Data Grids" 
    href="http://joshsmithonwpf.wordpress.com/category/data-grids/">Data 
    Grids</A> (2) 
    <LI class="cat-item cat-item-70886"><A 
    title="View all posts filed under Debugging" 
    href="http://joshsmithonwpf.wordpress.com/category/debugging/">Debugging</A> 
    (5) 
    <LI class="cat-item cat-item-5264"><A 
    title="View all posts filed under General Info" 
    href="http://joshsmithonwpf.wordpress.com/category/general-info/">General 
    Info</A> (11) 
    <LI class="cat-item cat-item-731906"><A 
    title="View all posts filed under Gotchas" 
    href="http://joshsmithonwpf.wordpress.com/category/gotchas/">Gotchas</A> (1) 

    <LI class="cat-item cat-item-17966"><A 
    title="View all posts filed under Intermezzo" 
    href="http://joshsmithonwpf.wordpress.com/category/intermezzo/">Intermezzo</A> 
    (7) 
    <LI class="cat-item cat-item-116238"><A 
    title="View all posts filed under Orcas" 
    href="http://joshsmithonwpf.wordpress.com/category/orcas/">Orcas</A> (1) 
    <LI class="cat-item cat-item-30585"><A 
    title="View all posts filed under Praxis" 
    href="http://joshsmithonwpf.wordpress.com/category/praxis/">Praxis</A> (40) 
    <LI class="cat-item cat-item-1548"><A 
    title="View all posts filed under Public Speaking" 
    href="http://joshsmithonwpf.wordpress.com/category/public-speaking/">Public 
    Speaking</A> (6) 
    <LI class="cat-item cat-item-287"><A title="View all posts filed under Rant" 
    href="http://joshsmithonwpf.wordpress.com/category/rant/">Rant</A> (2) 
    <LI class="cat-item cat-item-66841"><A 
    title="View all posts filed under Reading Material" 
    href="http://joshsmithonwpf.wordpress.com/category/reading-material/">Reading 
    Material</A> (24) 
    <LI class="cat-item cat-item-984139"><A 
    title="View all posts filed under Silverlight" 
    href="http://joshsmithonwpf.wordpress.com/category/silverlight/">Silverlight</A> 
    (1) 
    <LI class="cat-item cat-item-96136"><A 
    title="View all posts filed under Snooping" 
    href="http://joshsmithonwpf.wordpress.com/category/snooping/">Snooping</A> 
    (3) 
    <LI class="cat-item cat-item-714521"><A 
    title="View all posts filed under The WPF Challenge" 
    href="http://joshsmithonwpf.wordpress.com/category/the-wpf-challenge/">The 
    WPF Challenge</A> (13) 
    <LI class="cat-item cat-item-893962"><A 
    title="View all posts filed under Theoria" 
    href="http://joshsmithonwpf.wordpress.com/category/theoria/">Theoria</A> 
    (13) 
    <LI class="cat-item cat-item-3882"><A 
    title="View all posts filed under Unit Testing" 
    href="http://joshsmithonwpf.wordpress.com/category/unit-testing/">Unit 
    Testing</A> (2) 
    <LI class="cat-item cat-item-772681"><A 
    title="View all posts filed under WPF.JoshSmith" 
    href="http://joshsmithonwpf.wordpress.com/category/wpfjoshsmith/">WPF.JoshSmith</A> 
    (1) 
    <LI class="cat-item cat-item-814915"><A 
    title="View all posts filed under XAML Madness" 
    href="http://joshsmithonwpf.wordpress.com/category/xaml-madness/">XAML 
    Madness</A> (11) </LI></UL>
  <LI class="widget widget_archives" id=archives>
  <H2 class=widgettitle>Blog Log</H2>
  <UL>
    <LI><A title="October 2007" 
    href="http://joshsmithonwpf.wordpress.com/2007/10/">October 
    2007</A>&nbsp;(4) 
    <LI><A title="September 2007" 
    href="http://joshsmithonwpf.wordpress.com/2007/09/">September 
    2007</A>&nbsp;(5) 
    <LI><A title="August 2007" 
    href="http://joshsmithonwpf.wordpress.com/2007/08/">August 2007</A>&nbsp;(9) 

    <LI><A title="July 2007" 
    href="http://joshsmithonwpf.wordpress.com/2007/07/">July 2007</A>&nbsp;(10) 
    <LI><A title="June 2007" 
    href="http://joshsmithonwpf.wordpress.com/2007/06/">June 2007</A>&nbsp;(14) 
    <LI><A title="May 2007" 
    href="http://joshsmithonwpf.wordpress.com/2007/05/">May 2007</A>&nbsp;(15) 
    <LI><A title="April 2007" 
    href="http://joshsmithonwpf.wordpress.com/2007/04/">April 2007</A>&nbsp;(15) 

    <LI><A title="March 2007" 
    href="http://joshsmithonwpf.wordpress.com/2007/03/">March 2007</A>&nbsp;(14) 

    <LI><A title="February 2007" 
    href="http://joshsmithonwpf.wordpress.com/2007/02/">February 
    2007</A>&nbsp;(19) </LI></UL>
  <LI class="widget widget_text" id=text-2>
  <H2 class=widgettitle>The WPF.JoshSmith Library</H2>
  <DIV class=textwidget>
  <P align=center><A 
  href="http://www.codeproject.com/useritems/WPFJoshSmith.asp"><IMG 
  src="Stretching Content in an Expander Header « Josh Smith on WPF_files/cpbob.png"></A> 
  </P>
  <P>Download my free WPF library from the CodeProject.</P></DIV>
  <LI class="widget widget_links" id=links>
  <H2 class=widgettitle>Blogroll</H2>
  <UL>
    <LI><A title="Great practical advice on databinding in WPF." 
    href="http://www.beacosta.com/">Beatriz Costa</A> 
    <LI><A 
    title="A great series of blog posts about a design pattern tailored to WPF, by Dan Crevier." 
    href="http://blogs.msdn.com/dancre/archive/2006/10/11/datamodel-view-viewmodel-pattern-series.aspx">DM-V-VM 
    Pattern Series</A> 
    <LI><A title="Insights from a member of the WPF team at Microsoft." 
    href="http://blogs.msdn.com/mikehillberg/default.aspx">Mike Hillberg on 
    WPF</A> 
    <LI><A title="The rants and raves of The WPF Hickster." 
    href="http://www.nickthuesen.com/">Nick Thuesen</A> 
    <LI><A title="Interesting and useful information about WPF." 
    href="http://pavanpodila.spaces.live.com/blog/">Pavan Podila</A> 
    <LI><A title="Words from a WPF Program Manager at Microsoft." 
    href="http://rrelyea.spaces.live.com/">Rob Relyea</A> 
    <LI><A 
    title="Lee Brimelow’s excellent blog about WPF, with a focus on graphical design." 
    href="http://www.thewpfblog.com/">The WPF Blog</A> 
    <LI><A title="Great content by the folks who write the WPF docs." 
    href="http://blogs.msdn.com/wpfsdk/">The WPF SDK Blog</A> 
    <LI><A title="A comprehensive list of WPF blogs." 
    href="http://blogs.msdn.com/tims/articles/475132.aspx">Tim Sneath’s WPF Blog 
    Roll</A> </LI></UL>
  <LI class="widget widget_stats_topposts" id=top-posts>
  <H2 class=widgettitle>The posts people really like</H2>
  <UL>
    <LI><A href="http://joshsmithonwpf.wordpress.com/a-guided-tour-of-wpf/">A 
    Guided Tour of WPF</A>
    <LI><A 
    href="http://joshsmithonwpf.wordpress.com/2007/05/05/binding-a-treeview-to-a-dataset/">Binding 
    a TreeView to a DataSet</A>
    <LI><A 
    href="http://joshsmithonwpf.wordpress.com/2007/10/16/the-danger-of-assigning-event-handlers-in-xaml/">The 
    Danger of Assigning Event Handlers in XAML</A>
    <LI><A 
    href="http://joshsmithonwpf.wordpress.com/presentation-app/">Presentation 
    App</A>
    <LI><A 
    href="http://joshsmithonwpf.wordpress.com/2007/02/24/stretching-content-in-an-expander-header/">Stretching 
    Content in an Expander Header</A>
    <LI><A 
    href="http://joshsmithonwpf.wordpress.com/2007/09/05/wpf-vs-windows-forms/">WPF 
    vs. Windows Forms</A>
    <LI><A 
    href="http://joshsmithonwpf.wordpress.com/2007/06/12/searching-for-items-in-a-listbox/">Searching 
    for items in a ListBox</A>
    <LI><A 
    href="http://joshsmithonwpf.wordpress.com/2007/02/10/the-wpf-challenge/">The 
    WPF Challenge</A>
    <LI><A href="http://joshsmithonwpf.wordpress.com/about/">About</A>
    <LI><A 
    href="http://joshsmithonwpf.wordpress.com/2007/03/29/tips-on-how-to-debug-and-learn-about-wpf/">Tips 
    on how to debug and learn about WPF</A></LI></UL></LI></UL></DIV>
<DIV id=footer>
<P>Theme: Contempt by <A href="http://www.vault9.net/" 
rel=designer>Vault9</A>.<BR><A href="http://wordpress.com/" rel=generator>Blog 
at WordPress.com</A>. </P></DIV></DIV>
<SCRIPT 
src="Stretching Content in an Expander Header « Josh Smith on WPF_files/quant.js" 
type=text/javascript></SCRIPT>

<SCRIPT type=text/javascript>_qmeta="qc:adt=0;bti=Josh+Smith+on+WPF;lan=en;dat=20070224;pti=Stretching+Content+in+an+Expander+Header;own=joshsmith";_qacct="p-18-mFEk4J448M";quantserve();</SCRIPT>
<NOSCRIPT>
<P><IMG style="DISPLAY: none" height=1 alt="" 
src="Stretching Content in an Expander Header « Josh Smith on WPF_files/p-18-mFEk4J448M.gif" 
width=1></P></NOSCRIPT>
<SCRIPT 
src="Stretching Content in an Expander Header « Josh Smith on WPF_files/w.js" 
type=text/javascript></SCRIPT>

<SCRIPT type=text/javascript>
st_go({blog:'737883',v:'wpcom',post:'32',subd:'joshsmithonwpf'});
ex_go({x_theme:'contempt',x_lang:'en',x_dc:'luv',x_adt:'0',x_public:'1',x_mapped:'0',x_loggedin:'0',x_noads:'seen',x_ads:'no',x_pagetype:'permalink',x_postage:'30to365'});
addLoadEvent(function(){linktracker_init(737883,32);});
</SCRIPT>
<!-- SyntaxHighlighter Stuff -->
<SCRIPT 
src="Stretching Content in an Expander Header « Josh Smith on WPF_files/shCore.js" 
type=text/javascript></SCRIPT>

<SCRIPT type=text/javascript>
	dp.SyntaxHighlighter.ClipboardSwf = 'http://s.wordpress.com/wp-content/plugins/highlight/clipboard.swf';
	dp.SyntaxHighlighter.HighlightAll('code');
</SCRIPT>
</BODY></HTML>

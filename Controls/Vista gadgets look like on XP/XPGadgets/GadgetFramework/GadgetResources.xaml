<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" 
  xmlns:gadgetframework="clr-namespace:GadgetFramework">
  <!-- Resource dictionary entries should be defined here. -->
  <ControlTemplate x:Key="PropertiesButtonTemplate" TargetType="{x:Type ToggleButton}">
    <Grid x:Name="Grid">
			<ItemsControl d:IsGroup="True" HorizontalAlignment="Left" Margin="1.00964898861684,0.997138959977238,0,0" x:Name="Group" VerticalAlignment="Top" Width="8.04104279104544" Height="7.63590709556599">
				<ItemsControl.Template>
					<ControlTemplate TargetType="{x:Type ItemsControl}">
						<Viewbox Stretch="Fill">
							<Canvas Width="13.7217759321982" Height="13.4110738431931" IsItemsHost="True"/>
						</Viewbox>
					</ControlTemplate>
				</ItemsControl.Template>
			<Path Fill="#FFFFFFFF" Stretch="Fill" StrokeEndLineCap="Round" Stroke="{x:Null}" StrokeStartLineCap="Round" StrokeThickness="3" Margin="0,0,0,0" x:Name="Rectangle" Data="M0,0 L11.819169,11.577962 0,11.577962 z" Width="11.8191690444946" Height="11.5779619216919" Canvas.Left="1.33226762955019E-15" Canvas.Top="1.83311192150115"/>
			<Path Fill="#FFFFFFFF" Stretch="Fill" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeThickness="3" Margin="0,0,0,0" x:Name="Rectangle1" Data="M0,0 L11.819169,0 11.819169,11.577962 0,0 z" Width="11.8191690444946" Height="11.5779619216919" Canvas.Left="1.90260688770358" Canvas.Top="0"/>
			</ItemsControl>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Cursor" Value="Hand" TargetName="Grid"/>
				<Setter Property="Fill" Value="#FFBCBCBC" TargetName="Rectangle"/>
				<Setter Property="Fill" Value="#FFBCBCBC" TargetName="Rectangle1"/>
				<Setter Property="Panel.Background" Value="#00BCBCBC" TargetName="Grid"/>
      </Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Fill" Value="#FFC8C8C8" TargetName="Rectangle"/>
				<Setter Property="Fill" Value="#FFC8C8C8" TargetName="Rectangle1"/>
			</Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="CloseButtonTemplate" TargetType="{x:Type Button}">
    <Grid x:Name="Grid">
      <ItemsControl d:IsGroup="True" Margin="0.698005252509756,0.571899705681252,0.748133844703951,0.874239391532505" MinHeight="0" MinWidth="0" x:Name="Group">
        <ItemsControl.Template>
          <ControlTemplate TargetType="{x:Type ItemsControl}">
            <Viewbox Stretch="Fill">
              <Canvas Width="10.5538609027863" Height="10.5538609027863" IsItemsHost="True"/>
            </Viewbox>
          </ControlTemplate>
        </ItemsControl.Template>
        <Path Fill="#FF000000" Stretch="Fill" StrokeEndLineCap="Round" Stroke="#FFFFFFFF" StrokeStartLineCap="Round" StrokeThickness="3" Margin="0,0,0,0" x:Name="Path" Width="10.5538604259491" Height="10.5538609027863" Canvas.Left="2.38418597753309E-07" Canvas.Top="6.66133814775094E-16" Data="M1.6393759,2.0807463 L9.1932367,9.6346071"/>
        <Path RenderTransformOrigin="0.5,0.5" Fill="#FF000000" Stretch="Fill" StrokeEndLineCap="Round" Stroke="#FFFFFFFF" StrokeStartLineCap="Round" StrokeThickness="3" Margin="0,0,0,0" x:Name="Path_Copy" Width="10.5538604259491" Height="10.5538609027863" Canvas.Left="2.38418597753309E-07" Canvas.Top="3.33066907387547E-15" Data="M1.6393759,2.0807463 L9.1932367,9.6346071">
          <Path.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleX="1" ScaleY="1"/>
              <SkewTransform AngleX="0" AngleY="0"/>
              <RotateTransform Angle="90"/>
              <TranslateTransform X="0" Y="0"/>
            </TransformGroup>
          </Path.RenderTransform>
        </Path>
      </ItemsControl>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Cursor" Value="Hand" TargetName="Grid"/>
        <Setter Property="Shape.Stroke" Value="#FF9E9E9E" TargetName="Path"/>
        <Setter Property="Shape.Stroke" Value="#FF9E9E9E" TargetName="Path_Copy"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="GadgetStyle" TargetType="{x:Type UserControl}">
    <Setter Property="TextElement.FontFamily" Value="Segoe UI" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type UserControl}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="OnShowPropertiesAnimation" d:StoryboardName="">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame d:KeyEase="Linear;Linear;0.5;0.5;0.5;0.5" KeySpline="0.5,0.5,0.5,0.5" Value="0.5" KeyTime="00:00:00.3000000"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame d:KeyEase="Linear;Linear;0.5;0.5;0.5;0.5" KeySpline="0.5,0.5,0.5,0.5" Value="0.5" KeyTime="00:00:00.3000000"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PropertiesPageContentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame d:KeyEase="Linear;Linear;0.5;0.5;0.5;0.5" KeySpline="0.5,0.5,0.5,0.5" Value="1" KeyTime="00:00:00.3000000"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PropertiesPageContentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame d:KeyEase="Linear;Linear;0.5;0.5;0.5;0.5" KeySpline="0.5,0.5,0.5,0.5" Value="1" KeyTime="00:00:00.3000000"/>
              </DoubleAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PropertiesPageContentPresenter" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame d:KeyEase="Linear;Hold;0.5;0.5;0;0" Value="{x:Static Visibility.Visible}" KeyTime="00:00:00"/>
                <DiscreteObjectKeyFrame d:KeyEase="Linear;Hold;0.5;0.5;0;0" Value="{x:Static Visibility.Visible}" KeyTime="00:00:00.3000000"/>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnHidePropertiesAnimation" d:StoryboardName="OnHidePropertiesAnimation">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PropertiesPageContentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame d:KeyEase="Linear;Linear;0.5;0.5;0.5;0.5" KeySpline="0.5,0.5,0.5,0.5" Value="0.25" KeyTime="00:00:00.3000000"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PropertiesPageContentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame d:KeyEase="Linear;Linear;0.5;0.5;0.5;0.5" KeySpline="0.5,0.5,0.5,0.5" Value="0.25" KeyTime="00:00:00.3000000"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame d:KeyEase="Linear;Linear;0.5;0.5;0.5;0.5" KeySpline="0.5,0.5,0.5,0.5" Value="1" KeyTime="00:00:00.3000000"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame d:KeyEase="Linear;Linear;0.5;0.5;0.5;0.5" KeySpline="0.5,0.5,0.5,0.5" Value="1" KeyTime="00:00:00.3000000"/>
              </DoubleAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PropertiesPageContentPresenter" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame d:KeyEase="Linear;Hold;0.5;0.5;0;0" Value="{x:Static Visibility.Visible}" KeyTime="00:00:00"/>
                <DiscreteObjectKeyFrame d:KeyEase="Linear;Hold;0.5;0.5;0;0" Value="{x:Static Visibility.Collapsed}" KeyTime="00:00:00.3000000"/>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <gadgetframework:SmoothMove x:Name="SmoothMove">
            <Grid MinHeight="100" MinWidth="100" x:Name="Grid" Width="Auto" Height="Auto" Opacity="1" Background="#00000000" OpacityMask="{x:Null}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="ColumnDefinition" Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition x:Name="RowDefinition" MaxHeight="Infinity"/>
              </Grid.RowDefinitions>
              <Rectangle Fill="#01000000" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,0,0,0" x:Name="Rectangle1" VerticalAlignment="Top" Width="75" Height="75"/>
              <ContentPresenter RenderTransformOrigin="1,0" HorizontalAlignment="Stretch" x:Name="PropertiesPageContentPresenter" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Content="{Binding PropertyPageContent}" Visibility="Collapsed">
                <ContentPresenter.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleX="0.25" ScaleY="0.25"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="0"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </ContentPresenter.RenderTransform>
              </ContentPresenter>
              <ContentPresenter Margin="0,0,0,0" x:Name="ContentPresenter" RenderTransformOrigin="1,0" HorizontalAlignment="Right" VerticalAlignment="Top" Width="{Binding ActualGadgetWidth}" Height="{Binding ActualGadgetHeight}">
                <ContentPresenter.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="0"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </ContentPresenter.RenderTransform>
              </ContentPresenter>
              <Grid Opacity="1" Visibility="Collapsed" HorizontalAlignment="Right" Margin="0,1.21957853106621,1.21413898363673,0" x:Name="Grid1" VerticalAlignment="Top" Width="15.0414685498166" Height="38.4577211559914" Background="{x:Null}">
                <Rectangle Fill="#FF000000" Stroke="#FF6B6B6B" RadiusX="6.04738777379221" RadiusY="6.04738777379221" Margin="0,0,0,0" x:Name="Rectangle"/>
                <Button Margin="0,2.48185598641274,0,0" Template="{StaticResource CloseButtonTemplate}" x:Name="CloseButton" VerticalAlignment="Top" Height="9.63397029674913" Content="Button" HorizontalAlignment="Center" Width="10.2912007698744"/>
                <ToggleButton Margin="0,12.1067203970977,0,16.8997114165401" Template="{StaticResource PropertiesButtonTemplate}" x:Name="PropertiesButton" Width="9.89686248599922" HorizontalAlignment="Center" MinHeight="0" Command="{Binding ShowHidePropertiesPageCommand}"/>
                <Ellipse Fill="#FF000000" StrokeEndLineCap="Round" Stroke="#FF9E9E9E" StrokeStartLineCap="Round" StrokeThickness="3" HorizontalAlignment="Left" Margin="1.52073427490831,0,0,7.3415604092957" x:Name="Ellipse" VerticalAlignment="Bottom" Width="3.02326017637611" Height="3.02326017637611"/>
                <Ellipse d:LayoutOverrides="Width, Height" Fill="#FF000000" StrokeEndLineCap="Round" Stroke="#FF9E9E9E" StrokeStartLineCap="Round" StrokeThickness="3" Margin="6.02276301581622,0,5.99544535762426,7.3415604092957" x:Name="Ellipse_Copy" VerticalAlignment="Bottom" Width="3.02326017637611" Height="3.02326017637611"/>
                <Ellipse d:LayoutOverrides="Width, Height" Fill="#FF000000" StrokeEndLineCap="Round" Stroke="#FF9E9E9E" StrokeStartLineCap="Round" StrokeThickness="3" HorizontalAlignment="Right" Margin="0,0,1.52073427490831,7.3415604092957" x:Name="Ellipse_Copy1" VerticalAlignment="Bottom" Width="3.02326017637611" Height="3.02326017637611"/>
                <Ellipse d:LayoutOverrides="Width, Height" Fill="#FF000000" StrokeEndLineCap="Round" Stroke="#FF9E9E9E" StrokeStartLineCap="Round" StrokeThickness="3" HorizontalAlignment="Left" Margin="1.52073427490831,0,0,4.02254652001323" x:Name="Ellipse_Copy2" VerticalAlignment="Bottom" Width="3.02326017637611" Height="3.02326017637611"/>
                <Ellipse d:LayoutOverrides="Width, Height" Fill="#FF000000" StrokeEndLineCap="Round" Stroke="#FF9E9E9E" StrokeStartLineCap="Round" StrokeThickness="3" Margin="6.02276301581622,0,5.99544535762426,4.02254652001323" x:Name="Ellipse_Copy3" VerticalAlignment="Bottom" Width="3.02326017637611" Height="3.02326017637611"/>
                <Ellipse d:LayoutOverrides="Width, Height" Fill="#FF000000" StrokeEndLineCap="Round" Stroke="#FF9E9E9E" StrokeStartLineCap="Round" StrokeThickness="3" HorizontalAlignment="Right" Margin="0,0,1.52073427490831,4.02254652001323" x:Name="Ellipse_Copy4" VerticalAlignment="Bottom" Width="3.02326017637611" Height="3.02326017637611"/>
                <Ellipse d:LayoutOverrides="Width, Height" Fill="#FF000000" StrokeEndLineCap="Round" Stroke="#FF9E9E9E" StrokeStartLineCap="Round" StrokeThickness="3" HorizontalAlignment="Left" Margin="1.52073427490831,0,0,11.0458066963893" x:Name="Ellipse_Copy5" VerticalAlignment="Bottom" Width="3.02326017637611" Height="3.02326017637611"/>
                <Ellipse d:LayoutOverrides="Width, Height" Fill="#FF000000" StrokeEndLineCap="Round" Stroke="#FF9E9E9E" StrokeStartLineCap="Round" StrokeThickness="3" Margin="6.02276301581622,0,5.99544535762426,11.0458066963893" x:Name="Ellipse_Copy6" VerticalAlignment="Bottom" Width="3.02326017637611" Height="3.02326017637611"/>
                <Ellipse d:LayoutOverrides="Width, Height" Fill="#FF000000" StrokeEndLineCap="Round" Stroke="#FF9E9E9E" StrokeStartLineCap="Round" StrokeThickness="3" HorizontalAlignment="Right" Margin="0,0,1.52073427490831,11.0458066963893" x:Name="Ellipse_Copy7" VerticalAlignment="Bottom" Width="3.02326017637611" Height="3.02326017637611"/>
              </Grid>
            </Grid>
          </gadgetframework:SmoothMove>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Visibility" Value="Visible" TargetName="Grid1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Opacity" Value="1"/>
  </Style>
  <Style x:Key="OpacityMenuItemStyle" TargetType="{x:Type MenuItem}">
    <Setter Property="Header" Value="{Binding Display}"/>
    <Setter Property="IsChecked" Value="{Binding IsChecked}"/>
    <Setter Property="Command" Value="{Binding OpacityChangedCommand}" />
    <Setter Property="CommandParameter" Value="{Binding TransparencyValue}" />
  </Style>
  <ContextMenu x:Key="GadgetContextMenu">
    <MenuItem Header="Set Gadget Transparency" ItemsSource="{Binding GadgetTransparencyModel.GadgetTransparencies}" ItemContainerStyle="{StaticResource OpacityMenuItemStyle}" />
    <MenuItem Header="Always on Top" Command="{x:Static gadgetframework:Gadget.AlwaysOnTopCommand}" />
  </ContextMenu>
</ResourceDictionary>
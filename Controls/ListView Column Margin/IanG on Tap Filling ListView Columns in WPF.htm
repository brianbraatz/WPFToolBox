<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0074)http://www.interact-sw.co.uk/iangblog/2007/05/30/fill-wpf-listview-columns -->
<HTML xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>IanG on Tap: Filling ListView Columns in WPF</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8">
<META content="Ian Griffiths' Weblog" name=description><LINK id=ctl00_rssLink 
title=RSS href="../../../../rss2.0" type=application/rss+xml rel=alternate><LINK 
href="IanG on Tap Filling ListView Columns in WPF_files/blog.css" type=text/css 
rel=stylesheet>
<META content="MSHTML 6.00.2900.3199" name=GENERATOR></HEAD>
<BODY>
<DIV class=blogTitle>
<H1>IanG on Tap</H1>
<P id=ctl00_subtitle><A href="http://www.interact-sw.co.uk/iangblog/">Ian 
Griffiths in Weblog Form</A> (<A 
href="http://www.interact-sw.co.uk/iangblog/rss2.0">RSS 2.0</A>)</P></DIV>
<DIV class=blogRightColumn>
<SCRIPT type=text/javascript><!--
google_ad_client = "pub-5895148714260970";
google_ad_width = 234;
google_ad_height = 60;
google_ad_format = "234x60_as";
google_ad_type = "text_image";
//2007-05-08: IanG Blog
google_ad_channel = "1140968575";
google_color_border = "336699";
google_color_bg = "FFFFFF";
google_color_link = "0000FF";
google_color_text = "000000";
google_color_url = "008000";
//-->
</SCRIPT>

<SCRIPT src="IanG on Tap Filling ListView Columns in WPF_files/show_ads.js" 
type=text/javascript>
</SCRIPT>

<DIV class=blogNav>
<H3>Blog Navigation</H3>
<TABLE>
  <TBODY>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/10/">October 
      (2007)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/09/">September 
      (2007)</A></P></TD>
    <TD>
      <P>(3 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/08/">August 
      (2007)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/07/">July 
      (2007)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/06/">June 
      (2007)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/05/">May 
      (2007)</A></P></TD>
    <TD>
      <P>(8 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/04/">April 
      (2007)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/03/">March 
      (2007)</A></P></TD>
    <TD>
      <P>(7 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/02/">February 
      (2007)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/01/">January 
      (2007)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/11/">November 
      (2006)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/10/">October 
      (2006)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/09/">September 
      (2006)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/06/">June 
      (2006)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/05/">May 
      (2006)</A></P></TD>
    <TD>
      <P>(4 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/04/">April 
      (2006)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/03/">March 
      (2006)</A></P></TD>
    <TD>
      <P>(5 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/01/">January 
      (2006)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/12/">December 
      (2005)</A></P></TD>
    <TD>
      <P>(3 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/11/">November 
      (2005)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/10/">October 
      (2005)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/09/">September 
      (2005)</A></P></TD>
    <TD>
      <P>(8 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/08/">August 
      (2005)</A></P></TD>
    <TD>
      <P>(7 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/06/">June 
      (2005)</A></P></TD>
    <TD>
      <P>(3 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/05/">May 
      (2005)</A></P></TD>
    <TD>
      <P>(7 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/04/">April 
      (2005)</A></P></TD>
    <TD>
      <P>(6 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/03/">March 
      (2005)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/02/">February 
      (2005)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/01/">January 
      (2005)</A></P></TD>
    <TD>
      <P>(5 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/12/">December 
      (2004)</A></P></TD>
    <TD>
      <P>(5 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/11/">November 
      (2004)</A></P></TD>
    <TD>
      <P>(7 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/10/">October 
      (2004)</A></P></TD>
    <TD>
      <P>(3 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/09/">September 
      (2004)</A></P></TD>
    <TD>
      <P>(7 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/08/">August 
      (2004)</A></P></TD>
    <TD>
      <P>(16 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/07/">July 
      (2004)</A></P></TD>
    <TD>
      <P>(10 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/06/">June 
      (2004)</A></P></TD>
    <TD>
      <P>(27 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/05/">May 
      (2004)</A></P></TD>
    <TD>
      <P>(15 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/04/">April 
      (2004)</A></P></TD>
    <TD>
      <P>(15 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/03/">March 
      (2004)</A></P></TD>
    <TD>
      <P>(13 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/02/">February 
      (2004)</A></P></TD>
    <TD>
      <P>(16 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/01/">January 
      (2004)</A></P></TD>
    <TD>
      <P>(15 items)</P></TD></TR></TBODY></TABLE>
<P id=ctl00_ctl01_pBlogHome><A 
href="http://www.interact-sw.co.uk/iangblog/">Blog Home</A></P>
<P id=ctl00_ctl01_pBlogRss><A 
href="http://www.interact-sw.co.uk/iangblog/rss2.0">RSS 2.0</A></P>
<H3>Writing</H3>
<P><A href="http://www.oreilly.com/catalog/9780596510374/">Programming 
WPF</A></P>
<P><A href="http://www.oreilly.com/catalog/netwinformian/">.NET Windows Forms in 
a Nutshell</A></P>
<P><A href="http://www.oreilly.com/catalog/mastvsnet/">Mastering Visual Studio 
.NET</A></P>
<H3>Other Sites</H3>
<P><A href="http://www.interact-sw.co.uk/">Interact Software</A></P></DIV></DIV>
<DIV class=blogBody>
<HR>

<H2>Filling ListView Columns in WPF - <SPAN class=blogDate>Wednesday 30 May, 
2007, 6:00 PM </SPAN></H2>
<DIV class=blogitem>
<P>WPF’s <CODE>ListView</CODE> control left-aligns the content of columns by 
default. This can lead to slightly surprising results when you use a 
<CODE>TextBox</CODE> in one of the columns:</P>
<P><IMG alt="ListView with inconsistent TextBox sizes" 
src="IanG on Tap Filling ListView Columns in WPF_files/ListViewBadTextBoxWidth.png"></P>
<P>What’s happening here is that the <CODE>TextBox</CODE> is being sized to 
content. (That’s what happens if you left-align an element in WPF.) It gets 
worse if your text boxes are initially empty—they start out very thin. And as 
you type into them, they expand. It’s hard to imagine why anyone might want that 
behaviour, so you’ll probably want to change it.</P>
<P>A simple but somewhat unsatisfactory fix is to set the <CODE>Width</CODE> of 
the <CODE>TextBox</CODE>. This lets you provide a more sensible initial width. 
It also gets rid of the size-to-content behaviour, which good because you 
usually don’t want that on a <CODE>TextBox</CODE>. The problem with this is that 
a fixed-width <CODE>TextBox</CODE> will not resize when the user resizes the 
column by dragging the header. Wouldn’t it be better if the <CODE>TextBox</CODE> 
simply took its width from the column header? That way, you can set a sensible 
initial width, and then allow the user to make the text boxes wider by resizing 
the column.</P>
<P>To do this, we need to make sure the list column contents have a horizontal 
alignment of <CODE>Stretch</CODE>, which means ‘make this element the same width 
as its container’. Throughout most of WPF, <CODE>Stretch</CODE> is the default, 
so it’s a little surprising that the <CODE>ListView</CODE> doesn’t follow suit. 
In fact it uses <CODE>Left</CODE>, which is a little irritating—the problem 
described here simply wouldn’t occur if <CODE>ListView</CODE> hadn’t used the 
normal default. Fortunately, we can change it. (So far I’ve worked out how to do 
this twice, and then promptly forgotten again on both occasions. I’m putting it 
in a blog so that next time I’ll remember, or at least I’ll know where to 
look.)</P>
<P>The alignment of the column content is controlled by the 
<CODE>ListViewItem</CODE> container. There will be one of these for each row in 
the <CODE>ListView</CODE>, which will generate them automatically if you don’t 
supply your own. In fact if you’re using data binding, you don’t have the option 
to supply your own. And since putting a <CODE>TextBox</CODE> column into a 
<CODE>ListView</CODE> probably only makes sense in data binding scenarios, 
chances are you’ll be using generated <CODE>ListViewItem</CODE> containers.</P>
<P>So it’s not as simple as setting properties on the <CODE>ListViewItem</CODE> 
containers—those containers don’t appear anywhere in your XAML because they are 
generated implicitly by WPF.</P>
<P>As with any control that derives from <CODE>ItemsControl</CODE>, 
<CODE>ListView</CODE> lets you set properties on the generated item containers 
setting the <CODE>ItemContainerStyle</CODE> property. We can use this to modify 
the <CODE>HorizontalContentAlignment</CODE> of the <CODE>ListViewItem</CODE> 
containers:</P><PRE><SPAN style="COLOR: blue">&lt;</SPAN><SPAN style="COLOR: brown">Grid</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">  &lt;</SPAN><SPAN style="COLOR: brown">Grid.Resources</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">    &lt;</SPAN><SPAN style="COLOR: brown">x:Array</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">Type</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{x:Type s:String}</SPAN>"<SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">x:Key</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">items</SPAN>"<SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">      &lt;</SPAN><SPAN style="COLOR: brown">s:String</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>Foo<SPAN style="COLOR: blue">&lt;/</SPAN><SPAN style="COLOR: brown">s:String</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">      &lt;</SPAN><SPAN style="COLOR: brown">s:String</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>Bar<SPAN style="COLOR: blue">&lt;/</SPAN><SPAN style="COLOR: brown">s:String</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">      &lt;</SPAN><SPAN style="COLOR: brown">s:String</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>Spong<SPAN style="COLOR: blue">&lt;/</SPAN><SPAN style="COLOR: brown">s:String</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">    &lt;/</SPAN><SPAN style="COLOR: brown">x:Array</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">  &lt;/</SPAN><SPAN style="COLOR: brown">Grid.Resources</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>

<SPAN style="COLOR: blue">  &lt;</SPAN><SPAN style="COLOR: brown">ListView</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">ItemsSource</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{StaticResource items}</SPAN>"<SPAN style="COLOR: blue">&gt;</SPAN>

<SPAN style="COLOR: blue">    &lt;</SPAN><SPAN style="COLOR: brown">ListView.ItemContainerStyle</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">      &lt;</SPAN><SPAN style="COLOR: brown">Style</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">TargetType</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">ListViewItem</SPAN>"<SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">        &lt;</SPAN><SPAN style="COLOR: brown">Setter</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">Property</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">HorizontalContentAlignment</SPAN>"
<SPAN style="COLOR: blue">                </SPAN><SPAN style="COLOR: red">Value</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">Stretch</SPAN>"<SPAN style="COLOR: blue"> /&gt;</SPAN>
<SPAN style="COLOR: blue">      &lt;/</SPAN><SPAN style="COLOR: brown">Style</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">    &lt;/</SPAN><SPAN style="COLOR: brown">ListView.ItemContainerStyle</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">    </SPAN>
<SPAN style="COLOR: blue">    &lt;</SPAN><SPAN style="COLOR: brown">ListView.View</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">      &lt;</SPAN><SPAN style="COLOR: brown">GridView</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">        &lt;</SPAN><SPAN style="COLOR: brown">GridViewColumn</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">Header</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">Data</SPAN>"<SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">Width</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">80</SPAN>"<SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">          &lt;</SPAN><SPAN style="COLOR: brown">GridViewColumn.CellTemplate</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">            &lt;</SPAN><SPAN style="COLOR: brown">DataTemplate</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">              &lt;</SPAN><SPAN style="COLOR: brown">TextBox</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">Text</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding .}</SPAN>"<SPAN style="COLOR: blue">  /&gt;</SPAN>
<SPAN style="COLOR: blue">            &lt;/</SPAN><SPAN style="COLOR: brown">DataTemplate</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">          &lt;/</SPAN><SPAN style="COLOR: brown">GridViewColumn.CellTemplate</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">        &lt;/</SPAN><SPAN style="COLOR: brown">GridViewColumn</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">        &lt;</SPAN><SPAN style="COLOR: brown">GridViewColumn</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">Header</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">Length</SPAN>"
            <SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">DisplayMemberBinding</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding Length}</SPAN>"<SPAN style="COLOR: blue"> /&gt;</SPAN>
<SPAN style="COLOR: blue">      &lt;/</SPAN><SPAN style="COLOR: brown">GridView</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">    &lt;/</SPAN><SPAN style="COLOR: brown">ListView.View</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">  &lt;/</SPAN><SPAN style="COLOR: brown">ListView</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>

<SPAN style="COLOR: blue">&lt;/</SPAN><SPAN style="COLOR: brown">Grid</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
</PRE>
<P>As you can see, each <CODE>TextBox</CODE> now fills the column:</P>
<P><IMG alt="ListView with TextBoxes filling the whole column" 
src="IanG on Tap Filling ListView Columns in WPF_files/ListViewFullTextBoxWidth.png"></P>
<P>These text boxes will now resize when the user resizes the column header.</P>
<P>(Note: this particular example isn’t terribly useful, because it binds 
directly to an array of strings. Strings are immutable, so editing the string 
causes WPF to generate a new string. Because arrays don’t generate change 
notifications, the Length column fails to update. In practice, you’d bind to 
properties of some object designed to be edited, so you wouldn’t see this 
problem. I’ve over-simplified the data binding here so as not to obscure the 
main point.)</P>
<P>The <CODE>ListViewItem</CODE> actually copies its horizontal alignment down 
to each individual column. This means there’s no way to control the alignment 
for individual columns. In fact that’s not really a problem, because if you set 
it to <CODE>Stretch</CODE> for everything, it’s easy enough to set a different 
alignment on the child content specified in the <CODE>CellTemplate</CODE>. 
Indeed, this is what makes the default choice of <CODE>L</CODE><CODE>eft</CODE> 
alignment so odd here: given a column alignment of <CODE>Stretch</CODE>, you can 
use <CODE>Left</CODE>, <CODE>Right</CODE> or <CODE>Center</CODE> in each column 
template as you see fit. Moreover, a <CODE>TextBlock</CODE> does the right thing 
without even trying: a <CODE>TextBlock</CODE> set to <CODE>Stretch</CODE> will 
align the text according to its <CODE>TextAlignment</CODE> property, so even 
though the <CODE>TextBlock</CODE> may nominally fill the entire column width, 
it’ll still <I>look</I> like it’s left aligned by default because the alignment 
of the text <I>inside</I> the <CODE>TextBlock</CODE> can be managed 
independently of the alignment of the <CODE>TextBlock</CODE> itself. So there 
really does seem to be no good reason for this default left-aligned setting 
imposed by the <CODE>ListView</CODE>—with that in play, you can’t do anything 
other than left-align the contents of the column. But once you’ve fixed that 
with the style shown above, everything works as you’d hope.</P>
<P>Note that while fixing the content alignment to <CODE>Stretch</CODE> gives 
you full control over each column’s alignment, you’ll still be left with some 
white space on either side of each column. The <CODE>ListView</CODE> adds a 
horizontal margin of 6 device independent pixels on either side of each column. 
This turns out to be much harder to remove. I’ll show how to do that in a future 
blog.</P></DIV></DIV>
<DIV class=blogBody>
<HR>
<SPAN class=copyright>Copyright © 2002-2007, <A id=ctl00_homeLink 
href="http://www.interact-sw.co.uk/">Interact Software Ltd.</A> Content by <A 
href="mailto:ian@interact-sw.co.uk">Ian Griffiths</A>. Please direct all Web 
site inquiries to <A 
href="mailto:webmaster@interact-sw.co.uk">webmaster@interact-sw.co.uk</A></SPAN> 
</DIV></BODY></HTML>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><title>BenCon's WebLog : Changing Panels and DataTemplates with ItemsControls in WPF/Avalon</title>
 




<meta name="description" content="I have posted before about the philosophy behind the ItemsControl, and now I will pull together some concepts from previous posts. I will use the RadialPanel and some ValueConverter magic to show how we can take a ListBox (the most famous of the ItemsControl">
<meta name="GENERATOR" content="CommunityServer 2.1 SP1 (Build: 61025.2)">
<link rel="pingback" href="http://blogs.msdn.com/bencon/pingback.aspx">
<link rel="stylesheet" href="679696.aspx_files/style.css" type="text/css" media="screen">
<link rel="stylesheet" href="679696.aspx_files/print.css" type="text/css" media="print">
<link rel="stylesheet" href="679696.aspx_files/cactus.css" type="text/css" media="screen">
<link rel="stylesheet" href="679696.aspx_files/customcss.css" type="text/css" media="screen">
<link rel="shortcut icon" type="image/ico" href="http://blogs.msdn.com/favicon.ico">
<link rel="alternate" type="application/rss+xml" title="BenCon's WebLog (RSS 2.0)" href="http://blogs.msdn.com/bencon/rss.xml">
<link rel="alternate" type="application/atom+xml" title="BenCon's WebLog (Atom 1.0)" href="http://blogs.msdn.com/bencon/atom.xml">
<link rel="alternate" type="application/rss+xml" title="Changing Panels and DataTemplates with ItemsControls in WPF/Avalon Comment RSS (RSS 2.0)" href="http://blogs.msdn.com/bencon/commentrss.aspx?PostID=679696">

	<script src="679696.aspx_files/global.js" type="text/javascript"></script></head><body>
<form name="aspnetForm" method="post" action="/bencon/archive/2006/07/26/679696.aspx" onsubmit="javascript:return WebForm_OnSubmit();" id="aspnetForm">
<div>
<input name="__EVENTTARGET" id="__EVENTTARGET" value="" type="hidden">
<input name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" type="hidden">
<input name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwUKLTMyNjg0MDc1MWQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgEFHmN0bDAwJF8kY3RsMDAkXyR3cyRfJFNlYXJjaEJveF0RlpzcH1+/MkXXJXQs3Ibd4GgM" type="hidden">
</div>

<script type="text/javascript">
<!--
var theForm = document.forms['aspnetForm'];
if (!theForm) {
    theForm = document.aspnetForm;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
// -->
</script>


<script src="679696.aspx_files/WebResource.js" type="text/javascript"></script>

<script language="javascript" type="text/javascript" src="679696.aspx_files/Telligent_Modal.js"></script><script language="javascript" type="text/javascript">
// <![CDATA[
Telligent_Modal.Configure('/utility/loading.htm',['Modal'],['ModalTitle'],['ModalClose'],['ModalContent'],['ModalFooter'],['ModalResize'],['ModalMask'],100);
// ]]>
</script><script language="javascript" type="text/javascript">
var RatingControlAJAX = {
"SaveRating":function(id,p0,cb){return Ajax_CallBack('CommunityServer.Blogs.Controls.BlogRatePost',id,'SaveRating',[p0],cb,0,0,0,1);}};
</script><script language="javascript" type="text/javascript">
var ThreadSubscribeLinkButton = {
"ToggleEmailReplies":function(id,p0,cb){return Ajax_CallBack('CommunityServer.Controls.ThreadSubscribeLinkButton',id,'ToggleEmailReplies',[p0],cb,0,0,0,0);}};
</script><script type="text/javascript" src="679696.aspx_files/ratingcontrol.js"></script>
<script src="679696.aspx_files/WebResource_002.js" type="text/javascript"></script><script language="JavaScript" type="text/javascript">var ctl00___ctl00___ctl02___DetailedSubBar___BlogThreadButton_trackWorking = false;var ctl00___ctl00___ctl02___DetailedSubBar___BlogThreadButton_trackStatus = false;function updateSubscriptionText() {if(ctl00___ctl00___ctl02___DetailedSubBar___BlogThreadButton_trackStatus == true) {document.getElementById('ctl00___ctl00___ctl02___DetailedSubBar___BlogThreadButton').innerHTML = 'Stop sending me email alerts for this post';} else {document.getElementById('ctl00___ctl00___ctl02___DetailedSubBar___BlogThreadButton').innerHTML = 'Send me email alerts for new comments to this post';}}function toggleSubscription() {ctl00___ctl00___ctl02___DetailedSubBar___BlogThreadButton_trackWorking = true;document.getElementById('ctl00___ctl00___ctl02___DetailedSubBar___BlogThreadButton').innerHTML = 'Updating email notifications...';ThreadSubscribeLinkButton.ToggleEmailReplies('ctl00___ctl00___ctl02___DetailedSubBar___BlogThreadButton',461386, toggleSubscriptionCallback);}function toggleSubscriptionCallback(response) {ctl00___ctl00___ctl02___DetailedSubBar___BlogThreadButton_trackWorking = false;if((response.error == null) && (response.value == true)) {if(ctl00___ctl00___ctl02___DetailedSubBar___BlogThreadButton_trackStatus == true) {ctl00___ctl00___ctl02___DetailedSubBar___BlogThreadButton_trackStatus = false;} else {ctl00___ctl00___ctl02___DetailedSubBar___BlogThreadButton_trackStatus = true;}updateSubscriptionText();} else {updateSubscriptionText();alert('An error happened while processing your request.  Please notify an administrator and try again later.');}}</script>
<script type="text/javascript">
<!--
function WebForm_OnSubmit() {
if (typeof(ValidatorOnSubmit) == "function" && ValidatorOnSubmit() == false) return false;
return true;
}
// -->
</script>


        			
   
<div id="masthead">
	<div id="userArea">
		
			<div id="welcome" align="right">
				
						Signed in as <a href="http://blogs.msdn.com/user/EditProfile.aspx?ReturnUrl=/blogs/post.aspx?App=bencon&amp;y=2006&amp;m=07&amp;d=26&amp;PostID=679696">bbraatz</a>
 | <a id="ctl00___ctl00___duw1_rc1___logout" href="http://blogs.msdn.com/logout.aspx">Sign out</a>



					
				 |  <a id="ctl00___ctl00___duw1_Faq1" href="http://blogs.msdn.com/languages/en-US/docs/faq.aspx">Help</a>
			</div>
		
		
		<div id="SearchSideBar">
			
	
<div id="Search" align="right">
	<table border="0" cellpadding="0" cellspacing="0">
	<tbody><tr><td>
		<input name="ctl00$_$ctl00$_$ws$_$SearchBox" id="ctl00___ctl00___ws___SearchBox" class="searchBox" onkeydown="KeyDownHandlerctl00___ctl00___ws___SearchButton(event);" type="text"> 
	</td><td>
		<span class="SearchButtonOuter"><a id="ctl00___ctl00___ws___SearchButton" class="SearchButton" href="javascript:__doPostBack('ctl00$_$ctl00$_$ws$_$SearchButton','')">Search</a></span>
	</td></tr>
	</tbody></table>
</div>
	
		</div>
	</div>
	<div id="title">
		

<h1><a id="ctl00___ctl00___bt___BlogTitle" class="headermaintitle" href="http://blogs.msdn.com/bencon/default.aspx">BenCon's WebLog</a></h1>
<div>Windows User Interface Musings</div>


	</div>
</div>
<div id="nav">
	<div id="navbar">
		<ul>
			<li><a id="ctl00___ctl00___Homelink1" href="http://blogs.msdn.com/bencon/default.aspx">Home</a></li>
			<li><a id="ctl00___ctl00___Contactlink1" href="http://blogs.msdn.com/bencon/contact.aspx">Email</a></li>
			<li><a id="ctl00___ctl00___Aboutlink1" href="http://blogs.msdn.com/bencon/about.aspx">About</a></li>
			<li><a id="ctl00___ctl00___rss" href="http://blogs.msdn.com/bencon/rss.xml">RSS 2.0</a></li>
			<li><a id="ctl00___ctl00___atom" href="http://blogs.msdn.com/bencon/atom.xml">Atom 1.0</a></li>
			
		</ul>
	</div>
</div>
<div id="content">
	<div id="leftmenu">
		

<div id="TasksSideBar">
	
</div>

<div id="RecentPostsSideBar">
	
	
<h3>Recent Posts</h3>	
<ul>
        <li><a id="ctl00___ctl00___bs___rp___PostList_ctl01_Link" href="http://blogs.msdn.com/bencon/archive/2007/03/29/tricks-with-d3dx10getimageinfofromresource.aspx">Tricks with D3DX10GetImageInfoFromResource</a></li>
    
        <li><a id="ctl00___ctl00___bs___rp___PostList_ctl02_Link" href="http://blogs.msdn.com/bencon/archive/2007/02/02/cool-trick-with-dependency-properties.aspx">Cool trick with Dependency Properties</a></li>
    
        <li><a id="ctl00___ctl00___bs___rp___PostList_ctl03_Link" href="http://blogs.msdn.com/bencon/archive/2006/12/09/iscrollinfo-tutorial-part-iv.aspx">IScrollInfo tutorial part IV</a></li>
    
        <li><a id="ctl00___ctl00___bs___rp___PostList_ctl04_Link" href="http://blogs.msdn.com/bencon/archive/2006/12/09/bye-bye-to-microsoft-max.aspx">Bye bye to Microsoft Max</a></li>
    
        <li><a id="ctl00___ctl00___bs___rp___PostList_ctl05_Link" href="http://blogs.msdn.com/bencon/archive/2006/08/08/692786.aspx">2B0ST0N6 day five</a></li>
    </ul>
    
	

</div>

<div id="TagSideBar">
	<h3>Tags</h3>
	<ul class="SidebarTagCloud">
<li class="Tag1"><a href="http://blogs.msdn.com/bencon/archive/tags/Avalon+_2F00_+WPF/default.aspx" rel="tag">Avalon / WPF</a></li>
<li class="Tag4"><a href="http://blogs.msdn.com/bencon/archive/tags/Direct3D/default.aspx" rel="tag">Direct3D</a></li>
<li class="Tag6"><a href="http://blogs.msdn.com/bencon/archive/tags/Max/default.aspx" rel="tag">Max</a></li>
<li class="Tag4"><a href="http://blogs.msdn.com/bencon/archive/tags/My+Blog/default.aspx" rel="tag">My Blog</a></li>
<li class="Tag6"><a href="http://blogs.msdn.com/bencon/archive/tags/Personal/default.aspx" rel="tag">Personal</a></li>
<li class="Tag6"><a href="http://blogs.msdn.com/bencon/archive/tags/Random+fun/default.aspx" rel="tag">Random fun</a></li>
<li class="Tag2"><a href="http://blogs.msdn.com/bencon/archive/tags/SIGGRAPH/default.aspx" rel="tag">SIGGRAPH</a></li>
<li class="Tag1"><a href="http://blogs.msdn.com/bencon/archive/tags/Web+Developer/default.aspx" rel="tag">Web Developer</a></li>
</ul>

</div>

<div id="NewsSideBar">
	
</div>

<div id="LinkSideBar">
	
        <h3>Friends</h3>
        <ul>
                <li><a id="ctl00___ctl00___bs___lcl___Categories_ctl00_Links_ctl01_Link" rel="friend" title="Former MS guy who now works at Google" href="http://www.eightypercent.net/">Joe Beda</a></li>
            
                <li><a id="ctl00___ctl00___bs___lcl___Categories_ctl00_Links_ctl02_Link" rel="friend" title="IE developer and another lunch buddy" href="http://blogs.msdn.com/jeffdav">Jeff Davis</a></li>
            
                <li><a id="ctl00___ctl00___bs___lcl___Categories_ctl00_Links_ctl03_Link" rel="friend" title="Scoble does not need a description" href="http://www.scobleizer.com/">Robert Scoble</a></li>
            
                <li><a id="ctl00___ctl00___bs___lcl___Categories_ctl00_Links_ctl04_Link" rel="friend" title="When I get up early enough, I eat lunch with this guy" href="http://blogs.msdn.com/oldnewthing">Raymond Chen</a></li>
            </ul>
    
        <h3>Interesting stuff</h3>
        <ul>
                <li><a id="ctl00___ctl00___bs___lcl___Categories_ctl01_Links_ctl01_Link" rel="friend" title="RNA research blog" href="http://ribonucleoblog.wordpress.com/">Ribonucleoblog</a></li>
            </ul>
    
        <h3>Microsoft Max Team</h3>
        <ul>
                <li><a id="ctl00___ctl00___bs___lcl___Categories_ctl02_Links_ctl01_Link" rel="co-worker" title="The *other* 1337 Max guy" href="http://blogs.msdn.com/dancre/">Dan Crevier</a></li>
            
                <li><a id="ctl00___ctl00___bs___lcl___Categories_ctl02_Links_ctl02_Link" title="Our team blog" href="http://blogs.msdn.com/max">Microsoft Max Blog</a></li>
            </ul>
    

	
</div>

<div id="ArchiveSideBar">
	
	
<h3>Archives</h3>
<ul>

        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2007/03.aspx">March 2007 (1)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2007/02.aspx">February 2007 (1)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2006/12.aspx">December 2006 (2)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2006/08.aspx">August 2006 (4)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2006/07.aspx">July 2006 (5)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2006/05.aspx">May 2006 (6)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2006/01.aspx">January 2006 (4)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2005/12.aspx">December 2005 (2)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2005/01.aspx">January 2005 (1)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2004/10.aspx">October 2004 (1)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2004/09.aspx">September 2004 (1)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2004/08.aspx">August 2004 (1)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2004/05.aspx">May 2004 (1)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2004/04.aspx">April 2004 (1)</a>
        </li>
    
        <li>
            <a href="http://blogs.msdn.com/bencon/archive/2004/02.aspx">February 2004 (3)</a>
        </li>
    
</ul>
	
</div>
	</div>
	<div id="main">
		
			

<div class="post">
	<h5 class="posthead pageTitle">Changing Panels and DataTemplates with ItemsControls in WPF/Avalon <span class="CommonRateControl" id="ctl00___ctl00___ctl02___Entry___Ratings" title="Not yet rated"><img title="Poor" src="679696.aspx_files/star-left-off.gif" align="absmiddle" border="0"><img title="Poor" src="679696.aspx_files/star-right-off.gif" align="absmiddle" border="0"><img title="Fair" src="679696.aspx_files/star-left-off.gif" align="absmiddle" border="0"><img title="Fair" src="679696.aspx_files/star-right-off.gif" align="absmiddle" border="0"><img title="Average" src="679696.aspx_files/star-left-off.gif" align="absmiddle" border="0"><img title="Average" src="679696.aspx_files/star-right-off.gif" align="absmiddle" border="0"><img title="Good" src="679696.aspx_files/star-left-off.gif" align="absmiddle" border="0"><img title="Good" src="679696.aspx_files/star-right-off.gif" align="absmiddle" border="0"><img title="Excellent" src="679696.aspx_files/star-left-off.gif" align="absmiddle" border="0"><img title="Excellent" src="679696.aspx_files/star-right-off.gif" align="absmiddle" border="0"></span><input value="0" id="ctl00___ctl00___ctl02___Entry___Ratings_Value" type="hidden"></h5>
	<p>I
have posted before about the philosophy behind the ItemsControl, and
now I will pull together some concepts from previous posts. I will use
the RadialPanel and some ValueConverter magic to show how we can take a
ListBox (the most famous of the ItemsControl family) and have it:</p>
<ul>
<li>Respond to changes to a data collection. 
</li><li>Swap between using a radial and stacking panel. 
</li><li>Swap between showing the text of the items and showing the hash of the items.</li></ul>
<p>One of the first things we need to do in order to build this sample
is make a subclass of the RadialPanel that does not require the items
to have the angle set on them. We do this because we want the items to
arrange in a neat circle by themselves.</p>
<p>The simplest way to do this is to derive from RadialPanel, and
override the MeasureOverride method to set the angles on the children
to be evenly spaced before doing the base measure pass. This is very
straightforward:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">using</span><span style="font-size: 10pt; font-family: 'Courier New';"> System;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">using</span><span style="font-size: 10pt; font-family: 'Courier New';"> System.Windows;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">namespace</span><span style="font-size: 10pt; font-family: 'Courier New';"> ItemsControlExample<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">public</span> <span style="color: blue;">class</span> <span style="color: teal;">ItemsRadialPanel</span> : <span style="color: teal;">RadialPanel<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">protected</span> <span style="color: blue;">override</span> <span style="color: teal;">Size</span> MeasureOverride(<span style="color: teal;">Size</span> availableSize)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">double</span> angle = 0.0;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">double</span> spacing = (360.0 / <span style="color: blue;">this</span>.InternalChildren.Count);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: green;">// set the angle of the children based on where they are in the list<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">foreach</span> (<span style="color: teal;">UIElement</span> element <span style="color: blue;">in</span> <span style="color: blue;">this</span>.InternalChildren)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>SetAngle(element, angle);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp; </span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>angle += spacing;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">return</span> <span style="color: blue;">base</span>.MeasureOverride(availableSize);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">}<o:p></o:p></span></p>
<p>Now we have a panel that we can use in an ItemsControl. Another
piece of the puzzle that we need is a data converter that takes any
object and returns the hash of it:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">using</span><span style="font-size: 10pt; font-family: 'Courier New';"> System;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">using</span><span style="font-size: 10pt; font-family: 'Courier New';"> System.Windows;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">using</span><span style="font-size: 10pt; font-family: 'Courier New';"> System.Windows.Data;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">using</span><span style="font-size: 10pt; font-family: 'Courier New';"> System.Globalization;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">namespace</span><span style="font-size: 10pt; font-family: 'Courier New';"> ItemsControlExample<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">public</span> <span style="color: blue;">class</span> <span style="color: teal;">TextToHashConverter</span> : <span style="color: teal;">IValueConverter<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">public</span> <span style="color: blue;">object</span> Convert(<span style="color: blue;">object</span> value, <span style="color: teal;">Type</span> targetType, <span style="color: blue;">object</span> parameter, <span style="color: teal;">CultureInfo</span> culture)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">return</span> value.GetHashCode();<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">public</span> <span style="color: blue;">object</span> ConvertBack(<span style="color: blue;">object</span> value, <span style="color: teal;">Type</span> targetType, <span style="color: blue;">object</span> parameter, <span style="color: teal;">CultureInfo</span> culture)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">throw</span> <span style="color: blue;">new</span> <span style="color: teal;">NotSupportedException</span>();<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">}<o:p></o:p></span></p>
<p>As far as value converters go, this is a simple one. But it is
enough to demonstrate the idea. Now we have most of the code for
building our control. Let's build a window in XAML that has the pieces
we need to show it off. First we need a window with a resource section:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">Window</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">x:Class</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">ItemsControlExample.Window1</span>"<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span></span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">xmlns</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span>"<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span></span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">xmlns:x</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">http://schemas.microsoft.com/winfx/2006/xaml</span>"<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span></span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">xmlns:local</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">clr-namespace:ItemsControlExample</span>"<span style="color: blue;"> <o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span></span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">Title</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">ItemsControlExample</span>"<span style="color: blue;"> </span><span style="color: red;">Height</span><span style="color: blue;">=</span>"<span style="color: blue;">300</span>"<span style="color: blue;"> </span><span style="color: red;">Width</span><span style="color: blue;">=</span>"<span style="color: blue;">300</span>"<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>&gt;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">Window.Resources</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&gt;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp; </span>&lt;/</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">Window.Resources</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&gt;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&lt;/</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">Window</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&gt;<o:p></o:p></span></p>
<p>What do we put in the resources? Well, first we need to have an
instance of the converter that we will be using later. So we declare
that in the resources:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">local:TextToHashConverter</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">x:Key</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">TextToHashConverter</span>"<span style="color: blue;"> /&gt;<o:p></o:p></span></span></p>
<p>Now we can define some control templates for the ListBox. One of them will use the radial panel:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">ControlTemplate</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">x:Key</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">radialTemplate</span>"<span style="color: blue;">&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">local:ItemsRadialPanel</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">IsItemsHost</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">True</span>"<span style="color: blue;"> /&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>&lt;/</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">ControlTemplate</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&gt;<o:p></o:p></span></p>
<p>
</p><p>And the other will use a stacking panel:</p>
<p></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">ControlTemplate</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">x:Key</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">scrollTemplate</span>"<span style="color: blue;">&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">ScrollViewer</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">ScrollViewer.HorizontalScrollBarVisibility</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">Disabled</span>"<span style="color: blue;">&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">VirtualizingStackPanel</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">IsItemsHost</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">True</span>"<span style="color: blue;"> /&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;/</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">ScrollViewer</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&gt;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>&lt;/</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">ControlTemplate</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&gt;<o:p></o:p></span></p>
<p>
</p><p>Now we can define some data templates for the ListBox. The
DataTemplate is what is used to create UI for each piece of data in the
ListBox. The first template is simple - we center the text of the item
inside a Border element. The binding statement has nothing in it
because that will return the DataContext of the element, which is the
item:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">DataTemplate</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">x:Key</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">textTemplate</span>"<span style="color: blue;">&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">Border</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">Background</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">Red</span>"<span style="color: blue;">&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">TextBlock</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">HorizontalAlignment</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">Center</span>"<span style="color: blue;"> </span><span style="color: red;">VerticalAlignment</span><span style="color: blue;">=</span>"<span style="color: blue;">Center</span>"<span style="color: blue;"> </span><span style="color: red;">Text</span><span style="color: blue;">=</span>"<span style="color: blue;">{Binding}</span>"<span style="color: blue;"> /&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;/</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">Border</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&gt;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>&lt;/</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">DataTemplate</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&gt;<o:p></o:p></span></p>
<p>
</p><p>And now we can also define the other template, which will just have a different converter and no background:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">DataTemplate</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">x:Key</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">hashTemplate</span>"<span style="color: blue;">&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">TextBlock</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">HorizontalAlignment</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">Center</span>"<span style="color: blue;"> </span><span style="color: red;">VerticalAlignment</span><span style="color: blue;">=</span>"<span style="color: blue;">Center</span>"<span style="color: blue;"> </span><span style="color: red;">Text</span><span style="color: blue;">=</span>"<span style="color: blue;">{Binding Converter={StaticResource TextToHashConverter}}</span>"<span style="color: blue;"> /&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>&lt;/</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">DataTemplate</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&gt;<o:p></o:p></span></p>
<p>Now we all we have to do is to declare our ListBox in the window. We
will make a DockPanel with a bunch of buttons along the top so that we
can change stuff:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">DockPanel</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&gt;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">UniformGrid</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">DockPanel.Dock</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">Top</span>"<span style="color: blue;"> </span><span style="color: red;">Rows</span><span style="color: blue;">=</span>"<span style="color: blue;">1</span>"<span style="color: blue;"> </span><span style="color: red;">Columns</span><span style="color: blue;">=</span>"<span style="color: blue;">5</span>"<span style="color: blue;">&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">Button</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">Content</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">Add item</span>"<span style="color: blue;"> </span><span style="color: red;">Name</span><span style="color: blue;">=</span>"<span style="color: blue;">addButton</span>"<span style="color: blue;"> /&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">Button</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">Content</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">Radial</span>"<span style="color: blue;"> </span><span style="color: red;">Name</span><span style="color: blue;">=</span>"<span style="color: blue;">radialButton</span>"<span style="color: blue;"> /&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">Button</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">Content</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">Scroll</span>"<span style="color: blue;"> </span><span style="color: red;">Name</span><span style="color: blue;">=</span>"<span style="color: blue;">scrollButton</span>"<span style="color: blue;"> /&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">Button</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">Content</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">Text</span>"<span style="color: blue;"> </span><span style="color: red;">Name</span><span style="color: blue;">=</span>"<span style="color: blue;">textButton</span>"<span style="color: blue;"> /&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">Button</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">Content</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">Hash</span>"<span style="color: blue;"> </span><span style="color: red;">Name</span><span style="color: blue;">=</span>"<span style="color: blue;">hashButton</span>"<span style="color: blue;"> /&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>&lt;/</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">UniformGrid</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&gt;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">ListBox</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"> </span><span style="font-size: 10pt; color: red; font-family: 'Courier New';">Name</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">=</span><span style="font-size: 10pt; font-family: 'Courier New';">"<span style="color: blue;">listBox</span>"<span style="color: blue;"> </span><span style="color: red;">Template</span><span style="color: blue;">=</span>"<span style="color: blue;">{StaticResource scrollTemplate}</span>"<span style="color: blue;"> </span><span style="color: red;">ItemTemplate</span><span style="color: blue;">=</span>"<span style="color: blue;">{StaticResource textTemplate}</span>"<span style="color: blue;"> /&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp; </span>&lt;/</span><span style="font-size: 10pt; color: maroon; font-family: 'Courier New';">DockPanel</span><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">&gt;<o:p></o:p></span></p>
<p>As you can see, we started off with the normal text template and the
normal scrolling template. But if we run our code now we will have
nothing in the ListBox and the buttons will also do nothing. We need to
add some code to fix that. First of all we can add some initial content
by adding a member to the window class which will be our collection:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> </span><span style="color: gray;">&lt;summary&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> We use ObservableCollection because it will fire events to let the ListBox keep things in sync.<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> </span><span style="color: gray;">&lt;/summary&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: teal;">ObservableCollection</span>&lt;<span style="color: blue;">string</span>&gt; _strings = <span style="color: blue;">new</span> <span style="color: teal;">ObservableCollection</span>&lt;<span style="color: blue;">string</span>&gt;();<o:p></o:p></span></p>
<p>
</p><p>And adding some code after InitializeComponent to put some initial content in there and wire up to the ListBox:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: green;">// add some strings to start with<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>_strings.Add(<span style="color: maroon;">"string 1"</span>);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>_strings.Add(<span style="color: maroon;">"string 2"</span>);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: green;">// wire up the string collection to the ListBox<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>listBox.ItemsSource = _strings;<o:p></o:p></span></p>
<p>
</p><p>All that is left now is handling events on the buttons. First we add some handlers in the window constructor:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: green;">// wire up handlers for the buttons<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>addButton.Click += <span style="color: blue;">new</span> <span style="color: teal;">RoutedEventHandler</span>(OnClickAdd);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>radialButton.Click += <span style="color: blue;">new</span> <span style="color: teal;">RoutedEventHandler</span>(OnClickRadial);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>scrollButton.Click += <span style="color: blue;">new</span> <span style="color: teal;">RoutedEventHandler</span>(OnClickScroll);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>textButton.Click += <span style="color: blue;">new</span> <span style="color: teal;">RoutedEventHandler</span>(OnClickText);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>hashButton.Click += <span style="color: blue;">new</span> <span style="color: teal;">RoutedEventHandler</span>(OnClickHash);<o:p></o:p></span></p>
<p>
</p><p>And now we can write the handlers. The handler for add is very
simple - we just add a new item to the collection. Notice that we don't
have to tell the ListBox about it explicitly&nbsp;-
ObservableCollection will fire an event to tell the ListBox that it has
changed and the ListBox will automatically create the UI for it and
display it. This is why ItemsControl is so cool:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> </span><span style="color: gray;">&lt;summary&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> When we click add, we want to add an item to the end of the list.<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> </span><span style="color: gray;">&lt;/summary&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp; </span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: blue;">private</span> <span style="color: blue;">void</span> OnClickAdd(<span style="color: blue;">object</span> sender, <span style="color: teal;">RoutedEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">int</span> stringNumber = _strings.Count + 1;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>_strings.Add(<span style="color: maroon;">"string "</span> + stringNumber.ToString());<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p>
</p><p>Now we can add handlers for changing the data template. They simply set the appropriate property to the appropriate resource:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> </span><span style="color: gray;">&lt;summary&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> When we click on the hash button, we show the hash data template<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> </span><span style="color: gray;">&lt;/summary&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">private</span> <span style="color: blue;">void</span> OnClickHash(<span style="color: blue;">object</span> sender, <span style="color: teal;">RoutedEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>listBox.ItemTemplate = (<span style="color: teal;">DataTemplate</span>)FindResource(<span style="color: maroon;">"hashTemplate"</span>);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> </span><span style="color: gray;">&lt;summary&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> When we click on the text button, we show the text data template<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> </span><span style="color: gray;">&lt;/summary&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">private</span> <span style="color: blue;">void</span> OnClickText(<span style="color: blue;">object</span> sender, <span style="color: teal;">RoutedEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>listBox.ItemTemplate = (<span style="color: teal;">DataTemplate</span>)FindResource(<span style="color: maroon;">"textTemplate"</span>);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p>
</p><p>And the control template changing handlers work in much the same way:</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> </span><span style="color: gray;">&lt;summary&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> When we click on the scroll button, we want to see a scrolling ListBox.<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> </span><span style="color: gray;">&lt;/summary&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">private</span> <span style="color: blue;">void</span> OnClickScroll(<span style="color: blue;">object</span> sender, <span style="color: teal;">RoutedEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>listBox.Template = (<span style="color: teal;">ControlTemplate</span>)FindResource(<span style="color: maroon;">"scrollTemplate"</span>);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> </span><span style="color: gray;">&lt;summary&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> When we click on the radial button, we want to see a radial ListBox.<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: gray;">///</span><span style="color: green;"> </span><span style="color: gray;">&lt;/summary&gt;<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">private</span> <span style="color: blue;">void</span> OnClickRadial(<span style="color: blue;">object</span> sender, <span style="color: teal;">RoutedEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>listBox.Template = (<span style="color: teal;">ControlTemplate</span>)FindResource(<span style="color: maroon;">"radialTemplate"</span>);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p>
</p><p>Now if you build and run you can swap control templates for the
ListBox (and hence the Panels) as well as swap the data templates for
the ListBox. You can also add items to the listbox and see everything
update.</p>
<p>Unfortunately the radial listbox has troubles using the area
efficiently. Maybe if I get time one day I will write a panel that does
the right hit testing and rendering to draw things in a nice pie shape.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
	<div class="postfoot">
		<span class="em">Posted:</span> Wednesday, July 26, 2006 7:03 PM
		by
		<a id="ctl00___ctl00___ctl02___Entry___AuthorLink" href="http://blogs.msdn.com/user/Profile.aspx?UserID=3253">BenCon</a>
		
		<div><span id="ctl00___ctl00___ctl02___Entry___InlineTagEditorPanel"></span><input name="ctl00$_$ctl00$_$ctl02$_$Entry$_$InlineTagEditorPanel" id="ctl00___ctl00___ctl02___Entry___InlineTagEditorPanel_State" value="nochange" type="hidden"></div>
		
	
<br>
<b>Attachment(s): </b><a id="ctl00___ctl00___ctl02___Entry___Attachment___DownLoadLink" href="http://blogs.msdn.com/bencon/attachment/679696.ashx">ItemsControlExample.zip</a>
	</div>
</div>            


<div id="comments">
	<h2>
	Comments
</h2>
	
		<div class="CommentArea">
			<h4 class="CommentTitle">
				<a id="ctl00___ctl00___ctl02___Comments___Comments_ctl00_NameLink" title="keith">keith</a> 
				said:
				<img src="679696.aspx_files/spacer.gif" class="CommentArrow" align="absbottom">
			</h4>
			<div class="CommentText">
				<div class="CommentText2">
					<div class="CommentText3"><p>Thanks
for this example. I am interested in the radialpanel and this shows a
good example. Have you or know of anyone that has tried to rotate the
radialpanel items in the listbox based on some event (like button-
rotate)?</p></div>
				</div>
			</div>
			<div class="CommentFooter"><a id="ctl00___ctl00___ctl02___Comments___Comments_ctl00_PermaLink" title="permalink" href="http://blogs.msdn.com/bencon/archive/2006/07/26/679696.aspx#1676629">#</a> February 14, 2007 9:53 AM </div>
		</div>
	
</div>

	


	
<fieldset id="commentform">
<legend>Leave a Comment</legend>

	<p>
    </p><div><label for="ctl00___ctl00___ctl02___form___tbTitle">Title</label> <em>(required)</em><span id="ctl00___ctl00___ctl02___form___Requiredfieldvalidator1" style="color: Red; visibility: hidden;">*</span></div>
	<div><input name="ctl00$_$ctl00$_$ctl02$_$form$_$tbTitle" value="re: Changing Panels and DataTemplates with ItemsControls in WPF/Avalon" id="ctl00___ctl00___ctl02___form___tbTitle" class="smallbox" type="text"></div>
	
	<p>
    
    </p>
    <p>
    </p><div><label for="ctl00___ctl00___ctl02___form___tbUrl">Your URL</label> <em>(optional</em>)</div>
    <div><input name="ctl00$_$ctl00$_$ctl02$_$form$_$tbUrl" id="ctl00___ctl00___ctl02___form___tbUrl" class="smallbox" type="text"></div>
    
    <p>
    </p><div><label for="ctl00___ctl00___ctl02___form___tbComment">Comments</label> <em>(required)</em><span id="ctl00___ctl00___ctl02___form___Requiredfieldvalidator3" style="color: Red; visibility: hidden;">*</span></div>
    <div><textarea name="ctl00$_$ctl00$_$ctl02$_$form$_$tbComment" rows="5" cols="25" id="ctl00___ctl00___ctl02___form___tbComment"></textarea></div>
	
	<p>
    </p><div></div>
    
	<p>
    <input name="ctl00$_$ctl00$_$ctl02$_$form$_$btnSubmit" value="Submit" onclick='javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions("ctl00$_$ctl00$_$ctl02$_$form$_$btnSubmit", "", true, "", "", false, false))' id="ctl00___ctl00___ctl02___form___btnSubmit" type="submit">
	</p>

</fieldset>



	

<fieldset id="postnotification">
	<legend>Comment Notification</legend>
	<p>
	
	<a href="javascript:toggleSubscription();" id="ctl00___ctl00___ctl02___DetailedSubBar___BlogThreadButton" trackingresourcename="Weblogs_UnTrack" nottrackingresourcename="Weblogs_Track" workingresourcename="Weblogs_TrackWorking">Send me email alerts for new comments to this post</a>
	</p>
	<p>
	Subscribe to this post's comments using
	<a id="ctl00___ctl00___ctl02___DetailedSubBar___CommentRssLink" href="http://blogs.msdn.com/bencon/commentrss.aspx?PostID=679696">RSS</a>
	</p>
</fieldset>
   
    
	</div>
	<div id="footer">
		
	</div>
</div>

<script type="text/javascript">
<!--
var Page_Validators =  new Array(document.getElementById("ctl00___ctl00___ctl02___form___Requiredfieldvalidator1"), document.getElementById("ctl00___ctl00___ctl02___form___Requiredfieldvalidator3"));
// -->
</script>

<script type="text/javascript">
<!--
var ctl00___ctl00___ctl02___form___Requiredfieldvalidator1 = document.all ? document.all["ctl00___ctl00___ctl02___form___Requiredfieldvalidator1"] : document.getElementById("ctl00___ctl00___ctl02___form___Requiredfieldvalidator1");
ctl00___ctl00___ctl02___form___Requiredfieldvalidator1.controltovalidate = "ctl00___ctl00___ctl02___form___tbTitle";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator1.errormessage = "*";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator1.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator1.initialvalue = "";
var ctl00___ctl00___ctl02___form___Requiredfieldvalidator3 = document.all ? document.all["ctl00___ctl00___ctl02___form___Requiredfieldvalidator3"] : document.getElementById("ctl00___ctl00___ctl02___form___Requiredfieldvalidator3");
ctl00___ctl00___ctl02___form___Requiredfieldvalidator3.controltovalidate = "ctl00___ctl00___ctl02___form___tbComment";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator3.errormessage = "*";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator3.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator3.initialvalue = "";
// -->
</script>

<script language="javascript" type="text/javascript">
<!--
function KeyDownHandlerctl00___ctl00___ws___SearchButton(event)
{
	if (event.keyCode == 13)
	{
		event.returnValue = false;
		event.cancel = true;
     __doPostBack('ctl00$_$ctl00$_$ws$_$SearchButton','')	}
}

//-->
</script>
<script language="javascript">var ctl00___ctl00___ctl02___Entry___Ratings=new RateControl('ctl00___ctl00___ctl02___Entry___Ratings','ctl00___ctl00___ctl02___Entry___Ratings','ctl00___ctl00___ctl02___Entry___Ratings_Value', 5, '/Themes/default/images/common/', false, 'CommonRateControl','CommonRateControlActive','CommonRateControlReadOnly',['Terrible','Poor','Fair','Average','Good','Excellent'],false,true);</script>
<!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://blogs.msdn.com/bencon/archive/2006/07/26/679696.aspx"
dc:identifier="http://blogs.msdn.com/bencon/archive/2006/07/26/679696.aspx"
dc:title="Changing Panels and DataTemplates with ItemsControls in WPF/Avalon"
trackback:ping="http://blogs.msdn.com/bencon/trackback.aspx?PostID=679696" />
</rdf:RDF>
-->

<script type="text/javascript">
<!--
var Page_ValidationActive = false;
if (typeof(ValidatorOnLoad) == "function") {
    ValidatorOnLoad();
}

function ValidatorOnSubmit() {
    if (Page_ValidationActive) {
        return ValidatorCommonOnSubmit();
    }
    else {
        return true;
    }
}
// -->
</script>
        </form>
</body></html>
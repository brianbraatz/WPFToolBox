<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xml:lang="en-US"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna" xmlns:Microsoft_Expression_Samples="clr-namespace:Microsoft.Expression.Samples" xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	x:Class="HyperBar.Window1"
	x:Name="Window"
	Title="HyperBar"
	Width="640" Height="480" AllowsTransparency="False">

	<Window.Resources>
		<Style TargetType="{x:Type Label}" x:Key="LabelStyle1">
			<Setter Property="Foreground" Value="#FFFFFFFF"/>
			<Setter Property="Background" Value="#00FFFFFF"/>
			<Setter Property="Padding" Value="5,5,5,5"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Label}">
						<Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="FontSize" Value="16"/>
		</Style>
		<Style TargetType="{x:Type CheckBox}" x:Key="CheckBoxStyle1">
			<Setter Property="Foreground" Value="#FFFFFFFF"/>
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush>
						<GradientStop Color="#FFD2D4D2" Offset="0"/>
						<GradientStop Color="#FFFFFFFF" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="BorderBrush">
				<Setter.Value>
					<LinearGradientBrush>
						<GradientStop Color="#FF004C94" Offset="0"/>
						<GradientStop Color="#FF003C74" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="BorderThickness" Value="1,1,1,1"/>
			<Setter Property="FocusVisualStyle">
				<Setter.Value>
					<Style>
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle SnapsToDevicePixels="True" Stroke="#FF000000" StrokeThickness="1" Margin="1,1,1,1" StrokeDashArray="1 2"/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<BulletDecorator SnapsToDevicePixels="True" Background="#00FFFFFF">
							<BulletDecorator.Bullet>
								<Microsoft_Windows_Themes:BulletChrome Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" IsChecked="{TemplateBinding IsChecked}"/>
							</BulletDecorator.Bullet>
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
						</BulletDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="True">
								<Setter Property="FocusVisualStyle">
									<Setter.Value>
										<Style>
											<Setter Property="Control.Template">
												<Setter.Value>
													<ControlTemplate>
														<Rectangle SnapsToDevicePixels="True" Stroke="#FF000000" StrokeThickness="1" Margin="14,0,0,0" StrokeDashArray="1 2"/>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</Setter.Value>
								</Setter>
								<Setter Property="Padding" Value="2,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="FontSize" Value="16"/>
		</Style>
		<VisualBrush Visual="{Binding ElementName=HyperBar}" x:Key="ReflectionBrush"/>
	</Window.Resources>

	<Grid x:Name="LayoutRoot">
		<Grid.RowDefinitions>
			<RowDefinition Height="0.567*"/>
			<RowDefinition Height="0.233*"/>
			<RowDefinition Height="0.2*"/>
		</Grid.RowDefinitions>
		<Grid.Background>
			<LinearGradientBrush EndPoint="0.5,-0" StartPoint="0.5,1.0">
				<GradientStop Color="#FF3A9CFF" Offset="0"/>
				<GradientStop Color="#FF004DFF" Offset="1"/>
				<GradientStop Color="#FFFFFFFF" Offset="0.204"/>
				<GradientStop Color="#FFD6E2FF" Offset="0.227"/>
			</LinearGradientBrush>
		</Grid.Background>
		<Grid HorizontalAlignment="Stretch" x:Name="ConsoleGrid" VerticalAlignment="Stretch" Width="320" Height="230">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" MinWidth="113.585"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="30.0"/>
				<RowDefinition Height="30.0"/>
				<RowDefinition Height="30.0"/>
				<RowDefinition Height="30.0"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="30.0"/>
			</Grid.RowDefinitions>
			<Label HorizontalAlignment="Left" x:Name="DistributionLabel" Style="{DynamicResource LabelStyle1}" VerticalAlignment="Center" Content="Distribution"/>
			<Label HorizontalAlignment="Left" x:Name="ZoomLabel" VerticalAlignment="Center" Content="Zoom" Grid.Row="1" Style="{DynamicResource LabelStyle1}" Width="Auto"/>
			<Label HorizontalAlignment="Center" x:Name="FunctionPreviewLabel" VerticalAlignment="Center" Width="Auto" Content="Function Preview" Grid.Column="0" Grid.Row="5" Style="{DynamicResource LabelStyle1}" FontSize="14" d:LayoutOverrides="GridBox" Grid.ColumnSpan="2"/>
			<Slider HorizontalAlignment="Stretch" x:Name="DistributionSlider" VerticalAlignment="Center" Grid.Column="1" Minimum="0.05" Maximum="1" SmallChange="0.01" IsDirectionReversed="False" Height="Auto" LargeChange="0.5" Value="{Binding Path=Distribution, ElementName=FunctionPreview, Mode=Default}"/>
			<Slider HorizontalAlignment="Stretch" x:Name="ZoomSlider" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" Minimum="0.01" Maximum="1" SmallChange="0.01" LargeChange="0.5" Value="{Binding Path=Zoom, ElementName=FunctionPreview, Mode=Default}"/>
			<CheckBox HorizontalAlignment="Center" x:Name="TransparencyCheckBox" VerticalAlignment="Center" Content="Transparency" Grid.Column="0" Grid.Row="2" Style="{DynamicResource CheckBoxStyle1}" d:LayoutOverrides="GridBox" Height="Auto" Grid.ColumnSpan="2" Grid.RowSpan="1" IsChecked="{Binding Path=UseTransparency, ElementName=FunctionPreview, Mode=Default}"/>
			<CheckBox HorizontalAlignment="Center" x:Name="ReflectionCheckBox" VerticalAlignment="Center" Content="Reflection" Grid.Column="0" Grid.Row="3" Style="{DynamicResource CheckBoxStyle1}" IsChecked="True" d:LayoutOverrides="GridBox" Grid.ColumnSpan="2"/>
			<Microsoft_Expression_Samples:HyperGrid x:Name="FunctionPreview" Grid.ColumnSpan="2" Grid.Row="4" MouseLeaveResetCenter="True">
				<Microsoft_Expression_Samples:HyperGrid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
	 			</Microsoft_Expression_Samples:HyperGrid.ColumnDefinitions>
				<Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}"/>
				<Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" Grid.Column="1"/>
				<Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" Grid.Column="2"/>
				<Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" Grid.Column="3"/>
				<Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" Grid.Column="4"/>
				<Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" Grid.Column="5"/>
				<Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" Grid.Column="6"/>
				<Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" Grid.Column="7"/>
				<Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" Grid.Column="8"/>
				<Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" Grid.Column="9"/>
				<Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" Grid.Column="10"/>
			</Microsoft_Expression_Samples:HyperGrid>
		</Grid>
		<Rectangle RenderTransformOrigin="0.5,0.5" Fill="{DynamicResource ReflectionBrush}" Stroke="{x:Null}" Margin="100,1,100,10" x:Name="Reflection" VerticalAlignment="Top" Height="{Binding Path=ActualHeight, ElementName=HyperBar, Mode=Default}" Grid.Row="2" Grid.RowSpan="1" Opacity="{Binding Path=IsChecked, ElementName=ReflectionCheckBox, Mode=Default}">
			<Rectangle.OpacityMask>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#00000000" Offset="0"/>
					<GradientStop Color="#66FCFCFC" Offset="0.932"/>
				</LinearGradientBrush>
			</Rectangle.OpacityMask>
			<Rectangle.LayoutTransform>
				<TransformGroup>
					<ScaleTransform ScaleX="1" ScaleY="-1"/>
					<SkewTransform AngleX="0" AngleY="0"/>
					<RotateTransform Angle="0"/>
					<TranslateTransform X="0" Y="0"/>
				</TransformGroup>
			</Rectangle.LayoutTransform>
		</Rectangle>
		<Microsoft_Expression_Samples:HyperGrid Margin="100,0,100,0" x:Name="HyperBar" Grid.Row="1" Background="#00FFFFFF" MouseLeaveResetDistribution="True" MouseLeaveResetCenter="True" MouseLeaveResetZoom="True" MouseEnter="HyperBar_MouseEnter" MouseLeaveResetTransparency="True">
			<Microsoft_Expression_Samples:HyperGrid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
			</Microsoft_Expression_Samples:HyperGrid.ColumnDefinitions>
			<Image Source="user.png" Grid.Column="0" Panel.ZIndex="1"/>
			<Image Source="tools.png" Grid.Column="1" Panel.ZIndex="1"/>
			<Image Source="pocketpc.png" Grid.Column="2" Panel.ZIndex="1"/>
			<Image Source="plug.png" Grid.Column="3" Panel.ZIndex="1"/>
			<Image Source="pc.png" Grid.Column="4" Panel.ZIndex="1"/>
			<Image Source="globe.png" Grid.Column="5" Panel.ZIndex="1"/>
			<Image Source="folders.png" Grid.Column="6" Panel.ZIndex="1"/>
			<Image Source="document.png" Grid.Column="7" Panel.ZIndex="1"/>
			<Image Source="disk.png" Grid.Column="8" Panel.ZIndex="1"/>
			<Image Source="code.png" Grid.Column="9" Panel.ZIndex="1"/>
			<Image Source="book.png" Grid.Column="10" Panel.ZIndex="1"/>
			<Rectangle Stroke="{x:Null}" RadiusX="25" RadiusY="25" StrokeMiterLimit="2" x:Name="BarBackground" Panel.ZIndex="0" VerticalAlignment="Stretch" Grid.ColumnSpan="11" Margin="0,15,0,15">
				<Rectangle.Fill>
					<LinearGradientBrush EndPoint="0.5,1.0" StartPoint="0.5,0.0">
						<GradientStop Color="#FF000000" Offset="0"/>
						<GradientStop Color="#FF2D4FD1" Offset="1"/>
					</LinearGradientBrush>
				</Rectangle.Fill>
			</Rectangle>
			<Rectangle StrokeMiterLimit="2" Stroke="{x:Null}" RadiusX="25" RadiusY="25" x:Name="BarRipple" Panel.ZIndex="0" VerticalAlignment="Stretch" Grid.ColumnSpan="11" Margin="2,15,2,16">
				<Rectangle.Fill>
					<LinearGradientBrush EndPoint="0.5,1.012" StartPoint="0.5,0.976" SpreadMethod="Reflect">
						<GradientStop Color="#4CFFFFFF" Offset="0"/>
						<GradientStop Color="#00000000" Offset="1"/>
					</LinearGradientBrush>
				</Rectangle.Fill>
			</Rectangle>
			<Rectangle StrokeMiterLimit="2" Stroke="{x:Null}" RadiusX="22" RadiusY="22" Margin="4,17,4,0" x:Name="BarHighlight" Panel.ZIndex="0" VerticalAlignment="Top" Height="35.2" Grid.ColumnSpan="11">
				<Rectangle.Fill>
					<LinearGradientBrush EndPoint="0.5,1.0" StartPoint="0.5,-0.0">
						<GradientStop Color="#FFFFFFFF" Offset="0"/>
						<GradientStop Color="#002D4FD1" Offset="0.594"/>
					</LinearGradientBrush>
				</Rectangle.Fill>
			</Rectangle>
		</Microsoft_Expression_Samples:HyperGrid>
		<RichTextBox x:Name="Sample_Information" Width="250" d:LayoutOverrides="Height" HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="Auto" Grid.RowSpan="2" Grid.Row="1" IsReadOnly="True" Margin="-250,0,0,0">
			<FlowDocument>
				<Paragraph xml:space="preserve">The HyperBar sample demonstrates a bar of icons that pan left and right according to the position of the mouse pointer.  The images themselves scale according to the settings of the Distribution and Zoom slider bars.  </Paragraph>
				<Paragraph>The behavior of the HyperBar is accomplished in custom control by using a hyperbolic-type function that is contained in its own class file.</Paragraph>
				<Paragraph>For more information, please see comments in the source code file (HyperBar.cs) and see the tutorial HyperBar that comes with this sample.</Paragraph>
			</FlowDocument>
		</RichTextBox>
	</Grid>
</Window>
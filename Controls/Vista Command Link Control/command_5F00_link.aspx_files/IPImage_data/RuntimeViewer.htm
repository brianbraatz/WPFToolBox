<html style="height: 100%;"><head><script src="RuntimeViewer_data/MicrosoftAjax.js" type="text/javascript"></script><script src="RuntimeViewer_data/Main.js" type="text/javascript"></script><script src="RuntimeViewer_data/js.js" type="text/javascript"></script>

<script src="RuntimeViewer_data/0.reference" type="text/javascript"></script>
<script src="RuntimeViewer_data/0_002.reference" type="text/javascript"></script>
<script src="RuntimeViewer_data/1.reference" type="text/javascript"></script>
<script src="RuntimeViewer_data/1_002.reference" type="text/javascript"></script>
<script src="RuntimeViewer_data/2_002.reference" type="text/javascript"></script>
<script src="RuntimeViewer_data/2.reference" type="text/javascript"></script>
<script src="RuntimeViewer_data/3.reference" type="text/javascript"></script>
<script src="RuntimeViewer_data/3_002.reference" type="text/javascript"></script><!-- base --></head><body style="margin: 0px; background-color: transparent; color: white; font-family: Segoe UI,Tahoma; height: 100%;"><div id="statusBubble" style="padding: 4px; display: none; z-index: 99999; font-size: 10px; position: absolute; left: 0px; top: 0px; background-color: white; color: black;">Loading................................</div><script type="text/javascript">
<!--
try
{
  var data = new Array();
  var pendingCalls = new Array();

  var _Nils_Remote_IP = environment.construct("RemoteIpClass", blockMetadata["_Nils_Remote IP"]);
  var _Daan_Locust_IP_Locator = environment.construct("LocustClass", blockMetadata["_Daan_Locust IP Locator"]);
  var liveImage = environment.construct("LiveImageClass", blockMetadata["liveImage"]);
  var photoStack = environment.construct("PhotoStackClass", blockMetadata["photoStack"]);
}
catch (ex)
{
  environment.reportError(ex);
}

// -->
</script><script type="text/javascript">
<!--
try
{
     photoStack.initialize();
     callBlocksAtDepth0();
}
catch (ex)
{
     environment.reportError(ex);
}

function callBlocksAtDepth0()
{
     call__Nils_Remote_IP();
}

function checkForCallingDepth1()
{
     if (pendingCalls["Remote IP"] <= 0)
     {
          callBlocksAtDepth1();
     }
     else
     {
          if (pendingCalls["Remote IP"] == 1)
               console.write('Waiting for a call to Remote IP...');
          else if (pendingCalls["Remote IP"] > 0)
               console.write('Waiting for ' + pendingCalls["Remote IP"] + ' calls to Remote IP...');
     }
}

function callBlocksAtDepth1()
{
     call__Daan_Locust_IP_Locator();
}

function checkForCallingDepth2()
{
     if (pendingCalls["Locust IP Locator"] <= 0)
     {
          callBlocksAtDepth2();
     }
     else
     {
          if (pendingCalls["Locust IP Locator"] == 1)
               console.write('Waiting for a call to Locust IP Locator...');
          else if (pendingCalls["Locust IP Locator"] > 0)
               console.write('Waiting for ' + pendingCalls["Locust IP Locator"] + ' calls to Locust IP Locator...');
     }
}

function callBlocksAtDepth2()
{
     call_liveImage();
}

function checkForCallingDepth3()
{
     if (pendingCalls["Live Image Search"] <= 0)
     {
          callBlocksAtDepth3();
     }
     else
     {
          if (pendingCalls["Live Image Search"] == 1)
               console.write('Waiting for a call to Live Image Search...');
          else if (pendingCalls["Live Image Search"] > 0)
               console.write('Waiting for ' + pendingCalls["Live Image Search"] + ' calls to Live Image Search...');
     }
}

function callBlocksAtDepth3()
{
     call_photoStack();
}

function call__Nils_Remote_IP()
{
     console.write('Remote IP:', 'heading');
     pendingCalls["Remote IP"] = 1;
     var result = _Nils_Remote_IP.getRemoteIp();
     data["Remote IP"] = result;
     pendingCalls["Remote IP"]--;

     checkForCallingDepth1();
} // end of call__Nils_Remote_IP

function call__Daan_Locust_IP_Locator()
{
     console.write('Locust IP Locator:', 'heading');
     pendingCalls["Locust IP Locator"] = 1;
     var result = _Daan_Locust_IP_Locator.getLocationByIP(data["Remote IP"]);
     data["Locust IP Locator"] = result;
     pendingCalls["Locust IP Locator"]--;

     checkForCallingDepth2();
} // end of call__Daan_Locust_IP_Locator

function call_liveImage()
{
     console.write('Live Image Search:', 'heading');
     pendingCalls["Live Image Search"] = 1;
     liveImage.search(data["Locust IP Locator"].Country, "", "", "", "Off", function(result)
          {
               try
               {
                    data["Live Image Search"] = result;
                    pendingCalls["Live Image Search"]--;

                    checkForCallingDepth3();
               }
               catch (ex)
               {
                    environment.reportError(ex);
               }
          }
     );
} // end of call_liveImage

function call_photoStack()
{
     console.write('PhotoStack:', 'heading');
     data["PhotoStack"] = new Array();
     pendingCalls["PhotoStack"] = data["Live Image Search"].length;
     for (var i=0; i<data["Live Image Search"].length; i++)
     {
          try
          {
               var result = photoStack.addImage(data["Live Image Search"][i].mediaUrl, data["Live Image Search"][i].title);
               pendingCalls["PhotoStack"]--;
               if (pendingCalls["PhotoStack"] == 0) environment.finish();

          }
          catch (ex)
          {
               pendingCalls["PhotoStack"]--;
               if (pendingCalls["PhotoStack"] == 0) environment.finish();
               environment.reportErrorInLoop(i, ex);
          }
     }
} // end of call_photoStack


// -->
</script><script type="text/javascript" src="RuntimeViewer_data/photostack.js"></script><script type="text/javascript" src="RuntimeViewer_data/photocanvas.js"></script><div id="SilverlightPhotoStackControlHost" style="height: 100%; width: 100%;"><object type="application/x-silverlight" data="RuntimeViewer_data/a" id="PhotoStackSilverlightControl" height="100%" width="100%"> <param name="background" value="#00000000"> <param name="source" value="/Content/Components/Resources/PhotoStack/xaml/page.v2.xaml.txt"> <param name="windowless" value="true"> <param name="maxFramerate" value="30"> <param name="onLoad" value="__slLoad0"> <param name="onError" value="__slError0"></object></div></body></html>
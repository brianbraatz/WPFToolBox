<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><title>Dante's blog : Calligraphy In Ink! (Part 2)</title>
 




<meta name="keywords" content="Blend,Code">
<meta name="description" content="Ok, see this is what happens when I have some time to 'play' with Blend. My previous post showed how to modify the stylus tip to get something akin to a calligraphy pen. But, the pen that I got most recently got is called a scroll point. The tip itself">
<meta name="GENERATOR" content="CommunityServer 2.1 SP1 (Build: 61025.2)">
<link rel="pingback" href="http://blogs.msdn.com/danteg/pingback.aspx">
<link rel="stylesheet" href="calligraphy-in-ink-part-2.aspx_files/style.css" type="text/css" media="screen">
<link rel="stylesheet" href="calligraphy-in-ink-part-2.aspx_files/print.htm" type="text/css" media="print">
<link rel="stylesheet" href="calligraphy-in-ink-part-2.aspx_files/fire.css" type="text/css" media="screen">
<link rel="shortcut icon" type="image/ico" href="http://blogs.msdn.com/favicon.ico">
<link rel="alternate" type="application/rss+xml" title="Dante's blog (RSS 2.0)" href="http://blogs.msdn.com/danteg/rss.xml">
<link rel="alternate" type="application/atom+xml" title="Dante's blog (Atom 1.0)" href="http://blogs.msdn.com/danteg/atom.xml">
<link rel="alternate" type="application/rss+xml" title="Calligraphy In Ink! (Part 2) Comment RSS (RSS 2.0)" href="http://blogs.msdn.com/danteg/commentrss.aspx?PostID=3432728">

	<script src="calligraphy-in-ink-part-2.aspx_files/global.js" type="text/javascript"></script>
<style>
.DoNotDisplay { display: none; }
</style></head><body>
<form name="aspnetForm" method="post" action="/danteg/archive/2007/06/20/calligraphy-in-ink-part-2.aspx" onsubmit="javascript:return WebForm_OnSubmit();" id="aspnetForm">
<div>
<input name="__EVENTTARGET" id="__EVENTTARGET" value="" type="hidden">
<input name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" type="hidden">
<input name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwUKLTMyNjg0MDc1MWQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgEFI2N0bDAwJF8kY3RsMDAkXyRidCRfJHdzJF8kU2VhcmNoQm94OF9SPxZcTrUZtH+KlInBIuHdXL8=" type="hidden">
</div>

<script type="text/javascript">
<!--
var theForm = document.forms['aspnetForm'];
if (!theForm) {
    theForm = document.aspnetForm;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
// -->
</script>


<script src="calligraphy-in-ink-part-2.aspx_files/WebResource.js" type="text/javascript"></script>

<script language="javascript" type="text/javascript" src="calligraphy-in-ink-part-2.aspx_files/Telligent_Modal.js"></script><script language="javascript" type="text/javascript">
// <![CDATA[
Telligent_Modal.Configure('/utility/loading.htm',['Modal'],['ModalTitle'],['ModalClose'],['ModalContent'],['ModalFooter'],['ModalResize'],['ModalMask'],100);
// ]]>
</script><script language="javascript" type="text/javascript">
var RatingControlAJAX = {
"SaveRating":function(id,p0,cb){return Ajax_CallBack('CommunityServer.Blogs.Controls.BlogRatePost',id,'SaveRating',[p0],cb,0,0,0,1);}};
</script><script language="javascript" type="text/javascript">
var ThreadSubscribeLinkButton = {
"ToggleEmailReplies":function(id,p0,cb){return Ajax_CallBack('CommunityServer.Controls.ThreadSubscribeLinkButton',id,'ToggleEmailReplies',[p0],cb,0,0,0,0);}};
</script><script type="text/javascript" src="calligraphy-in-ink-part-2.aspx_files/ratingcontrol.js"></script><script language="JavaScript" type="text/javascript">var ctl00___ctl00___ctl01___DetailedSubBar___BlogThreadButton_trackWorking = false;var ctl00___ctl00___ctl01___DetailedSubBar___BlogThreadButton_trackStatus = false;function updateSubscriptionText() {if(ctl00___ctl00___ctl01___DetailedSubBar___BlogThreadButton_trackStatus == true) {document.getElementById('ctl00___ctl00___ctl01___DetailedSubBar___BlogThreadButton').innerHTML = 'Stop sending me email alerts for this post';} else {document.getElementById('ctl00___ctl00___ctl01___DetailedSubBar___BlogThreadButton').innerHTML = 'Send me email alerts for new comments to this post';}}function toggleSubscription() {ctl00___ctl00___ctl01___DetailedSubBar___BlogThreadButton_trackWorking = true;document.getElementById('ctl00___ctl00___ctl01___DetailedSubBar___BlogThreadButton').innerHTML = 'Updating email notifications...';ThreadSubscribeLinkButton.ToggleEmailReplies('ctl00___ctl00___ctl01___DetailedSubBar___BlogThreadButton',520683, toggleSubscriptionCallback);}function toggleSubscriptionCallback(response) {ctl00___ctl00___ctl01___DetailedSubBar___BlogThreadButton_trackWorking = false;if((response.error == null) && (response.value == true)) {if(ctl00___ctl00___ctl01___DetailedSubBar___BlogThreadButton_trackStatus == true) {ctl00___ctl00___ctl01___DetailedSubBar___BlogThreadButton_trackStatus = false;} else {ctl00___ctl00___ctl01___DetailedSubBar___BlogThreadButton_trackStatus = true;}updateSubscriptionText();} else {updateSubscriptionText();alert('An error happened while processing your request.  Please notify an administrator and try again later.');}}</script>
<script src="calligraphy-in-ink-part-2.aspx_files/WebResource_002.js" type="text/javascript"></script>
<script type="text/javascript">
<!--
function WebForm_OnSubmit() {
if (typeof(ValidatorOnSubmit) == "function" && ValidatorOnSubmit() == false) return false;
return true;
}
// -->
</script>

			
<div id="masthead">
	
		<div id="welcome" align="right">
			
					Signed in as <a href="http://blogs.msdn.com/user/EditProfile.aspx?ReturnUrl=/blogs/post.aspx?App=danteg&amp;y=2007&amp;m=06&amp;d=20&amp;PostName=calligraphy-in-ink-part-2">bbraatz</a>
 | <a id="ctl00___ctl00___duw1_rc1___logout" href="http://blogs.msdn.com/logout.aspx">Sign out</a>



				
			 | 
			<a id="ctl00___ctl00___duw1_Faq1" href="http://blogs.msdn.com/languages/en-US/docs/faq.aspx">Help</a>
		</div>
	
</div>
<div id="wrapper">
	<div id="container">
		<div id="header">
			
<div id="title">
	<div id="SearchSideBar">
		
<div id="search">
	<input name="ctl00$_$ctl00$_$bt$_$ws$_$SearchBox" id="ctl00___ctl00___bt___ws___SearchBox" class="searchBox" onkeydown="KeyDownHandlerctl00___ctl00___bt___ws___SearchButton(event);" type="text">
	<a id="ctl00___ctl00___bt___ws___SearchButton" href="javascript:__doPostBack('ctl00$_$ctl00$_$bt$_$ws$_$SearchButton','')">Search</a>
</div>	
	</div>
	<h1><a id="ctl00___ctl00___bt___BlogTitle" class="headermaintitle" href="http://blogs.msdn.com/danteg/default.aspx">Dante's blog</a></h1>
	<p id="tagline"></p>
</div>
<div id="nav">
	<div id="SubscriptionsSideBar">
		
<div id="subscriptions">
<ul>
	<li><a id="ctl00___ctl00___bt___s___rss" href="http://blogs.msdn.com/danteg/rss.xml">RSS 2.0</a></li>
	<li><a id="ctl00___ctl00___bt___s___atom" href="http://blogs.msdn.com/danteg/atom.xml">Atom 1.0</a></li>
	<li><a id="ctl00___ctl00___bt___s___email" href="http://blogs.msdn.com/danteg/emailsubscriptions.aspx">Email alerts</a></li>
</ul></div>
	</div>
	<ul>
		<li><a id="ctl00___ctl00___bt___home" href="http://blogs.msdn.com/danteg/default.aspx">Home</a></li>
		<li><a id="ctl00___ctl00___bt___Aboutlink1" href="http://blogs.msdn.com/danteg/about.aspx">About</a></li>
		<li><a id="ctl00___ctl00___bt___Contactlink1" href="http://blogs.msdn.com/danteg/contact.aspx">Email</a></li>
	</ul>
</div></div>
		<div id="contentmargin"></div>
		<div id="contentwrapper">
			<div id="sidebar-a">
				

<div id="TasksSideBar">
	
</div>

<div id="TagSideBar">
	<h3>Tags</h3>
	<ul>
	<ul class="SidebarTagCloud">
<li class="Tag1"><a href="http://blogs.msdn.com/danteg/archive/tags/Blend/default.aspx" rel="tag">Blend</a></li>
<li class="Tag2"><a href="http://blogs.msdn.com/danteg/archive/tags/Code/default.aspx" rel="tag">Code</a></li>
<li class="Tag5"><a href="http://blogs.msdn.com/danteg/archive/tags/Databinding/default.aspx" rel="tag">Databinding</a></li>
<li class="Tag5"><a href="http://blogs.msdn.com/danteg/archive/tags/Gaming/default.aspx" rel="tag">Gaming</a></li>
<li class="Tag6"><a href="http://blogs.msdn.com/danteg/archive/tags/MyGame/default.aspx" rel="tag">MyGame</a></li>
<li class="Tag3"><a href="http://blogs.msdn.com/danteg/archive/tags/Personal/default.aspx" rel="tag">Personal</a></li>
</ul>

	</ul>
</div>

<div id="NewsSideBar">
	
</div>

<div id="ArchiveSideBar">
	

<h3>Archives</h3>
<ul>

	<li><a href="http://blogs.msdn.com/danteg/archive/2007/10.aspx">October 2007 (1)</a></li>

	<li><a href="http://blogs.msdn.com/danteg/archive/2007/08.aspx">August 2007 (1)</a></li>

	<li><a href="http://blogs.msdn.com/danteg/archive/2007/07.aspx">July 2007 (2)</a></li>

	<li><a href="http://blogs.msdn.com/danteg/archive/2007/06.aspx">June 2007 (3)</a></li>

	<li><a href="http://blogs.msdn.com/danteg/archive/2007/03.aspx">March 2007 (5)</a></li>

	<li><a href="http://blogs.msdn.com/danteg/archive/2006/10.aspx">October 2006 (1)</a></li>

	<li><a href="http://blogs.msdn.com/danteg/archive/2006/06.aspx">June 2006 (2)</a></li>

	<li><a href="http://blogs.msdn.com/danteg/archive/2006/03.aspx">March 2006 (2)</a></li>

</ul>
</div>

<div id="LinkSideBar">
	

</div>
			</div>
			<div id="content"><div id="content2">
				
			




<div class="post">
	<div class="posthead">
		<div class="postviewhead">
			Wednesday, June 20, 2007 11:09 PM
			by
			<a id="ctl00___ctl00___ctl01___Entry___AuthorLink" href="http://blogs.msdn.com/user/Profile.aspx?UserID=23987">DanteG</a> 
			<span class="CommonRateControl" id="ctl00___ctl00___ctl01___Entry___Ratings" title="Not yet rated"><img title="Poor" src="calligraphy-in-ink-part-2.aspx_files/star-left-off.gif" align="absmiddle" border="0"><img title="Poor" src="calligraphy-in-ink-part-2.aspx_files/star-right-off.gif" align="absmiddle" border="0"><img title="Fair" src="calligraphy-in-ink-part-2.aspx_files/star-left-off.gif" align="absmiddle" border="0"><img title="Fair" src="calligraphy-in-ink-part-2.aspx_files/star-right-off.gif" align="absmiddle" border="0"><img title="Average" src="calligraphy-in-ink-part-2.aspx_files/star-left-off.gif" align="absmiddle" border="0"><img title="Average" src="calligraphy-in-ink-part-2.aspx_files/star-right-off.gif" align="absmiddle" border="0"><img title="Good" src="calligraphy-in-ink-part-2.aspx_files/star-left-off.gif" align="absmiddle" border="0"><img title="Good" src="calligraphy-in-ink-part-2.aspx_files/star-right-off.gif" align="absmiddle" border="0"><img title="Excellent" src="calligraphy-in-ink-part-2.aspx_files/star-left-off.gif" align="absmiddle" border="0"><img title="Excellent" src="calligraphy-in-ink-part-2.aspx_files/star-right-off.gif" align="absmiddle" border="0"></span><input value="0" id="ctl00___ctl00___ctl01___Entry___Ratings_Value" type="hidden">
		</div>
		<h2>Calligraphy In Ink! (Part 2)</h2>
	</div>
	<div class="postcontent">
		<p>Ok, see this is what happens when I have some time to 'play' with Blend.</p>
<p>My previous post showed how to modify the stylus tip to get
something akin to a calligraphy pen. But, the pen that I got most
recently got is called a scroll point. The tip itself looks like a
fairly broad pen, but there's a 'gap' in the middle, so it's
effectively drawing two parallel lines. You use the same gestures you'd
use with a normal pen, it just looks somewhat different. (Sorry, I
can't seem to find a bloody link on the web to show you what I'm
talking about).</p>
<p>So, I want to duplicate THIS effect. It's a bit trickier then it was with the widening the tip, but it's still doable.</p>
<p>First, I need to implement my own handler for when I'm working with
the Stylus, so I can intercept the event and add the second (and for
fun) third line. I only want to draw when the stylus is down, so easily
enough, add a property on the paper for when we're drawing. (Now, here
I was a bit lazy and did it on the Window itself, but moving it the
paper should be easy enough).</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">public</span><span style="font-size: 10pt; font-family: 'Courier New';"> <span style="color: blue;">partial</span> <span style="color: blue;">class</span> <span style="color: rgb(43, 145, 175);">Window1<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>bool</span><span style="font-size: 10pt; font-family: 'Courier New';"> drawing = <span style="color: blue;">false</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 0.5in;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">public</span> Window1()<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">this</span>.InitializeComponent();<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style=""></span></span>&nbsp;</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">private</span> <span style="color: blue;">void</span> OnStylusDown(<span style="color: blue;">object</span> sender, System.Windows.Input.<span style="color: rgb(43, 145, 175);">StylusDownEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">this</span>.drawing = <span style="color: blue;">true</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">private</span> <span style="color: blue;">void</span> OnStylusUp(<span style="color: blue;">object</span> sender, System.Windows.Input.<span style="color: rgb(43, 145, 175);">StylusEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">this</span>.drawing = <span style="color: blue;">false</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">}</span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"></span>&nbsp;</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><font face="Arial">(Of
course, I do need to hook the StylusDown and StylusUp events up
correctly, but that's trivial in Blend). Ok, now I can just check
this.drawing, and if it's true, then the Stylus is actually on the
surface. All I need to do, is when I'm drawing, add another stroke. So,
add a StylusMove event:</font></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><font face="Arial"></font></span>&nbsp;</p><span style="font-size: 10pt; font-family: 'Courier New';"><font face="Arial">
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 0.5in;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">private</span><span style="font-size: 10pt; font-family: 'Courier New';"> <span style="color: blue;">void</span> OnStylusMove(<span style="color: blue;">object</span> sender, System.Windows.Input.<span style="color: rgb(43, 145, 175);">StylusEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 0.5in;"><span style="font-size: 10pt; font-family: 'Courier New';">{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 1in;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">if</span><span style="font-size: 10pt; font-family: 'Courier New';"> (<span style="color: blue;">this</span>.drawing)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: rgb(43, 145, 175);">StylusPointCollection</span> originalPoints = e.GetStylusPoints(Paper);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: rgb(43, 145, 175);">StylusPointCollection</span> newPoints = <span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPointCollection</span>();<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: rgb(43, 145, 175);">StylusPointCollection</span> moreNewPoints = <span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPointCollection</span>();<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">foreach</span> (<span style="color: rgb(43, 145, 175);">StylusPoint</span> thisPoint <span style="color: blue;">in</span> originalPoints)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>newPoints.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPoint</span>(thisPoint.X + 3, thisPoint.Y + 3, thisPoint.PressureFactor));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>moreNewPoints.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPoint</span>(thisPoint.X + 6, thisPoint.Y + 6, thisPoint.PressureFactor));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Paper.Strokes.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">Stroke</span>(newPoints));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Paper.Strokes.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">Stroke</span>(moreNewPoints));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p></font></span>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><font face="Arial"></font></span>&nbsp;</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><font face="Arial">Add
this and run it, and it's almost there. You'll see the additional lines
get added, but there's one 'stupid' issue. if you look, the second and
third strokes, depending on your speed, will look somewhat dotted.
Here's what's happening. Let's say, for the sake of argument, that
based on your drawing speed, the StylusMove is getting called each time
with 3 points. Consider when you draw a line of length 9. The original
line will correctly connect every point, 1 to 2, 2 to 3, 3 to 4 and so
on. </font></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><font face="Arial"></font></span>&nbsp;</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><font face="Arial">However,
in our instance, the StylusMove gets called with points 1, 2 and 3, so
it creates a stroke connecting those three points. It gets called the
second time with points 4, 5 and 6, and it creates that stroke. Here is
the problem... nothing ever connects points 3 and 4! So where the
original stroke is 9 connected points, our added strokes are three
seperate strokes, each three points long, and disconnected. </font></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><font face="Arial"></font></span>&nbsp;</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><font face="Arial">Well,
that's no good. So, we need to remember what point 3 was, so that when
we start the next stroke segment, we use that as our initial point and
connect there. So, in effect, instead of 1-2-3 4-5-6 7-8-9, we end up
with 1-2-3 3-4-5-6 6-7-8-9, and since 3 and 3 match, it works.</font></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><font face="Arial"></font></span>&nbsp;</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><font face="Arial">However,
once the Stylus comes off the page, we want to forget that final point,
otherwise, we'd be always attaching the end point to the begin point of
the new stroke, and that's obnoxious.</font></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><font face="Arial"></font></span>&nbsp;</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><font face="Arial">So, start by adding two new properties, one for the last detected point, and one for whether or not we're 'remembering' a point.</font></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"></span>&nbsp;</p><span style="font-size: 10pt; font-family: 'Courier New';">
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 0.5in;"><span style="font-size: 10pt; color: rgb(43, 145, 175); font-family: 'Courier New';">StylusPoint</span><span style="font-size: 10pt; font-family: 'Courier New';"> lastDetectedPoint = <span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPoint</span>();<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 0.5in;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">bool</span><span style="font-size: 10pt; font-family: 'Courier New';"> drawingContinuousLine = <span style="color: blue;">false</span>;<o:p></o:p></span></p></span>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"></span>&nbsp;</p>
<p>So, whenever drawingContinuousLine is set to true, we need to
initialize the newPoints and moreNewPoints collections to that
lastDetectedPoint (adjusted, of course, by 3 and 6
respectively).&nbsp;And, every time we add a new stroke in the
StylusMove, we need to remember that lastDetectedPoint and&nbsp;state
that we are&nbsp;drawing.</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 0.5in;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">private</span><span style="font-size: 10pt; font-family: 'Courier New';"> <span style="color: blue;">void</span> OnStylusMove(<span style="color: blue;">object</span> sender, System.Windows.Input.<span style="color: rgb(43, 145, 175);">StylusEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 0.5in;"><span style="font-size: 10pt; font-family: 'Courier New';">{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 1in;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">if</span><span style="font-size: 10pt; font-family: 'Courier New';"> (<span style="color: blue;">this</span>.drawing)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: rgb(43, 145, 175);">StylusPointCollection</span> originalPoints = e.GetStylusPoints(Paper);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: rgb(43, 145, 175);">StylusPointCollection</span> newPoints = <span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPointCollection</span>();<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: rgb(43, 145, 175);">StylusPointCollection</span> moreNewPoints = <span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPointCollection</span>();<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">if</span> (<span style="color: blue;">this</span>.drawingContinuousLine)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>newPoints.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPoint</span>(<span style="color: blue;">this</span>.lastDetectedPoint.X + 3, <span style="color: blue;">this</span>.lastDetectedPoint.Y + 3, <span style="color: blue;">this</span>.lastDetectedPoint.PressureFactor));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>moreNewPoints.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPoint</span>(<span style="color: blue;">this</span>.lastDetectedPoint.X + 6, <span style="color: blue;">this</span>.lastDetectedPoint.Y + 6, <span style="color: blue;">this</span>.lastDetectedPoint.PressureFactor));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">foreach</span> (<span style="color: rgb(43, 145, 175);">StylusPoint</span> thisPoint <span style="color: blue;">in</span> originalPoints)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>newPoints.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPoint</span>(thisPoint.X + 3, thisPoint.Y + 3, thisPoint.PressureFactor));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>moreNewPoints.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPoint</span>(thisPoint.X + 6, thisPoint.Y + 6, thisPoint.PressureFactor));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Paper.Strokes.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">Stroke</span>(newPoints));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Paper.Strokes.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">Stroke</span>(moreNewPoints));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">this</span>.drawingContinuousLine = <span style="color: blue;">true</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">this</span>.lastDetectedPoint = originalPoints[originalPoints.Count - 1];<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p>And, last&nbsp;but not least, we want to make sure that on StylusUp,
add&nbsp;state that we're no longer drawing a ContinuousLine, so our
strokes correctly stop getting drawn.</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">private</span> <span style="color: blue;">void</span> OnStylusUp(<span style="color: blue;">object</span> sender, System.Windows.Input.<span style="color: rgb(43, 145, 175);">StylusEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">this</span>.drawing = <span style="color: blue;">false</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">this</span>.drawingContinuousLine = <span style="color: blue;">false</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p>And there you have it. Here's the final code (if you don't want to
go hunting and pasting throughout my code).&nbsp;In order to make this
work:</p>
<ul>
<li>Create an InkCanvas, and name it Paper</li>
<li>Hook StylusUp, StylusDown and StylusMove to OnStylusUp, OnStylusDown and OnStylusMove respectively</li>
<li>Add the code</li>
<li>Enjoy</li></ul>
<p>Note that this will only work with an actual Stylus, so you can't
use a Mouse to mock it up. However, it wouldn't be too hard to add the
code to work with a Mouse as well.</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">public</span><span style="font-size: 10pt; font-family: 'Courier New';"> <span style="color: blue;">partial</span> <span style="color: blue;">class</span> <span style="color: rgb(43, 145, 175);">Window1<o:p></o:p></span></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>bool</span><span style="font-size: 10pt; font-family: 'Courier New';"> drawing = <span style="color: blue;">false</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 0.5in;"><span style="font-size: 10pt; color: rgb(43, 145, 175); font-family: 'Courier New';">StylusPoint</span><span style="font-size: 10pt; font-family: 'Courier New';"> lastDetectedPoint = <span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPoint</span>();<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 0.5in;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">bool</span><span style="font-size: 10pt; font-family: 'Courier New';"> drawingContinuousLine = <span style="color: blue;">false</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 0.5in;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">public</span> Window1()<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">this</span>.InitializeComponent();<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 0.5in;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">private</span><span style="font-size: 10pt; font-family: 'Courier New';"> <span style="color: blue;">void</span> OnStylusMove(<span style="color: blue;">object</span> sender, System.Windows.Input.<span style="color: rgb(43, 145, 175);">StylusEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 0.5in;"><span style="font-size: 10pt; font-family: 'Courier New';">{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt; text-indent: 1in;"><span style="font-size: 10pt; color: blue; font-family: 'Courier New';">if</span><span style="font-size: 10pt; font-family: 'Courier New';"> (<span style="color: blue;">this</span>.drawing)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: rgb(43, 145, 175);">StylusPointCollection</span> originalPoints = e.GetStylusPoints(Paper);<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: rgb(43, 145, 175);">StylusPointCollection</span> newPoints = <span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPointCollection</span>();<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: rgb(43, 145, 175);">StylusPointCollection</span> moreNewPoints = <span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPointCollection</span>();<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">if</span> (<span style="color: blue;">this</span>.drawingContinuousLine)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>newPoints.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPoint</span>(<span style="color: blue;">this</span>.lastDetectedPoint.X + 3, <span style="color: blue;">this</span>.lastDetectedPoint.Y + 3, <span style="color: blue;">this</span>.lastDetectedPoint.PressureFactor));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>moreNewPoints.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPoint</span>(<span style="color: blue;">this</span>.lastDetectedPoint.X + 6, <span style="color: blue;">this</span>.lastDetectedPoint.Y + 6, <span style="color: blue;">this</span>.lastDetectedPoint.PressureFactor));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">foreach</span> (<span style="color: rgb(43, 145, 175);">StylusPoint</span> thisPoint <span style="color: blue;">in</span> originalPoints)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>newPoints.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPoint</span>(thisPoint.X + 3, thisPoint.Y + 3, thisPoint.PressureFactor));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>moreNewPoints.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">StylusPoint</span>(thisPoint.X + 6, thisPoint.Y + 6, thisPoint.PressureFactor));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Paper.Strokes.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">Stroke</span>(newPoints));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Paper.Strokes.Add(<span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">Stroke</span>(moreNewPoints));<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">this</span>.drawingContinuousLine = <span style="color: blue;">true</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">this</span>.lastDetectedPoint = originalPoints[originalPoints.Count - 1];<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">private</span> <span style="color: blue;">void</span> OnStylusDown(<span style="color: blue;">object</span> sender, System.Windows.Input.<span style="color: rgb(43, 145, 175);">StylusDownEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">this</span>.drawing = <span style="color: blue;">true</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">private</span> <span style="color: blue;">void</span> OnStylusUp(<span style="color: blue;">object</span> sender, System.Windows.Input.<span style="color: rgb(43, 145, 175);">StylusEventArgs</span> e)<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">this</span>.drawing = <span style="color: blue;">false</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">this</span>.drawingContinuousLine = <span style="color: blue;">false</span>;<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';">}</span><o:p></o:p></p>
<p mce_keep="true">&nbsp;</p>
<p mce_keep="true">&nbsp;</p>
<p class="MsoNormal" style="margin: 0in 0in 0pt;"><span style="font-size: 10pt; font-family: 'Courier New';"></span>&nbsp;</p>
	</div>
	<div><span id="ctl00___ctl00___ctl01___Entry___InlineTagEditorPanel">Filed under: <a href="http://blogs.msdn.com/danteg/archive/tags/Blend/default.aspx" rel="tag">Blend</a>, <a href="http://blogs.msdn.com/danteg/archive/tags/Code/default.aspx" rel="tag">Code</a></span><input name="ctl00$_$ctl00$_$ctl01$_$Entry$_$InlineTagEditorPanel" id="ctl00___ctl00___ctl01___Entry___InlineTagEditorPanel_State" value="nochange" type="hidden"></div>
							
</div>            


<div id="postToolbar">
<h2 class="CommonSubTitle">Comment Notification</h2>
<p>
	
	<a href="javascript:toggleSubscription();" id="ctl00___ctl00___ctl01___DetailedSubBar___BlogThreadButton" trackingresourcename="Weblogs_UnTrack" nottrackingresourcename="Weblogs_Track" workingresourcename="Weblogs_TrackWorking">Send me email alerts for new comments to this post</a>
</p>
<p>
	Subscribe to this post's comments using
	<a id="ctl00___ctl00___ctl01___DetailedSubBar___CommentRssLink" href="http://blogs.msdn.com/danteg/commentrss.aspx?PostID=3432728">RSS</a>
</p>
</div>


	<h3>
	Comments
</h3>
	<div id="comments">

	<div class="commentssubhead">
		No Comments
	</div>

	</div>





<div id="commentform">
<h3>Leave a Comment</h3>
<dl>
	
	<dt><label for="ctl00___ctl00___ctl01___form___tbUrl">Your URL</label> <em>(optional</em>)</dt>
	<dd><input name="ctl00$_$ctl00$_$ctl01$_$form$_$tbUrl" id="ctl00___ctl00___ctl01___form___tbUrl" class="smallbox" type="text"></dd>
	<dt><label for="ctl00___ctl00___ctl01___form___tbComment">Comments</label> <em>(required)</em><span id="ctl00___ctl00___ctl01___form___Requiredfieldvalidator3" style="color: Red; visibility: hidden;">*</span></dt>
	<dd><textarea name="ctl00$_$ctl00$_$ctl01$_$form$_$tbComment" rows="5" cols="25" id="ctl00___ctl00___ctl01___form___tbComment"></textarea></dd>
	<dt></dt>
	<dt><input name="ctl00$_$ctl00$_$ctl01$_$form$_$btnSubmit" value="Submit" onclick='javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions("ctl00$_$ctl00$_$ctl01$_$form$_$btnSubmit", "", true, "", "", false, false))' id="ctl00___ctl00___ctl01___form___btnSubmit" type="submit"></dt>
</dl>
</div>



	
<h2 class="CommonSubTitle">About DanteG</h2>Well, I've been in the
industry in one form or another since about 1997, when I graduated from
Oakland University in Rochester, Michigan. I worked with Cimlinc as an
intern on the now defunct Envelop project when I got laid off and spent
some time as a furniture salesman (Yeah, I know...)
Before I finished my degree, I started working for Thedra, writing UI
in Tcl/Tk primarily for Sun Solaric and some ancient little Unix boxes
that I can't even remember the names.
I moved to tech support for Altair Engineering, where I stayed until
they discovered that I knew how to code. I was there as a developer for
a couple years until the auto industry led to rounds of layoffs at
Altair, and I was one of them.
Then, after 3 months, Microsoft decided that they wanted to give me a
shot, so in November of 2002, I went out to be one of the few testers
on the newly built "Code Name: Sparkle" project. Sparkle eventually
became the Expression Interactive Designer, and finally Expression
Blend. Now, almost 5 years later, I'm still a tester with Microsoft on
Expression Blend, but my 'reach' is extended through my Total Training
series and here on my blog.
Personally, I'm married (2007 was 10 years), and I have one son who is
a Viva Pinata addict. </div></div>
			<div id="contentfooter">&nbsp;</div>
		</div>
		<div id="footer">
			
		</div>
	</div>
</div>

<script type="text/javascript">
<!--
var Page_Validators =  new Array(document.getElementById("ctl00___ctl00___ctl01___form___Requiredfieldvalidator3"));
// -->
</script>

<script type="text/javascript">
<!--
var ctl00___ctl00___ctl01___form___Requiredfieldvalidator3 = document.all ? document.all["ctl00___ctl00___ctl01___form___Requiredfieldvalidator3"] : document.getElementById("ctl00___ctl00___ctl01___form___Requiredfieldvalidator3");
ctl00___ctl00___ctl01___form___Requiredfieldvalidator3.controltovalidate = "ctl00___ctl00___ctl01___form___tbComment";
ctl00___ctl00___ctl01___form___Requiredfieldvalidator3.errormessage = "*";
ctl00___ctl00___ctl01___form___Requiredfieldvalidator3.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
ctl00___ctl00___ctl01___form___Requiredfieldvalidator3.initialvalue = "";
// -->
</script>

<script language="javascript" type="text/javascript">
<!--
function KeyDownHandlerctl00___ctl00___bt___ws___SearchButton(event)
{
	if (event.keyCode == 13)
	{
		event.returnValue = false;
		event.cancel = true;
     __doPostBack('ctl00$_$ctl00$_$bt$_$ws$_$SearchButton','')	}
}

//-->
</script>
<script language="javascript">var ctl00___ctl00___ctl01___Entry___Ratings=new RateControl('ctl00___ctl00___ctl01___Entry___Ratings','ctl00___ctl00___ctl01___Entry___Ratings','ctl00___ctl00___ctl01___Entry___Ratings_Value', 5, '/Themes/default/images/common/', false, 'CommonRateControl','CommonRateControlActive','CommonRateControlReadOnly',['Terrible','Poor','Fair','Average','Good','Excellent'],false,true);</script>
<!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://blogs.msdn.com/danteg/archive/2007/06/20/calligraphy-in-ink-part-2.aspx"
dc:identifier="http://blogs.msdn.com/danteg/archive/2007/06/20/calligraphy-in-ink-part-2.aspx"
dc:title="Calligraphy In Ink! (Part 2)"
trackback:ping="http://blogs.msdn.com/danteg/trackback.aspx?PostID=3432728" />
</rdf:RDF>
-->

<script type="text/javascript">
<!--
var Page_ValidationActive = false;
if (typeof(ValidatorOnLoad) == "function") {
    ValidatorOnLoad();
}

function ValidatorOnSubmit() {
    if (Page_ValidationActive) {
        return ValidatorCommonOnSubmit();
    }
    else {
        return true;
    }
}
// -->
</script>
        </form>
</body></html>
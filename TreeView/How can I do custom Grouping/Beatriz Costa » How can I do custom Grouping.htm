<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Beatriz Costa » How can I do custom Grouping?</title>



<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="generator" content="WordPress 2.2.2"><!-- leave this for stats --><!-- Editable Meta Tags --> 

<meta name="description" content="">
<meta name="keywords" content="">
<meta name="author" content="Sreejith - GFXedit.com">
<meta name="copyright" content="Your Name">
<meta name="generator" content="WordPress 2.2.2">
<meta name="robots" content="index,follow"><!-- Meta Tags End--><!-- Style Sheet -->



<style type="text/css" media="screen">
@import url( http://www.beacosta.com/blog/wp-content/themes/darkpad-10/style.css );
</style><!-- Style Sheet End --><!-- Includes -->



 <script type="text/javascript" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/addEvent.htm"></script>
 <script type="text/javascript" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/titles.htm"></script><!-- End Includes --><!-- Feed and Ping URLS-->



<link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://www.beacosta.com/blog/?feed=rss2">
<link rel="alternate" type="text/xml" title="RSS .92" href="http://www.beacosta.com/blog/?feed=rss">
<link rel="alternate" type="application/atom+xml" title="Atom 0.3" href="http://www.beacosta.com/blog/?feed=atom">
<link rel="pingback" href="http://www.beacosta.com/blog/xmlrpc.php"><!--?php wp_get_archives('type=monthly&format=link'); ?-->

	<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.beacosta.com/blog/xmlrpc.php?rsd">
<script language="javascript" type="text/javascript">
<!--
		function collapseThread( theId ) {
			var comment = document.getElementById(theId);
			if(!comment)
			{
				alert("ERROR:\nThe document structure is different\nfrom what Threaded Comments expects.\nYou are missing the element '"+theId+"'");
				return;
			}
			var theBody = findBody(comment);
			if(comment.className.indexOf("collapsed") > -1) {
				comment.className = comment.className.replace(" collapsed", "");;
			} else {
				comment.className += " collapsed";
			}
		}

		function expandThread( theId ) {
			var comment = document.getElementById(theId);
			if(!comment)
			{
				alert("ERROR:\nThe document structure is different\nfrom what Threaded Comments expects.\nYou are missing the element '"+theId+"'");
				return;
			}
			var theBody = findBody(comment);
			if(comment.className.indexOf("collapsed") > -1) {
				comment.className = comment.className.replace(" collapsed", "");;
			} 
		}
		
		function findBody(el)
		{
			var divs = el.getElementsByTagName("div");
			var ret;
			for(var i = 0; i < divs.length; ++i) {
				if(divs.item(i).className.indexOf("body") > -1)
					return divs.item(i);
			}
			return false;
		}
	
		function onAddComment() {
			//checkDocumentIntegrity();
			var el = document.getElementById("commentform");
			// Future release: Check if form is filled correctly and mark the form fields.
			el.submit();
		}
		
		function moveAddCommentBelow(theId, threadId, collapse)
		{
			expandThread( theId );
			var addComment = document.getElementById("addcomment");
			if(!addComment)
			{
			  	alert("ERROR:\nThreaded Comments can't find the 'addcomment' div.\nThis is probably because you have changed\nthe comments.php file.\nMake sure there is a tag around the form\nthat has the id 'addcomment'"); 
				return
			}
			var comment = document.getElementById(theId);
			if(collapse)
			{
				for(var i = 0; i < comment.childNodes.length; ++i) {
					var c = comment.childNodes.item(i);
					if(typeof(c.className) == "string" && c.className.indexOf("collapsed")<0) {
						c.className += " collapsed";
					}
				}
			}
			addComment.parentNode.removeChild(addComment);

			comment.appendChild(addComment);
			if(comment.className.indexOf("alt")>-1) {
				addComment.className = addComment.className.replace(" alt", "");					
			} else {
				addComment.className += " alt";
			}
		        var replyId = document.getElementById("comment_reply_ID");
			if(replyId == null)
			{
				alert("Brians Threaded Comments Error:\nThere is no hidden form field called\n'comment_reply_ID'. This is probably because you\nchanged the comments.php file and forgot\nto include the field. Please take a look\nat the original comments.php and copy the\nform field over.");
			}
			replyId.value = threadId;
			var reRootElement = document.getElementById("reroot");
			if(reRootElement == null)
			{
				alert("Brians Threaded Comments Error:\nThere is no anchor tag called 'reroot' where\nthe comment form starts.\nPlease compare your comments.php to the original\ncomments.php and copy the reroot anchor tag over.");
			}
			reRootElement.style.display = "block";
			var aTags = comment.getElementsByTagName("A");
			var anc = aTags.item(0).id;
			//document.location.href = "#"+anc;
			document.getElementById("comment").focus();
		}

		function checkDocumentIntegrity()
		{
			str = "";
			
			str += checkElement("reroot","div tag");
			str += checkElement("addcomment", "div tag");
			str += checkElement("comment_reply_ID", "hidden form field");
			str += checkElement("content", "div tag");
			str += checkElement("comment", "textfield");
			str += checkElement("addcommentanchor", "anchor tag");
			
			if(str != "")
			{
				str = "Brian's Threaded Comments are missing some of the elements that are required for it to function correctly.\nThis is probably the because you have changed the original comments.php that was included with the plugin.\n\nThese are the errors:\n" + str;
				str += "\nYou should compare your comments.php with the original comments.php and make sure the required elements have not been removed.";

				alert(str);
			}
		}
               
		function checkElement(theId, elDesc)
		{
			var el = document.getElementById(theId);
			if(!el)
			{
				if(elDesc == null)
					elDesc = "element";
				return "- The "+elDesc+" with the ID '" +theId + "' is missing\n"; 
			}
			else 
				return "";
		}
		
		function reRoot()
		{
			var addComment = document.getElementById("addcomment");			
			var reRootElement = document.getElementById("reroot");
			reRootElement.style.display = "none";
			var content = document.getElementById("content");
			addComment.parentNode.removeChild(addComment);
			content.appendChild(addComment);
			addComment.className = addComment.className.replace(" alt", "");
			document.location.href = "#addcommentanchor";
			document.getElementById("comment").focus();				
			document.getElementById("comment_reply_ID").value = "0";
		}			
		
		function changeCommentSize(d)
		{
			var el = document.getElementById("comment");
			var height = parseInt(el.style.height);
			if(!height && el.offsetHeight)
				height = el.offsetHeight;
			height += d;
			if(height < 20) 
				height = 20;
			el.style.height = height+"px";
		}		
-->
</script>
<style type="text/css">
.comment 
{
	position: 				relative;
	margin:					3px;
	margin-top:				6px;
/*	border: 				1px solid #666; */
	padding:				4px 4px 4px 8px;
	background-color:		#fff;
}

.odd
{
	background-color: #f8f8f8;
}

.comment div {
	position: 				relative;
}

.comment .comment img
{
	margin: 				0px;
}

.comment .collapseicon 
{
	width: 					13px;
	height: 				13px;
	overflow:				hidden;
	background-image: 		url(http://www.beacosta.com/blog/wp-content/plugins/briansthreadedcomments.php?image=subthread-open.png);
}

.collapsed .collapseicon 
{
	background-image: 		url(http://www.beacosta.com/blog/wp-content/plugins/briansthreadedcomments.php?image=subthread.png);
}


.comment .reply {
	text-align: 			right;
	font-size: 				80%;
	padding: 				0px 6px 6px 0px;
}

.comment
{
	border: 	1px solid #ddd;
	margin-top: 			10px;
}

input#subscribe
{
	width: auto;
}

.comment .body .content
{
	padding:				0px 3px 0px 3px;
	width: 					100%;	
	overflow: 				auto; 
}

.comment .title abbr
{
	border: none;
}

.collapsed .body, .collapsed .comment
{
	display:				none;
}
/*
#addcomment small, #addcomment div
{
	padding:				3px;
}
*/
#commentform textarea {
	width: 97%;
}
</style><!-- End Feed and Ping URLS--></head><body>
	<div id="container">
		<div id="banner">
			<h1><a accesskey="1" href="http://www.beacosta.com/blog" title="Beatriz Costa">Beatriz Costa</a></h1>
			<h2 title="WPF Data Binding">WPF Data Binding</h2>
		</div>
		
		<div id="center">
			<div class="content">
								<div class="post">
					<div class="date">February 12, 2006</div>
					<h2 id="post-19"><a id="postTitle" href="http://www.beacosta.com/blog/?p=19" rel="bookmark" title="How can I do custom Grouping?">How can I do custom Grouping?</a></h2>
					<p><span id="text">My
previous post shows how to group items based on the value of a certain
property. In a real-world scenario you may want to group your items
based on some other logic. With this in mind, Avalon Data Binding
provides a way for you to write custom code and specify how you want to
group your items. This allows maximum flexibility; you can group your
items pretty much any way you can think of.</span></p>
<p><span id="text">Brett made a comment to my last blog post asking how
to group items based on their type. I will use this scenario to show
you how to do custom Grouping. </span></p>
<p><span id="text">My data source in this sample is of type
ObservableCollection&lt;object&gt;, and contains some objects of type
GreekGod and others of type GreekHero. My goal is to group all the
items of type GreekGod in a group called “Greek Gods” and group all
GreekHero items under the group “Greek Heroes”. This is what the markup
looks like:</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;&lt;Window.Resources&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;local:GreekGodsAndHeroes x:Key=”GodsAndHeroes” /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;local:GroupByTypeConverter x:Key=”GroupByTypeConverter”/&gt;</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;CollectionViewSource
x:Key=”cvs” Source=”{Binding Source={StaticResource GodsAndHeroes}}”&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;CollectionViewSource.GroupDescriptions&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;PropertyGroupDescription
Converter=”{StaticResource GroupByTypeConverter}”/&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/CollectionViewSource.GroupDescriptions&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/CollectionViewSource&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Window.Resources&gt;</span></p>
<p><span id="text">Notice that this time, instead of setting
PropertyName in PropertyGroupDescription, I set the Converter property.
This Converter is defined in the code behind and contains the logic to
divide the data items in groups.</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;public class GroupByTypeConverter : IValueConverter<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public object
Convert(object value, Type targetType, object parameter, CultureInfo
culture)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value is GreekGod)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return “Greek Gods”;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (value is GreekHero)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return “Greek Heroes”;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return null;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>
<p><span id="text">All the items that return the same value in the
Converter will be grouped together. In this scenario I am grouping the
items based on their type and my groups are of type string. Remember
that you can use a Converter to group your items some other way. Notice
also that the groups don’t have to be a string, they can be any object
you want.</span></p>
<p><span id="text">Just like in the previous post, I want to display the groups and items in a TreeView.</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;&lt;TreeView ItemsSource=”{Binding Source={StaticResource cvs}, Path=Groups}”<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Width=”200″&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/TreeView&gt;</span></p>
<p><span id="text">In this case, however, templating the items is not
as obvious. When the items are all of the same type this is really easy
to achieve with a chain of HierarchicalDataTemplates and a DataTemplate
for the leaf nodes. In this scenario we need a HierarchicalDataTemplate
for the groups and one of two DataTemplates for the leaf nodes,
depending on their type. </span></p>
<p><span id="text">My first approach to this was to have those 3
templates in the resources and set their DataType property instead of
giving them a key (with x:Key). This does not work because when you use
a HierarchicalDataTemplate to template a group and do not set its
ItemTemplate property, that same template is used for the lower levels
of the hierarchy. This behavior is useful when all the levels have
items of the same type (for example, when using a TreeView to display a
hierarchy of directories in a computer).</span></p>
<p><span id="text">My second approach was to set the
ItemTemplateSelector property of the HierarchicalDataTemplate to a
template selector that decides the correct template to use based on the
type of the leaf item. Unfortunately there is a bug in the
ItemTemplateSelector property of HierarchicalDataTemplate that prevents
this from working. Once the bug is fixed, this will be the correct way
to specify the templates.</span></p>
<p><span id="text">My third and final approach was to move the template
selector to the TreeView and add one more “if” branch to deal with
deciding what type to return for the groups (which are of type
CollectionViewGroup).</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;public override DataTemplate SelectTemplate(object item, DependencyObject container)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string templateKey;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (item is CollectionViewGroup)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;templateKey = “GroupTemplate”;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (item is GreekGod)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;templateKey = “GreekGodTemplate”;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (item is GreekHero)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;templateKey = “GreekHeroTemplate”;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return null;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (DataTemplate)((FrameworkElement)container).FindResource(templateKey);<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;Window.Resources&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;local:GodHeroTemplateSelector x:Key=”GodHeroTemplateSelector” /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(..)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Window.Resources&gt;</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;&lt;TreeView ItemsSource=”{Binding Source={StaticResource cvs}, Path=Groups}”<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ItemTemplateSelector=”{StaticResource GodHeroTemplateSelector}”<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Width=”200″&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/TreeView&gt;</span></p>
<p><span id="text">For each of the items displayed in the TreeView,
this template selector looks up the appropriate
(Hierarchical)DataTemplate in the resources.</span></p>
<p><span id="text">Here is a screenshot of the completed sample:</span></p>
<p><img src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/16GroupByType.png" style="margin: 0px auto 10px; display: block; text-align: center;" border="0"></p>
<p><span id="text"><a href="http://www.beacosta.com/Zips/16GroupByType.zip">Here</a> you can find the VS project with this sample code. This works with January CTP WPF bits. </span></p>
										<p class="posted">Posted by <a href="http://www.beacosta.com/blog/?author=1" title="Posts by Bea">Bea</a> under <a href="http://www.beacosta.com/blog/?cat=13" title="View all posts in Sorting, filtering, grouping" rel="category">Sorting, filtering, grouping</a>, <a href="http://www.beacosta.com/blog/?cat=7" title="View all posts in TreeView" rel="category">TreeView</a>, <a href="http://www.beacosta.com/blog/?cat=2" title="View all posts in WPF Data Binding" rel="category">WPF Data Binding</a> |   </p>
				</div>				
				<!-- <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
				xmlns:dc="http://purl.org/dc/elements/1.1/"
				xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
			<rdf:Description rdf:about="http://www.beacosta.com/blog/?p=19"
    dc:identifier="http://www.beacosta.com/blog/?p=19"
    dc:title="How can I do custom Grouping?"
    trackback:ping="http://www.beacosta.com/blog/wp-trackback.php?p=19" />
</rdf:RDF>	-->
				
<!-- You can start editing here. -->

<p><a href="http://www.beacosta.com/blog/?feed=rss2&amp;p=19"><abbr title="Really Simple Syndication">RSS</abbr> feed</a> 
| <a href="http://www.beacosta.com/blog/wp-trackback.php?p=19">Trackback <acronym title="\&quot;Uniform" resource="" identifier\="">URI</acronym></a>
</p>

<h2 id="comments">16 Comments 
<a href="#postcomment" title="Leave a comment">»</a>
</h2>
<div class="commentlist">
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-236" class="comment">
				<a name="comment-236" id="comment-236"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-236")'>
					<cite>Comment by jason d<a href="#comment-236"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-02-13 13:23:16 						
					</div>					
					<div class="content">
						<p>Hi
Beatriz, I’ve got a question that actually is in response to your posts
from last year, about getting a handle on a ListBoxItem from a ListBox.
I didn’t think you’d be checking comments from such an old post which
is why I put this here…</p>
<p>What if you’d like to specify things about the ListBoxItems before
they are created? As an example, let’s say you want to be notified when
the user mouses over a row in your ListBox. ListBoxItem (or
ListViewItem) extends ContentControl, so it has MouseEnter and
MouseLeave events. But as a WPF developer binding an
ObservableCollection to a ListBox, we are not creating the ListBoxItems
ourselves. They are created by some FrameworkElementFactory by the WPF
framework I’d imagine, when the ListBox is having it’s visual tree
built. So how can we get access to that FrameworkElementFactory, and
register some methods to be invoked upon the MouseEnter/MouseLeave
events being fired from the ListBoxItem?</p>
<p>Thanks! Great stuff here. This blog is doing more to explain the internals of WPF databinding than anything I’ve seen yet!</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-236", 236, true); return false;'>Reply to this comment</a>
											</div>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-238" class="comment odd">
				<a name="comment-238" id="comment-238"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-238")'>
					<cite>Comment by Bea<a href="#comment-238"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-09-14 15:30:53 						
					</div>					
					<div class="content">
						<p>Hi Jason,</p>
<p>You can set properties and register events on a generated
ListBoxItem by defining a style for it. This can be done by setting the
ItemContainerStyle property of ItemsControl to your style. </p>
<p>There is a Setter element that can be used inside a Style to set
properties on the element being styled. There is also an EventSetter
element that can register event handlers for the events you specify. </p>
<p>In the following markup, I am setting the foreground of all
ListBoxItems to blue. I also have event handlers set up for
MouseEnter/MouseLeave. </p>
<p> &lt;Style x:Key=”ContainerStyle” TargetType=”{x:Type ListBoxItem}”&gt;<br>
   &lt;Style.Setters&gt;<br>
     &lt;EventSetter Event=”Mouse.MouseEnter” Handler=”MouseEnterHandler”/&gt;<br>
     &lt;EventSetter Event=”Mouse.MouseLeave” Handler=”MouseLeaveHandler”/&gt;<br>
     &lt;Setter Property=”Foreground” Value=”DarkBlue” /&gt;<br>
   &lt;/Style.Setters&gt;<br>
 &lt;/Style&gt;</p>
<p>In the complete sample (see link below), I have event handlers such
that when I mouse over the item the background becomes light blue, and
when I mouse out the background goes back to white.</p>
<p>You can find a complete sample with this <a href="http://www.beacosta.com/BlogComments/1MouseEnterListBoxItem.zip" rel="nofollow">here</a>.</p>
<p>Let me know if this answers your question.</p>
<p>Bea</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-238", 238, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-237" class="comment">
				<a name="comment-237" id="comment-237"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-237")'>
					<cite>Comment by Brett<a href="#comment-237"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-02-14 06:57:08 						
					</div>					
					<div class="content">
						<p>Hi Bea,</p>
<p>Thanks for posting this for us. Your blog is invaluable to me for
validating the capabilities of the WPF so early in its lifecycle. By
showing us the best solution and the workaround, you have saved me
hours of futility.</p>
<p>Thank you very much!</p>
<p>Brett</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-237", 237, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-239" class="comment">
				<a name="comment-239" id="comment-239"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-239")'>
					<cite>Comment by Bea<a href="#comment-239"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-02-14 16:30:59 						
					</div>					
					<div class="content">
						<p>I
would just like to add that I do check comments from old posts. I
receive email notifications for those. So feel free to add the comments
where you think they make more sense.</p>
<p>Thanks.</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-239", 239, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-240" class="comment">
				<a name="comment-240" id="comment-240"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-240")'>
					<cite>Comment by Alex<a href="#comment-240"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-02-15 14:56:30 						
					</div>					
					<div class="content">
						<p>Hi Beatriz, your examples are really great!</p>
<p>I havw one question regarding 1MouseEnterListBoxItem example. It
works as it is in C#, however, when converted to VB.NET it cannot be
compiled until last parameters of the event handlers are converted from
RoutedEventArgs to MouseEventArgs.<br>
Why is the same XAML code requires different event handler signatures in different languages?</p>
<p>Regards,<br>
Alex</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-240", 240, true); return false;'>Reply to this comment</a>
											</div>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-241" class="comment odd">
				<a name="comment-241" id="comment-241"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-241")'>
					<cite>Comment by Bea<a href="#comment-241"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-02-16 16:35:23 						
					</div>					
					<div class="content">
						<p>Hi Alex,</p>
<p>I am no expert in VB, but I asked around here and it seems that this
is a by design difference between the two languages. In C#, if your
delegate takes a MouseEventArgs (which derives from RoutedEventArgs),
the parameter in the signature of the method can be RoutedEventArgs.
Apparently in VB the types in the signature of the delegate and the
parameter types have to match exactly. </p>
<p>If there are any VB experts reading this, please feel free to chime in and confirm or correct this.</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-241", 241, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-242" class="comment">
				<a name="comment-242" id="comment-242"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-242")'>
					<cite>Comment by Ruurd Boeke<a href="#comment-242"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-02-18 07:28:05 						
					</div>					
					<div class="content">
						<p>Hi Beatriz,</p>
<p>I think it’s weird that one can not use events within styles. I have
a style that shows a button when ‘IsSelected’ (by a trigger). When the
button is clicked, I want something to happen. But I can’t use the
Click event from that button. Why is that?</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-242", 242, true); return false;'>Reply to this comment</a>
											</div>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-243" class="comment odd">
				<a name="comment-243" id="comment-243"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-243")'>
					<cite>Comment by Bea<a href="#comment-243"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-02-18 20:44:58 						
					</div>					
					<div class="content">
						<p>Ruurd,</p>
<p>I’m not sure I understand your question. What element are you
styling, the Button or something else? Buttons don’t have an IsSelected
property. Or do you mean you have a Button within a template? If you
post your xaml here or in the Avalon Forum I will take a look.</p>
<p>Bea</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-243", 243, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-244" class="comment">
				<a name="comment-244" id="comment-244"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-244")'>
					<cite>Comment by jane<a href="#comment-244"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-02-20 23:38:35 						
					</div>					
					<div class="content">
						<p>Hi
Beatriz,your example is really great.But I meet some troubles when I
make the tree.If the tree have many more levels,how can I to deal with
it.<br>
Look forward to your help.</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-244", 244, true); return false;'>Reply to this comment</a>
											</div>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-245" class="comment odd">
				<a name="comment-245" id="comment-245"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-245")'>
					<cite>Comment by Bea<a href="#comment-245"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-02-21 15:59:19 						
					</div>					
					<div class="content">
						<p>Hi Jane,</p>
<p>I uploaded to my server a sample that does custom grouping with two
levels of groups: first it groups by the first letter of the Greek God
or Hero’s name, and then it groups by type. You can find my sample here.</p>
<p>Let me know if this is what you were looking for.</p>
<p>Bea</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-245", 245, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-246" class="comment">
				<a name="comment-246" id="comment-246"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-246")'>
					<cite>Comment by sergey<a href="#comment-246"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-02-24 05:51:20 						
					</div>					
					<div class="content">
						<p>Hi
Beatriz! Blog is really wonderfull! I’ll apreciate, if you answer one
question. You wrote that: “Notice also that the groups don’t have to be
a string, they can be any object you want.”. The question is if return
type of Convert() method is a custom class(for example it has two
properties: Id and Name), how could id be displayed in the header of
the group? Thanks.</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-246", 246, true); return false;'>Reply to this comment</a>
											</div>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-247" class="comment odd">
				<a name="comment-247" id="comment-247"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-247")'>
					<cite>Comment by Bea<a href="#comment-247"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-02-25 10:07:57 						
					</div>					
					<div class="content">
						<p>Hi Sergey,</p>
<p>Thanks for your nice words.</p>
<p>You can control how the group name is displayed and what information
you show, in the template for the group. In this particular sample, I
am grabbing the template I want from the resources, in the
“SelectTemplate” method. For group headers, I am picking the template
with key “GroupTemplate”, so this is the template you should change to
display ID only. You can do this by changing the Path of the Binding.
If you look at the “GroupTemplate” in this sample, you will see the
following binding: {Binding Path=Name}. Most likely you will simply
need to change the Path to Path=ID.</p>
<p>Does this answer your question?</p>
<p>Bea</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-247", 247, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-248" class="comment">
				<a name="comment-248" id="comment-248"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-248")'>
					<cite>Comment by Shanty<a href="#comment-248"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-03-03 00:45:38 						
					</div>					
					<div class="content">
						<p>Hi Bea (por cierto, por tu nombre, quizá eres de habla latina, no lo sé).<br>
I’m researching doin’ the same as you, but grouping at secnd level, not
first. I think mixing between Convert and putting a
HierarchicalDataTemplate before CollectionViewSource, I’ll find the
solution, but…<br>
Am I in the correct way??</p>
<p>Regards</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-248", 248, true); return false;'>Reply to this comment</a>
											</div>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-249" class="comment odd">
				<a name="comment-249" id="comment-249"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-249")'>
					<cite>Comment by Bea<a href="#comment-249"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-03-04 07:34:46 						
					</div>					
					<div class="content">
						<p>Hi Shanty,</p>
<p>If you want to do custom grouping at the second level, you can
simply define another group converter and add a second
PropertyGroupDescription to the GroupDescriptions collection of the
CollectionViewSource with that converter. I uploaded a project with the
xaml I described <a href="http://www.beacosta.com/BlogComments/21CustomMultiLevelGrouping.zip" rel="nofollow">here</a>. Let me know if this helps.</p>
<p>Sorry, my spanish is not that great. <img src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/icon_smile.gif" alt=":)" class="wp-smiley"> I speak european portuguese.</p>
<p>Bea</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-249", 249, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-250" class="comment">
				<a name="comment-250" id="comment-250"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-250")'>
					<cite>Comment by Doug Hagan<a href="#comment-250"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2007-08-12 10:55:20 						
					</div>					
					<div class="content">
						<p>Hi Beatriz,</p>
<p>Is there a way to specify styles for TreeViewItems based upon the
Type of the TreeViewItem? For example, I want to have the Account
expander and node to have a different style than the Campaign expander
and node. Since I am stylizing the TreeViewItem type I’m not sure how
to break out the underlying data types.</p>
<p>Thanks for all of your helpful posts!</p>
<p>&lt;Style d:IsControlPart=”True” TargetType=”{x:Type TreeViewItem}”&gt;<br>
.<br>
.<br>
.<br>
&lt;/Style&gt;</p>
<p>&lt;src:CustomerDataList x:Key=”MyList”/&gt;<br>
&lt;HierarchicalDataTemplate DataType = “{x:Type src:CustomerData}” ItemsSource = “{Binding Path=AccountDataList}” &gt;<br>
&lt;TextBlock Text=”{Binding Path=Name}” /&gt;<br>
&lt;/HierarchicalDataTemplate&gt;<br>
&lt;HierarchicalDataTemplate DataType = “{x:Type src:AccountData}” ItemsSource = “{Binding Path=CampaignDataList}”&gt;<br>
&lt;TextBlock Text=”{Binding Path=Name}” /&gt;<br>
&lt;/HierarchicalDataTemplate&gt;</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-250", 250, true); return false;'>Reply to this comment</a>
											</div>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-251" class="comment odd">
				<a name="comment-251" id="comment-251"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-251")'>
					<cite>Comment by Bea<a href="#comment-251"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2007-08-13 17:28:02 						
					</div>					
					<div class="content">
						<p>Hi Doug,</p>
<p>I’ve already followed up with your personally, but I will reply to your question here too for future reference.</p>
<p>TreeView has a property named ItemContainerStyleSelector which takes
a StyleSelector object. This allows us to pick a Style for each item,
based on whatever custom logic we want. In this case, the logic is
simple, we simply need to check for the type of the data item, which we
get as a parameter to the SelectStyle method: </p>
<p>public class ContainerStyle : System.Windows.Controls.StyleSelector<br>
{<br>
(…)</p>
<p>public override Style SelectStyle(object item, DependencyObject container)<br>
{<br>
if(item is ClassA)<br>
{<br>
return styleClassA;<br>
}<br>
else if(item is ClassB)<br>
{<br>
return styleClassB;<br>
}<br>
return null;<br>
}<br>
} </p>
<p>You can find <a href="http://www.beacosta.com/BlogComments/25StyleSelector.zip" rel="nofollow">here</a> a sample with this code.</p>
<p>I’ve seen people get stuck with this scenario because we need access
to the styles, which are typically defined in the main Window. In this
app I simply added a couple of public properties in the ContainerStyle
class of type Style, and I set those properties to the styles I defined
in XAML. There are probably different ways to do this.</p>
<p>Let me know if this helps and if you have any further questions.</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-251", 251, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
</div>
<div id="addcomment" class="comment" style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">
<a id="addcommentanchor" name="addcommentanchor"></a>
<form action="http://www.beacosta.com/blog/wp-comments-post.php" method="post" id="commentform">
<div class="add">
	<div id="reroot" style="display: none;">
		<small><a href="#" onclick="reRoot(); return false;">
			Click here to cancel "reply".
		</a></small>
	</div>
	<small>
		Name (required)	</small>
	<div>
		<input name="author" id="author" class="textarea" value="" size="28" tabindex="1" type="text">
	</div>
	<small>
		E-mail (required - never shown publicly)	</small>
	<div>
		<input name="email" id="email" value="" size="28" tabindex="2" type="text">
	</div>
	<small>
		<acronym title="Uniform Resource Identifier">URI</acronym>	</small>
	<div>
		<input name="url" id="url" value="" size="28" tabindex="3" type="text">	
	<div style="display: block;" id="secureimgdiv">
				<p><label for="securitycode">Anti-spam word: (Required)</label><span style="color: rgb(255, 0, 0);">*</span><br>
				<small>To
prove you're a person (not a spam script), type the security word shown
in the picture. Click on the picture to hear an audio file of the word.</small><br>
				<input name="securitycode" id="securitycode" size="30" tabindex="4" type="text">
				<input name="matchthis" value="1428" type="hidden">
				<a href="http://www.beacosta.com/blog?audioselect=1428" title="Hear an audio file of the anti-spam image"><img src="Beatriz%20Costa%20%BB%20How%20can%20I%20do%20custom%20Grouping_files/blog.jpg" alt="Click to hear an audio file of the anti-spam word" style="border: 1px solid black; vertical-align: top; height: 50px; width: 160px;"></a></p>
			</div></div>

	<small>
		Your Comment (<a href="#" onclick="changeCommentSize(-80); return false;">smaller size</a> | <a href="#" onclick="changeCommentSize(80); return false;">larger size</a>)
	</small>
	<div style="width: 100%;">
		<textarea name="comment" id="comment" cols="60" rows="14" tabindex="4"></textarea>
	</div>
	<small>
You may use &lt;a href="" title=""&gt; &lt;abbr title=""&gt;
&lt;acronym title=""&gt; &lt;b&gt; &lt;blockquote cite=""&gt;
&lt;code&gt; &lt;em&gt; &lt;i&gt; &lt;strike&gt; &lt;strong&gt; in your
comment. </small>
	<div>
		<input name="comment_post_ID" value="19" type="hidden">
		<input name="redirect_to" value="/blog/?p=19" type="hidden">
		<input onclick="if(typeof(onAddComment) == 'function') { onAddComment(); } else { alert('ERROR:\nIt looks like the website administrator hasn\'t activated the Brians Threaded Comments plugin from the plugin page'); };" name="addcommentbutton" id="addcommentbutton" value="Add comment" tabindex="5" type="button">
	</div>
</div>
<input id="comment_reply_ID" name="comment_reply_ID" value="0" type="hidden"><div style="display: none;" id="jsspamblock_hideable">
	<input name="jsspamblock_hidden" value="be6cc2c4e3c93d928d8542deb15c6008" type="hidden">
	<p>For spam filtering purposes, please copy the number <strong>2748</strong> to the field below:</p>
	<input name="jsspamblock_input" id="jsspamblock_input" tabindex="5" value="">
</div>
<script type="text/javascript">
	document.getElementById("jsspamblock_input").value = 2748;
	document.getElementById("jsspamblock_hideable").style.display = "none";
</script>
			
			<script language="JavaScript" type="text/javascript">
			<!--
				var urlinput = document.getElementById("url");
				var submitp = urlinput.parentNode;
				var substitution2 = document.getElementById("secureimgdiv");
				submitp.appendChild(substitution2, urlinput);
			// -->
			</script>
</form>
</div>
						
								
				<p></p><div align="center"></div>						
			</div>
		</div>
		<div id="right">
		<div class="sidebar">  
    <!-- Meta -->
	<h2>Meta:</h2>
 	<ul class="noli">
	<li><a href="http://feeds.feedburner.com/BeatrizCosta" title="Syndicate this site using RSS"><abbr title="Really Simple Syndication">RSS</abbr></a></li>
	<li><a href="http://feeds.feedburner.com/CommentsForBeatrizCosta" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
	</ul>				

  <!-- Search -->
  <h2>Search</h2>
	<br>
	<form id="searchform" method="get" action="">
	<input name="s" id="s" size="15" type="text">
	<input name="submit" value="Search" type="submit">
	</form>

  <!-- Categories -->
  <h2>Categories</h2>
	<ul class="menu">
		<li><a href="http://www.beacosta.com/blog/?cat=3" title="View all posts filed under General">General</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=2" title="View all posts filed under WPF Data Binding">WPF Data Binding</a>
	<ul class="children">
	<li><a href="http://www.beacosta.com/blog/?cat=12" title="View all posts filed under Binding to ADO.NET">Binding to ADO.NET</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=14" title="View all posts filed under ListBox">ListBox</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=9" title="View all posts filed under ListView">ListView</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=10" title="View all posts filed under Master-detail">Master-detail</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=13" title="View all posts filed under Sorting, filtering, grouping">Sorting, filtering, grouping</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=11" title="View all posts filed under Styles and Templates">Styles and Templates</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=7" title="View all posts filed under TreeView">TreeView</a>
</li>
	</ul>
</li>
	</ul>					
	
  <!-- Archives -->
	<h2>Archives</h2>
	<ul>
		<li><a href="http://www.beacosta.com/blog/?m=200709" title="September 2007">September 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200708" title="August 2007">August 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200705" title="May 2007">May 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200704" title="April 2007">April 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200701" title="January 2007">January 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200611" title="November 2006">November 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200610" title="October 2006">October 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200609" title="September 2006">September 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200608" title="August 2006">August 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200607" title="July 2006">July 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200606" title="June 2006">June 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200605" title="May 2006">May 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200604" title="April 2006">April 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200603" title="March 2006">March 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200602" title="February 2006">February 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200601" title="January 2006">January 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200512" title="December 2005">December 2005</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200511" title="November 2005">November 2005</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200510" title="October 2005">October 2005</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200509" title="September 2005">September 2005</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200508" title="August 2005">August 2005</a></li>
	</ul>

</div>			<div id="footer">
				<div class="copyright">
				<small>
				<span class="copy">Copyright © 2007 				<strong><a title="Beatriz Costa" href="http://www.beacosta.com/blog">Beatriz Costa</a>
				</strong>
				</span>
				<br><br>
				</small>
				</div>
			</div>	
		</div>
	</div>
</body></html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional-dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head id="ctl00_ctl00">
 

<meta name="description" content="Technology blog about new Microsoft technologies. E.g. WPF, crossbow, .NET framework 3, Live etc. It includes code sources and samples">
<meta name="keywords" content=".NET Framework, Example, Internals, Microsoft, Programming, Source Code, technology, tutorial, wpf.">
<meta name="GENERATOR" content="CommunityServer 2007 SP2 (Build: 20611.960)">
<link rel="pingback" href="http://blogs.microsoft.co.il/blogs/tamir/pingback.aspx">
<link rel="shortcut icon" type="image/ico" href="http://blogs.microsoft.co.il/favicon.ico">
<link rel="alternate" type="application/rss+xml" title="Just code - Tamir Khason (RSS 2.0)" href="http://feeds.feedburner.com/microsft">
<link rel="alternate" type="application/rss+xml" title="Just code - Tamir Khason - All Comments (RSS 2.0)" href="http://blogs.microsoft.co.il/blogs/tamir/rsscomments.aspx">
<link rel="alternate" type="application/rss+xml" title="Custom dependency property creation - Comments for this post (RSS 2.0)" href="http://blogs.microsoft.co.il/blogs/tamir/rsscomments.aspx?PostID=7530">

	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<link rel="stylesheet" href="Custom-dependency-property-creation.aspx_files/style.css" type="text/css" media="screen">
	<link rel="stylesheet" href="Custom-dependency-property-creation.aspx_files/print.htm" type="text/css" media="print">
	<link rel="stylesheet" href="Custom-dependency-property-creation.aspx_files/light_sidebar_left_wide.css" type="text/css" media="screen">
	<link rel="stylesheet" href="Custom-dependency-property-creation.aspx_files/DynamicStyle.css" type="text/css" media="screen">
<script src="Custom-dependency-property-creation.aspx_files/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-486526-1";
urchinTracker();
</script><title>Custom dependency property creation - Just code - Tamir Khason</title></head><body>
    <form name="aspnetForm" method="post" action="/blogs/tamir/archive/2007/02/02/Custom-dependency-property-creation.aspx" onsubmit="javascript:return WebForm_OnSubmit();" id="aspnetForm">
<div>
<input name="__EVENTTARGET" id="__EVENTTARGET" value="" type="hidden">
<input name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" type="hidden">
<input name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwULLTIwMjk4NDE1MzdkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYBBS5jdGwwMCRNYWluJGN0bDA4JGN0bDAyJGN0bDAyJGN0bDAyJGNoa1JlbWVtYmVyNnOa7G3ox0C7N39AE+DRj1GRFAw=" type="hidden">
</div>

<script type="text/javascript">
<!--
var theForm = document.forms['aspnetForm'];
if (!theForm) {
    theForm = document.aspnetForm;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
// -->
</script>


<script src="Custom-dependency-property-creation.aspx_files/WebResource.js" type="text/javascript"></script>


<script src="Custom-dependency-property-creation.aspx_files/WebResource_002.axd" type="text/javascript"></script>
<script src="Custom-dependency-property-creation.aspx_files/WebResource_004.axd" type="text/javascript"></script>
<script src="Custom-dependency-property-creation.aspx_files/WebResource_003.axd" type="text/javascript"></script>
<script src="Custom-dependency-property-creation.aspx_files/WebResource.axd" type="text/javascript"></script>
        
<script type="text/javascript">
<!--   
    function ValidateCaptcha(val, args) {
      
        var value = args.Value;
        var nameEQ = "CAPTCHA=";
        var captchaNumbers;        	
        var ca = document.cookie.split(';');
        
        for(var i=0;i < ca.length;i++) {
    	    var c = ca[i];
    	    while (c.charAt(0)==' ') c = c.substring(1,c.length);
    	    if (c.indexOf(nameEQ) == 0) captchaNumbers =  c.substring(nameEQ.length,c.length);
	    }

        args.IsValid = captchaNumbers == value;

    }
-->
</script>

<script src="Custom-dependency-property-creation.aspx_files/WebResource_002.js" type="text/javascript"></script>
<script type="text/javascript">
<!--
function WebForm_OnSubmit() {
if (typeof(ValidatorOnSubmit) == "function" && ValidatorOnSubmit() == false) return false;
return true;
}
// -->
</script>


    			

    <div id="masthead">
        <div id="welcome" align="right">
            
        <a href="http://blogs.microsoft.co.il/login.aspx?ReturnUrl=%2fblogs%2ftamir%2farchive%2f2007%2f02%2f02%2fCustom-dependency-property-creation.aspx">Sign in </a>
         | <a href="http://blogs.microsoft.co.il/user/CreateUser.aspx?ReturnUrl=">Join</a>
        | <a href="http://communityserver.org/r.ashx?K">Help</a>
     


        </div>
    </div>
    <div id="wrapper">
	        <div id="container">
		        <div id="header">
		            <div id="title">	                    
                        <h1 class="headermaintitle"><a href="http://blogs.microsoft.co.il/blogs/tamir/">Just code - Tamir Khason</a></h1>      
                        <p id="tagline">Take care of the sense, and the sounds will take care of themselves.</p>
                    </div>
                    <div id="SubscriptionsSideBar">
                        <div id="subscriptions"> 
                            <ul>
                                <li><a href="http://feeds.feedburner.com/microsft">RSS</a></li>
	                            <li><a href="http://feeds.feedburner.com/microsft">Atom</a></li>
						        <li id="RssComments"><a href="http://blogs.microsoft.co.il/blogs/tamir/rsscomments.aspx">Comments RSS</a></li>
                            </ul>
                        </div>
                    </div>
                    <div id="nav">                    
                        <ul>
                            <li><a href="http://blogs.microsoft.co.il/blogs/tamir/">Home</a></li>
                            <li><a href="http://blogs.microsoft.co.il/blogs/tamir/contact.aspx">Contact</a></li>
                            
                            
                        </ul>
                    </div>
                </div>
                
                    <div id="contentwrapper">
		                <div id="sidebar-a">              
                            <div id="TasksSideBar">                                
                                
                                
                            </div>
                            
                            <div id="SearchSideBar">    
                                <div id="Search">
	                                        <h3>Search</h3>
                                            <ul>
                                                <li>
                                                    <input name="ctl00$SideBar$ctl01$ctl00$SearchBox" id="ctl00_SideBar_ctl01_ctl00_SearchBox" class="searchBox" button="SearchButton" onclick="if(this.defaultValue==this.value) this.value='';" onblur="if(this.value=='') this.value=this.defaultValue;" type="text">
                                                    <a id="ctl00_SideBar_ctl01_ctl00_SearchButton" class="SearchButton" href="javascript:__doPostBack('ctl00$SideBar$ctl01$ctl00$SearchButton','')">Go</a>
                                                </li>
                                            </ul>
                                    </div>
                            </div>  
                                
                                <div id="TagSideBar">
                                        <h3>Tags</h3>
                                    <ul class="SidebarTagCloud">
<li class="Tag6"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/Accessibility/default.aspx" rel="tag">Accessibility</a></li>
<li class="Tag6"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/blogging+general/default.aspx" rel="tag">blogging general</a></li>
<li class="Tag6"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/Blogging+rules/default.aspx" rel="tag">Blogging rules</a></li>
<li class="Tag3"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/blogging+tools/default.aspx" rel="tag">blogging tools</a></li>
<li class="Tag2"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/C_2300_/default.aspx" rel="tag">C#</a></li>
<li class="Tag5"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/demos/default.aspx" rel="tag">demos</a></li>
<li class="Tag2"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/download/default.aspx" rel="tag">download</a></li>
<li class="Tag5"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/events/default.aspx" rel="tag">events</a></li>
<li class="Tag4"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/fun/default.aspx" rel="tag">fun</a></li>
<li class="Tag4"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/help/default.aspx" rel="tag">help</a></li>
<li class="Tag6"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/jobs/default.aspx" rel="tag">jobs</a></li>
<li class="Tag4"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/Mobile/default.aspx" rel="tag">Mobile</a></li>
<li class="Tag6"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/Performance/default.aspx" rel="tag">Performance</a></li>
<li class="Tag1"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/promo/default.aspx" rel="tag">promo</a></li>
<li class="Tag3"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/Silverlight/default.aspx" rel="tag">Silverlight</a></li>
<li class="Tag6"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/SkyDrive/default.aspx" rel="tag">SkyDrive</a></li>
<li class="Tag1"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/soft/default.aspx" rel="tag">soft</a></li>
<li class="Tag1"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/source/default.aspx" rel="tag">source</a></li>
<li class="Tag2"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/thoughts/default.aspx" rel="tag">thoughts</a></li>
<li class="Tag1"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/Tips+and+Tricks/default.aspx" rel="tag">Tips and Tricks</a></li>
<li class="Tag2"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/tools/default.aspx" rel="tag">tools</a></li>
<li class="Tag1"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/tutorial/default.aspx" rel="tag">tutorial</a></li>
<li class="Tag2"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/Vista/default.aspx" rel="tag">Vista</a></li>
<li class="Tag3"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/Vista+Battery+Saver/default.aspx" rel="tag">Vista Battery Saver</a></li>
<li class="Tag3"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/Visual+Studio/default.aspx" rel="tag">Visual Studio</a></li>
<li class="Tag5"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/VSTS/default.aspx" rel="tag">VSTS</a></li>
<li class="Tag6"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/WCF/default.aspx" rel="tag">WCF</a></li>
<li class="Tag6"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/Web/default.aspx" rel="tag">Web</a></li>
<li class="Tag5"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/Windows+Gadgets/default.aspx" rel="tag">Windows Gadgets</a></li>
<li class="Tag6"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/Windows+Live/default.aspx" rel="tag">Windows Live</a></li>
<li class="Tag6"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/Windows+Live+Writer/default.aspx" rel="tag">Windows Live Writer</a></li>
<li class="Tag1"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/WPF/default.aspx" rel="tag">WPF</a></li>
<li class="Tag5"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/WPF+crossbow/default.aspx" rel="tag">WPF crossbow</a></li>
<li class="Tag5"><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/WPF_2F00_E/default.aspx" rel="tag">WPF/E</a></li>
</ul>
</div>
                              
                                
                                <div id="NewsSidebar">
                                        <h3>News</h3>
                                        <ul>
                                    <a href="http://www.linkedin.com/in/tamirk"><img src="Custom-dependency-property-creation.aspx_files/btn_profile_bluetxt_80x15.gif" alt="View Tamir Khason's profile on LinkedIn" border="0" height="15" width="80"></a>


                                        </ul>
                                    </div>                
                                                
                                
                                <div id="NavSideBar"><h3>Navigation</h3>
<ul>
<li><a href="http://blogs.microsoft.co.il/">Home</a></li><li><a href="http://blogs.microsoft.co.il/blogs/">Blogs</a></li><li><a href="http://blogs.microsoft.co.il/blogs/MainFeed.aspx">RSS</a></li>
</ul></div>
                                
                                
                                
                                
                                <div id="ArchiveSideBar"><h3>Archives</h3>
<ul>
<li><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2007/10.aspx">October 2007 (15)</a></li><li><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2007/09.aspx">September 2007 (14)</a></li><li><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2007/08.aspx">August 2007 (21)</a></li><li><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2007/07.aspx">July 2007 (32)</a></li><li><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2007/06.aspx">June 2007 (10)</a></li><li><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2007/05.aspx">May 2007 (22)</a></li><li><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2007/04.aspx">April 2007 (21)</a></li><li><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2007/03.aspx">March 2007 (20)</a></li><li><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2007/02.aspx">February 2007 (9)</a></li><li><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2007/01.aspx">January 2007 (10)</a></li><li><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2006/12.aspx">December 2006 (11)</a></li><li><a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2006/11.aspx">November 2006 (4)</a></li>
</ul></div> 
                                
                                
                                
	                    
                    </div>
                    <div id="content"><div id="content2">
	                    
    <div class="post">
        <div class="posthead">
            Friday, February 02, 2007 10:05 AM
            <a href="http://blogs.microsoft.co.il/members/tamir.aspx">Tamir Khason</a>
            
            <h2>
                Custom dependency property creation
                
            </h2>
        </div>        
            <p>Recently
one of my clients called me and asked the rhetoric question: "I'm
already two days in word, but still cannot create dependency property
for custom control". "What the problem?" – I asked him, - "Give me a
couple of minutes and I'll help you. </p>
<p>So, DP is still the problem. It's really hard to change your mind
and understand how to put things in Property system and catch the main
idea of what to put there. So let's build custom control, which has DP
with complicated value, e.g. Latitude/Longitude Box. </p>
<p>First of all we'll need to create custom control. This is the easy
part. Grid, two Text Boxes, two Text Blocks and we have it. The only
thing I'll add here is dynamic sizing of textblocks in order to give
textboxes more space </p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">UserControl</span><span style="color: blue;"> </span><span style="color: red;">x:Class</span><span style="color: blue;">=</span>"<span style="color: blue;">LatBox.CoordinateBox</span>" </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;"></span><span style="color: red;">xmlns</span><span style="color: blue;">=</span>"<span style="color: blue;">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span>" </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;"></span><span style="color: red;">xmlns:x</span><span style="color: blue;">=</span>"<span style="color: blue;">http://schemas.microsoft.com/winfx/2006/xaml</span>" </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;"></span><span style="color: red;">xmlns:local</span><span style="color: blue;">=</span>"<span style="color: blue;">clr-namespace:LatBox</span>"<span style="color: blue;">&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">Grid</span><span style="color: blue;">&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">Grid.RowDefinitions</span><span style="color: blue;">&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">RowDefinition</span><span style="color: blue;"> </span><span style="color: red;">Height</span><span style="color: blue;">=</span>"<span style="color: blue;">{Binding ElementName=Lat, Path=Height}</span>"<span style="color: blue;">/&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">RowDefinition</span><span style="color: blue;"> </span><span style="color: red;">Height</span><span style="color: blue;">=</span>"<span style="color: blue;">{Binding ElementName=Lon, Path=Height}</span>"<span style="color: blue;">/&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">Grid.RowDefinitions</span><span style="color: blue;">&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">Grid.ColumnDefinitions</span><span style="color: blue;">&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">ColumnDefinition</span><span style="color: blue;"> </span><span style="color: red;">Width</span><span style="color: blue;">=</span>"<span style="color: blue;">{Binding ElementName=tbLon, Path=Width}</span>"<span style="color: blue;">/&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">ColumnDefinition</span><span style="color: blue;"> </span><span style="color: red;">Width</span><span style="color: blue;">=</span>"<span style="color: blue;">*</span>"<span style="color: blue;">/&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">Grid.ColumnDefinitions</span><span style="color: blue;">&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">TextBlock</span><span style="color: blue;">&gt;</span>Latitude: <span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">TextBlock</span><span style="color: blue;">&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">TextBox</span><span style="color: blue;"> </span><span style="color: red;">Name</span><span style="color: blue;">=</span>"<span style="color: blue;">Lat</span>"<span style="color: blue;"> </span><span style="color: red;">Grid.Column</span><span style="color: blue;">=</span>"<span style="color: blue;">1</span>"<span style="color: blue;"> </span><span style="color: red;">TextChanged</span><span style="color: blue;">=</span>"<span style="color: blue;">onTextChanged</span>"<span style="color: blue;">/&gt; </span></span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">TextBlock</span><span style="color: blue;"> </span><span style="color: red;">Grid.Row</span><span style="color: blue;">=</span>"<span style="color: blue;">1</span>"<span style="color: blue;"> </span><span style="color: red;">Name</span><span style="color: blue;">=</span>"<span style="color: blue;">tbLon</span>"<span style="color: blue;">&gt;</span>Longitude: <span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">TextBlock</span><span style="color: blue;">&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">TextBox</span><span style="color: blue;"> </span><span style="color: red;">Name</span><span style="color: blue;">=</span>"<span style="color: blue;">Lon</span>"<span style="color: blue;"> </span><span style="color: red;">Grid.Column</span><span style="color: blue;">=</span>"<span style="color: blue;">1</span>"<span style="color: blue;"> </span><span style="color: red;">Grid.Row</span><span style="color: blue;">=</span>"<span style="color: blue;">1</span>"<span style="color: blue;"> </span><span style="color: red;">TextChanged</span><span style="color: blue;">=</span>"<span style="color: blue;">onTextChanged</span>"<span style="color: blue;"> /&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">Grid</span><span style="color: blue;">&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">UserControl</span><span style="color: blue;">&gt; </span></span></p>
<p>It's easy, right? Two rows with height, binded to the height of the
text in textboxes, two columns, where the first is binded to the width
of text in textblock. One event for each textbox (we should know when
it's going to change, yeah?) </p>
<p>Going to code-behind. First of all we have to create dependency
property ValueProperty and register Value property with Property system
of WPF. This one will be Coordinate type and related to my User
Control, named CoordinateBox. The default value of the property is null
and I want it to be binded two way by default. When the property
changed I'll call OnValueChanged method and before update I'll coerce
the value with CoerceValue method. Why I need coercion? Simple,
Latitude cannot be less then 0 and more then 90 degrees and longitude
should be between -180 and 180, so instead of Error Providers, I'll
just will not allow user to enter something that has wrong value (e.g.
text or wrong double) </p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">public</span> <span style="color: blue;">static</span> <span style="color: rgb(43, 145, 175);">DependencyProperty</span> ValueProperty = <span style="color: rgb(43, 145, 175);">DependencyProperty</span>.Register(<span style="color: rgb(163, 21, 21);">"Value"</span>, </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">typeof</span>(<span style="color: rgb(43, 145, 175);">Coordinate</span>), <span style="color: blue;">typeof</span>(<span style="color: rgb(43, 145, 175);">CoordinateBox</span>), </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">FrameworkPropertyMetadata</span>(<span style="color: blue;">null</span>, </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: rgb(43, 145, 175);">FrameworkPropertyMetadataOptions</span>.AffectsMeasure | </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: rgb(43, 145, 175);">FrameworkPropertyMetadataOptions</span>.AffectsRender | </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: rgb(43, 145, 175);">FrameworkPropertyMetadataOptions</span>.BindsTwoWayByDefault | </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: rgb(43, 145, 175);">FrameworkPropertyMetadataOptions</span>.Inherits, </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">PropertyChangedCallback</span>(OnValueChanged), </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">CoerceValueCallback</span>(CoerceValue))); </span></p>
<p>&nbsp;</p>
<p>Nice. Now I have to build the property itself </p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">public</span> <span style="color: rgb(43, 145, 175);">Coordinate</span> Value </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">get</span> { <span style="color: blue;">return</span> (<span style="color: rgb(43, 145, 175);">Coordinate</span>)GetValue(ValueProperty); } </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">set</span> { SetValue(ValueProperty, <span style="color: blue;">value</span>); } </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">}</span> </p>
<p>That's pretty clear, right? Next step the callback. I want my
control to bubble up value change event in order to be able to use it
within external window (if needed). You are not really have to do it,
if no one will listen to that event. So, when the value will change
I'll call OnValueChanged event and update both TextBoxes with new value
from Value property, Then I'll fire my Routed Event for value changing
(RaiseEvent method is rules!) <span style="font-family: Wingdings;">J</span> </p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">static</span> <span style="color: blue;">void</span> OnValueChanged(<span style="color: rgb(43, 145, 175);">DependencyObject</span> sender, <span style="color: rgb(43, 145, 175);">DependencyPropertyChangedEventArgs</span> args) </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: rgb(43, 145, 175);">CoordinateBox</span> box = sender <span style="color: blue;">as</span> <span style="color: rgb(43, 145, 175);">CoordinateBox</span>; </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;">box.UpdateValue(); </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: rgb(43, 145, 175);">RoutedPropertyChangedEventArgs</span>&lt;<span style="color: rgb(43, 145, 175);">Coordinate</span>&gt; e = <span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">RoutedPropertyChangedEventArgs</span>&lt;<span style="color: rgb(43, 145, 175);">Coordinate</span>&gt;( </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">(<span style="color: rgb(43, 145, 175);">Coordinate</span>)args.OldValue, (<span style="color: rgb(43, 145, 175);">Coordinate</span>)args.NewValue, ValueChangedEvent); </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;">box.OnValueChanged(e); </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">private</span> <span style="color: blue;">void</span> UpdateValue() </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">this</span>.Lat.Text = Value.Latitude.ToString(); </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">this</span>.Lon.Text = Value.Longitude.ToString(); </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">private</span> <span style="color: blue;">void</span> OnValueChanged(<span style="color: rgb(43, 145, 175);">RoutedPropertyChangedEventArgs</span>&lt;<span style="color: rgb(43, 145, 175);">Coordinate</span>&gt; e) </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">RaiseEvent(e); </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">}</span> </p>
<p>Now I have to provide getter and setter for the event and build the event itself. Piece of cake, trust me <span style="font-family: Wingdings;">J</span>.
This one will be RoutedEvent and we'll register it within Event Manager
of WPF exactly as we do it with DependencyProperty and Property Manager
</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">public</span> <span style="color: blue;">static</span> <span style="color: blue;">readonly</span> <span style="color: rgb(43, 145, 175);">RoutedEvent</span> ValueChangedEvent = <span style="color: rgb(43, 145, 175);">EventManager</span>.RegisterRoutedEvent( </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: rgb(163, 21, 21);">"ValueChanged"</span>, <span style="color: rgb(43, 145, 175);">RoutingStrategy</span>.Bubble, </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">typeof</span>(<span style="color: rgb(43, 145, 175);">RoutedPropertyChangedEventHandler</span>&lt;<span style="color: rgb(43, 145, 175);">Coordinate</span>&gt;), <span style="color: blue;">typeof</span>(<span style="color: rgb(43, 145, 175);">CoordinateBox</span>)); </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">public</span> <span style="color: blue;">event</span> <span style="color: rgb(43, 145, 175);">RoutedPropertyChangedEventHandler</span>&lt;<span style="color: rgb(43, 145, 175);">Coordinate</span>&gt; ValueChanged </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">add</span> { AddHandler(ValueChangedEvent, <span style="color: blue;">value</span>); } </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">remove</span> { RemoveHandler(ValueChangedEvent, <span style="color: blue;">value</span>); } </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p>&nbsp;</p>
<p>Now, we'll handle OnTextChange event fired by TextBox to update our value </p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">void</span> onTextChanged(<span style="color: blue;">object</span> sender, <span style="color: rgb(43, 145, 175);">TextChangedEventArgs</span> e) </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">double</span> lat = 0; </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">double</span> lon = 0; </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">if</span> (<span style="color: blue;">double</span>.TryParse(Lat.Text == <span style="color: rgb(43, 145, 175);">String</span>.Empty ? <span style="color: rgb(163, 21, 21);">"0"</span> : Lat.Text, <span style="color: blue;">out</span> lat) &amp; </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">double</span>.TryParse(Lon.Text == <span style="color: rgb(43, 145, 175);">String</span>.Empty ? <span style="color: rgb(163, 21, 21);">"0"</span> : Lon.Text, <span style="color: blue;">out</span> lon)) </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">Value = <span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">Coordinate</span>(lat, lon); </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">else </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">UpdateValue(); </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">}</span> </p>
<p>And build the method for coercing values </p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">static</span> <span style="color: blue;">object</span> CoerceValue(<span style="color: rgb(43, 145, 175);">DependencyObject</span> sender, <span style="color: blue;">object</span> value) </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: rgb(43, 145, 175);">Coordinate</span> val = value <span style="color: blue;">as</span> <span style="color: rgb(43, 145, 175);">Coordinate</span>; </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">if</span> (val != <span style="color: blue;">null</span>) </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">if</span> (val.Latitude &lt; 0) </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">val.Latitude = 0; </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">else</span> <span style="color: blue;">if</span> (val.Latitude &gt; 90) </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">val.Latitude = 90; </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">if</span> (val.Longitude &lt; -180) </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">val.Longitude = -180; </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">else</span> <span style="color: blue;">if</span> (val.Longitude &gt; 180) </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">val.Longitude = 180; </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">return</span> val; </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p>&nbsp;</p>
<p>Now we'll get all we need, but only if both of Coordinate class
members will be updated. I want to fire update event only if one of
them will be changed so in the class of Coordinate we'll add the
ability to notify about values changed </p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">public</span> <span style="color: blue;">class</span> <span style="color: rgb(43, 145, 175);">Coordinate</span> : <span style="color: rgb(43, 145, 175);">INotifyPropertyChanged </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">public</span> Coordinate(<span style="color: blue;">double</span> lat, <span style="color: blue;">double</span> lon) </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">this</span>.Latitude = lat; </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">this</span>.Longitude = lon; </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">private</span> <span style="color: blue;">double</span> m_lat; </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">public</span> <span style="color: blue;">double</span> Latitude </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">get</span> { <span style="color: blue;">return</span> m_lat; } </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">set</span> { </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">m_lat = <span style="color: blue;">value</span>; </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">FirePropertyChanged(<span style="color: rgb(163, 21, 21);">"Latitude"</span>); </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">private</span> <span style="color: blue;">double</span> m_long; </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">public</span> <span style="color: blue;">double</span> Longitude </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">get</span> { <span style="color: blue;">return</span> m_long; } </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">set</span> { </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">m_long = <span style="color: blue;">value</span>; </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">FirePropertyChanged(<span style="color: rgb(163, 21, 21);">"Longitude"</span>); </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">#region</span> INotifyPropertyChanged Members </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">internal</span> <span style="color: blue;">void</span> FirePropertyChanged(<span style="color: blue;">string</span> propertyName) </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">if</span> (PropertyChanged != <span style="color: blue;">null</span>) </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">{ </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">PropertyChanged(<span style="color: blue;">this</span>, <span style="color: blue;">new</span> <span style="color: rgb(43, 145, 175);">PropertyChangedEventArgs</span>(propertyName)); </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">} </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">public</span> <span style="color: blue;">event</span> <span style="color: rgb(43, 145, 175);">PropertyChangedEventHandler</span> PropertyChanged; </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; color: blue; font-family: Consolas;">#endregion </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;">}</span> </p>
<p>Put everything together in form and let's get rocks. </p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">Window</span><span style="color: blue;"> </span><span style="color: red;">x:Class</span><span style="color: blue;">=</span>"<span style="color: blue;">LatBox.Window1</span>" </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;"></span><span style="color: red;">xmlns</span><span style="color: blue;">=</span>"<span style="color: blue;">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span>" </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;"></span><span style="color: red;">xmlns:x</span><span style="color: blue;">=</span>"<span style="color: blue;">http://schemas.microsoft.com/winfx/2006/xaml</span>" </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;"></span><span style="color: red;">xmlns:local</span><span style="color: blue;">=</span>"<span style="color: blue;">clr-namespace:LatBox</span>"<span style="color: blue;"> </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;"></span><span style="color: red;">Title</span><span style="color: blue;">=</span>"<span style="color: blue;">LatBox</span>"<span style="color: blue;"> </span><span style="color: red;">Height</span><span style="color: blue;">=</span>"<span style="color: blue;">300</span>"<span style="color: blue;"> </span><span style="color: red;">Width</span><span style="color: blue;">=</span>"<span style="color: blue;">300</span>" </span></p>
<p><span style="font-size: 12pt; color: blue; font-family: Consolas;">&gt; </span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">StackPanel</span><span style="color: blue;">&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">local:CoordinateBox</span><span style="color: blue;"> </span><span style="color: red;">x:Name</span><span style="color: blue;">=</span>"<span style="color: blue;">cb1</span>"<span style="color: blue;">/&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">local:CoordinateBox</span><span style="color: blue;"> </span><span style="color: red;">x:Name</span><span style="color: blue;">=</span>"<span style="color: blue;">cb2</span>"<span style="color: blue;"> </span><span style="color: red;">Value</span><span style="color: blue;">=</span>"<span style="color: blue;">{Binding ElementName=cb1, Path=Value}</span>"<span style="color: blue;">/&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">StackPanel</span><span style="color: blue;">&gt; </span></span></p>
<p><span style="font-size: 12pt; font-family: Consolas;"><span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">Window</span><span style="color: blue;">&gt; </span></span></p>
<p>&nbsp;</p>
<p>WPF is rules, isn't it? Don't you pray that all properties in all controls will be Dependency Properties? </p>
<p><a href="http://blogs.microsoft.co.il/files/folders/tamir/entry7529.aspx">Source Code for this article</a> </p>  
                  
            <span id="ctl00_Main_ctl07_ctl01">Filed under: <a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/WPF/default.aspx" rel="tag">WPF</a>, <a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/source/default.aspx" rel="tag">source</a>, <a href="http://blogs.microsoft.co.il/blogs/tamir/archive/tags/download/default.aspx" rel="tag">download</a></span><input name="ctl00$Main$ctl07$ctl01" id="ctl00_Main_ctl07_ctl01_State" value="value:Filed%20under%3A%20%3Ca%20href%3D%22%2Fblogs%2Ftamir%2Farchive%2Ftags%2FWPF%2Fdefault.aspx%22%20rel%3D%22tag%22%3EWPF%3C%2Fa%3E%2C%20%3Ca%20href%3D%22%2Fblogs%2Ftamir%2Farchive%2Ftags%2Fsource%2Fdefault.aspx%22%20rel%3D%22tag%22%3Esource%3C%2Fa%3E%2C%20%3Ca%20href%3D%22%2Fblogs%2Ftamir%2Farchive%2Ftags%2Fdownload%2Fdefault.aspx%22%20rel%3D%22tag%22%3Edownload%3C%2Fa%3E" type="hidden">
    </div>
        <div class="postfoot">
            	
      </div>
    
            
                    <a name="Comments">
                    </a><h3><a name="Comments">Comments</a></h3>
<a name="Comments">                    </a><div id="comments">
<a name="Comments">                
                    </a><p><a name="Comments">No Comments</a></p>
<a name="Comments">                
                        </a></div>
<a name="Comments">                    </a></div>
<a name="Comments">                
            
            
            
            
                    </a><div id="commentform">
<a name="Comments">                    </a><h3><a name="Comments">Leave a Comment</a></h3>
<a name="Comments">	                    </a><dl>
<a name="Comments">                            <dt><label for="ctl00_Main_ctl08_ctl02_ctl02_ctl02_tbTitle">Title</label> <em>(required)</em><span id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl02" style="color: Red; visibility: hidden;">*</span></dt>
	                        <dd><input name="ctl00$Main$ctl08$ctl02$ctl02$ctl02$tbTitle" value="re: Custom dependency property creation" id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_tbTitle" class="smallbox" type="text"></dd>

                            <dt id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_NameTitle"><label for="ctl00_Main_ctl08_ctl02_ctl02_ctl02_tbName">Name</label> <em>(required)</em><span id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl10" style="color: Red; visibility: hidden;">*</span></dt>
                            <dd id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_NameDesc"><input name="ctl00$Main$ctl08$ctl02$ctl02$ctl02$tbName" id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_tbName" class="smallbox" type="text"></dd>

                            <dt><label for="ctl00_Main_ctl08_ctl02_ctl02_ctl02_tbUrl">Your URL</label> <em>(optional</em>)</dt>
                            <dd><input name="ctl00$Main$ctl08$ctl02$ctl02$ctl02$tbUrl" id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_tbUrl" class="smallbox" type="text"></dd>

                            <dt><label for="ctl00_Main_ctl08_ctl02_ctl02_ctl02_tbComment">Comments</label> <em>(required)</em><span id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl07" style="color: Red; visibility: hidden;">*</span></dt>
                            <dd><textarea name="ctl00$Main$ctl08$ctl02$ctl02$ctl02$tbComment" rows="5" cols="25" id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_tbComment"></textarea></dd>

                            <dt><input id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_chkRemember" name="ctl00$Main$ctl08$ctl02$ctl02$ctl02$chkRemember" type="checkbox"><label for="ctl00_Main_ctl08_ctl02_ctl02_ctl02_chkRemember">Remember Me?</label></dt>
               
                            <dt><div id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_CaptchaPanel" class="Captcha_Div">
	<img src="Custom-dependency-property-creation.aspx_files/captcha.jpg" style="border-width: 0px;"><br><span>Enter the numbers above: </span><input name="ctl00$Main$ctl08$ctl02$ctl02$ctl02$CaptchaTextBox" size="3" id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_CaptchaTextBox" type="text"><span id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl13" style="color: Red; display: none;">*</span>
</div><input name="ctl00$Main$ctl08$ctl02$ctl02$ctl02$btnSubmit" value="Submit" onclick='javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions("ctl00$Main$ctl08$ctl02$ctl02$ctl02$btnSubmit", "", true, "CreateCommentForm", "", false, false))' id="ctl00_Main_ctl08_ctl02_ctl02_ctl02_btnSubmit" type="submit"></dt>
	                    </a></dl>
<a name="Comments">                    </a></div>
<a name="Comments">                    
        
        
                    </a></div></div>
<a name="Comments">                    </a><div id="contentfooter"><a name="Comments">&nbsp;</a></div>
<a name="Comments">		        </a></div>
<a name="Comments">                </a><div id="footer">
<a name="Comments">                    
					    </a><div class="Copyright"><div align="center"><a name="Comments">‎©2006 Microsoft Corporation. All rights reserved.‎  <span></span></a><a href="http://www.microsoft.com/israel/info/cpyright.asp">תנאי שימוש</a> |<span><a href="http://www.microsoft.com/library/toolbar/3.0/trademarks/he-il.mspx">סימנים מסחריים</a> |</span><span><a href="http://www.microsoft.com/info/iw/privacy.mspx">הצהרת פרטיות</a></span></div></div>
					    
					    

                        
					            <a href="http://communityserver.org/r.ashx?j" target="_blank"><img id="ctl00_BodyFooterRegion_ctl02_ctl03_ctl00" src="Custom-dependency-property-creation.aspx_files/PoweredByCS_commercial.gif" alt="Powered by Community Server (Commercial Edition), by Telligent Systems " style="border-width: 0px;"></a>
    						
    					
					
                </div>
            </div>        
        
    
<script type="text/javascript">
<!--
var Page_Validators =  new Array(document.getElementById("ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl02"), document.getElementById("ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl10"), document.getElementById("ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl07"), document.getElementById("ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl13"));
// -->
</script>

<script type="text/javascript">
<!--
var ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl02 = document.all ? document.all["ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl02"] : document.getElementById("ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl02");
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl02.controltovalidate = "ctl00_Main_ctl08_ctl02_ctl02_ctl02_tbTitle";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl02.errormessage = "*";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl02.validationGroup = "CreateCommentForm";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl02.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl02.initialvalue = "";
var ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl10 = document.all ? document.all["ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl10"] : document.getElementById("ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl10");
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl10.controltovalidate = "ctl00_Main_ctl08_ctl02_ctl02_ctl02_tbName";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl10.errormessage = "*";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl10.validationGroup = "CreateCommentForm";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl10.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl10.initialvalue = "";
var ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl07 = document.all ? document.all["ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl07"] : document.getElementById("ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl07");
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl07.controltovalidate = "ctl00_Main_ctl08_ctl02_ctl02_ctl02_tbComment";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl07.errormessage = "*";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl07.validationGroup = "CreateCommentForm";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl07.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl07.initialvalue = "";
var ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl13 = document.all ? document.all["ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl13"] : document.getElementById("ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl13");
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl13.controltovalidate = "ctl00_Main_ctl08_ctl02_ctl02_ctl02_CaptchaTextBox";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl13.errormessage = "*";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl13.display = "Dynamic";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl13.validationGroup = "CreateCommentForm";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl13.evaluationfunction = "CustomValidatorEvaluateIsValid";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl13.clientvalidationfunction = "ValidateCaptcha";
ctl00_Main_ctl08_ctl02_ctl02_ctl02_ctl13.validateemptytext = "true";
// -->
</script>


<!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://blogs.microsoft.co.il/blogs/tamir/archive/2007/02/02/Custom-dependency-property-creation.aspx"
dc:identifier="http://blogs.microsoft.co.il/blogs/tamir/archive/2007/02/02/Custom-dependency-property-creation.aspx"
dc:title="Custom dependency property creation"
trackback:ping="http://blogs.microsoft.co.il/blogs/tamir/trackback.ashx?PostID=7530" />
</rdf:RDF>
-->
<script src="Custom-dependency-property-creation.aspx_files/microsft.js" type="text/javascript" charset="utf-8"></script><script type="text/javascript" charset="utf-8" src="Custom-dependency-property-creation.aspx_files/site-tracker.js"></script> <script type="text/javascript">
// <![CDATA[
Telligent_Modal.Configure('/utility/loading.htm',['Modal'],['ModalTitle'],['ModalClose'],['ModalContent'],['ModalFooter'],['ModalResize'],['ModalMask'],100);
// ]]>
</script><script type="text/javascript">
// <![CDATA[
window.ctl00_Main_ctl07_ctl01 = new Telligent_InlineEditorPanel('ctl00_Main_ctl07_ctl01','ctl00_Main_ctl07_ctl01','ctl00_Main_ctl07_ctl01_State','ctl00_Main_ctl07_ctl00',false,null,null,null);
// ]]>
</script>
<script type="text/javascript">
<!--
var Page_ValidationActive = false;
if (typeof(ValidatorOnLoad) == "function") {
    ValidatorOnLoad();
}

function ValidatorOnSubmit() {
    if (Page_ValidationActive) {
        return ValidatorCommonOnSubmit();
    }
    else {
        return true;
    }
}
// -->
</script>
        </form>
</body></html>
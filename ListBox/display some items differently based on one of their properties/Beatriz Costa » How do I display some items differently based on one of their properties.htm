<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Beatriz Costa » How do I display some items differently based on one of their properties?</title>



<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="generator" content="WordPress 2.2.2"><!-- leave this for stats --><!-- Editable Meta Tags --> 

<meta name="description" content="">
<meta name="keywords" content="">
<meta name="author" content="Sreejith - GFXedit.com">
<meta name="copyright" content="Your Name">
<meta name="generator" content="WordPress 2.2.2">
<meta name="robots" content="index,follow"><!-- Meta Tags End--><!-- Style Sheet -->



<style type="text/css" media="screen">
@import url( http://www.beacosta.com/blog/wp-content/themes/darkpad-10/style.css );
</style><!-- Style Sheet End --><!-- Includes -->



 <script type="text/javascript" src="Beatriz%20Costa%20%BB%20How%20do%20I%20display%20some%20items%20differently%20based%20on%20one%20of%20their%20properties_files/addEvent.htm"></script>
 <script type="text/javascript" src="Beatriz%20Costa%20%BB%20How%20do%20I%20display%20some%20items%20differently%20based%20on%20one%20of%20their%20properties_files/titles.htm"></script><!-- End Includes --><!-- Feed and Ping URLS-->



<link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://www.beacosta.com/blog/?feed=rss2">
<link rel="alternate" type="text/xml" title="RSS .92" href="http://www.beacosta.com/blog/?feed=rss">
<link rel="alternate" type="application/atom+xml" title="Atom 0.3" href="http://www.beacosta.com/blog/?feed=atom">
<link rel="pingback" href="http://www.beacosta.com/blog/xmlrpc.php"><!--?php wp_get_archives('type=monthly&format=link'); ?-->

	<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.beacosta.com/blog/xmlrpc.php?rsd">
<script language="javascript" type="text/javascript">
<!--
		function collapseThread( theId ) {
			var comment = document.getElementById(theId);
			if(!comment)
			{
				alert("ERROR:\nThe document structure is different\nfrom what Threaded Comments expects.\nYou are missing the element '"+theId+"'");
				return;
			}
			var theBody = findBody(comment);
			if(comment.className.indexOf("collapsed") > -1) {
				comment.className = comment.className.replace(" collapsed", "");;
			} else {
				comment.className += " collapsed";
			}
		}

		function expandThread( theId ) {
			var comment = document.getElementById(theId);
			if(!comment)
			{
				alert("ERROR:\nThe document structure is different\nfrom what Threaded Comments expects.\nYou are missing the element '"+theId+"'");
				return;
			}
			var theBody = findBody(comment);
			if(comment.className.indexOf("collapsed") > -1) {
				comment.className = comment.className.replace(" collapsed", "");;
			} 
		}
		
		function findBody(el)
		{
			var divs = el.getElementsByTagName("div");
			var ret;
			for(var i = 0; i < divs.length; ++i) {
				if(divs.item(i).className.indexOf("body") > -1)
					return divs.item(i);
			}
			return false;
		}
	
		function onAddComment() {
			//checkDocumentIntegrity();
			var el = document.getElementById("commentform");
			// Future release: Check if form is filled correctly and mark the form fields.
			el.submit();
		}
		
		function moveAddCommentBelow(theId, threadId, collapse)
		{
			expandThread( theId );
			var addComment = document.getElementById("addcomment");
			if(!addComment)
			{
			  	alert("ERROR:\nThreaded Comments can't find the 'addcomment' div.\nThis is probably because you have changed\nthe comments.php file.\nMake sure there is a tag around the form\nthat has the id 'addcomment'"); 
				return
			}
			var comment = document.getElementById(theId);
			if(collapse)
			{
				for(var i = 0; i < comment.childNodes.length; ++i) {
					var c = comment.childNodes.item(i);
					if(typeof(c.className) == "string" && c.className.indexOf("collapsed")<0) {
						c.className += " collapsed";
					}
				}
			}
			addComment.parentNode.removeChild(addComment);

			comment.appendChild(addComment);
			if(comment.className.indexOf("alt")>-1) {
				addComment.className = addComment.className.replace(" alt", "");					
			} else {
				addComment.className += " alt";
			}
		        var replyId = document.getElementById("comment_reply_ID");
			if(replyId == null)
			{
				alert("Brians Threaded Comments Error:\nThere is no hidden form field called\n'comment_reply_ID'. This is probably because you\nchanged the comments.php file and forgot\nto include the field. Please take a look\nat the original comments.php and copy the\nform field over.");
			}
			replyId.value = threadId;
			var reRootElement = document.getElementById("reroot");
			if(reRootElement == null)
			{
				alert("Brians Threaded Comments Error:\nThere is no anchor tag called 'reroot' where\nthe comment form starts.\nPlease compare your comments.php to the original\ncomments.php and copy the reroot anchor tag over.");
			}
			reRootElement.style.display = "block";
			var aTags = comment.getElementsByTagName("A");
			var anc = aTags.item(0).id;
			//document.location.href = "#"+anc;
			document.getElementById("comment").focus();
		}

		function checkDocumentIntegrity()
		{
			str = "";
			
			str += checkElement("reroot","div tag");
			str += checkElement("addcomment", "div tag");
			str += checkElement("comment_reply_ID", "hidden form field");
			str += checkElement("content", "div tag");
			str += checkElement("comment", "textfield");
			str += checkElement("addcommentanchor", "anchor tag");
			
			if(str != "")
			{
				str = "Brian's Threaded Comments are missing some of the elements that are required for it to function correctly.\nThis is probably the because you have changed the original comments.php that was included with the plugin.\n\nThese are the errors:\n" + str;
				str += "\nYou should compare your comments.php with the original comments.php and make sure the required elements have not been removed.";

				alert(str);
			}
		}
               
		function checkElement(theId, elDesc)
		{
			var el = document.getElementById(theId);
			if(!el)
			{
				if(elDesc == null)
					elDesc = "element";
				return "- The "+elDesc+" with the ID '" +theId + "' is missing\n"; 
			}
			else 
				return "";
		}
		
		function reRoot()
		{
			var addComment = document.getElementById("addcomment");			
			var reRootElement = document.getElementById("reroot");
			reRootElement.style.display = "none";
			var content = document.getElementById("content");
			addComment.parentNode.removeChild(addComment);
			content.appendChild(addComment);
			addComment.className = addComment.className.replace(" alt", "");
			document.location.href = "#addcommentanchor";
			document.getElementById("comment").focus();				
			document.getElementById("comment_reply_ID").value = "0";
		}			
		
		function changeCommentSize(d)
		{
			var el = document.getElementById("comment");
			var height = parseInt(el.style.height);
			if(!height && el.offsetHeight)
				height = el.offsetHeight;
			height += d;
			if(height < 20) 
				height = 20;
			el.style.height = height+"px";
		}		
-->
</script>
<style type="text/css">
.comment 
{
	position: 				relative;
	margin:					3px;
	margin-top:				6px;
/*	border: 				1px solid #666; */
	padding:				4px 4px 4px 8px;
	background-color:		#fff;
}

.odd
{
	background-color: #f8f8f8;
}

.comment div {
	position: 				relative;
}

.comment .comment img
{
	margin: 				0px;
}

.comment .collapseicon 
{
	width: 					13px;
	height: 				13px;
	overflow:				hidden;
	background-image: 		url(http://www.beacosta.com/blog/wp-content/plugins/briansthreadedcomments.php?image=subthread-open.png);
}

.collapsed .collapseicon 
{
	background-image: 		url(http://www.beacosta.com/blog/wp-content/plugins/briansthreadedcomments.php?image=subthread.png);
}


.comment .reply {
	text-align: 			right;
	font-size: 				80%;
	padding: 				0px 6px 6px 0px;
}

.comment
{
	border: 	1px solid #ddd;
	margin-top: 			10px;
}

input#subscribe
{
	width: auto;
}

.comment .body .content
{
	padding:				0px 3px 0px 3px;
	width: 					100%;	
	overflow: 				auto; 
}

.comment .title abbr
{
	border: none;
}

.collapsed .body, .collapsed .comment
{
	display:				none;
}
/*
#addcomment small, #addcomment div
{
	padding:				3px;
}
*/
#commentform textarea {
	width: 97%;
}
</style><!-- End Feed and Ping URLS--></head><body>
	<div id="container">
		<div id="banner">
			<h1><a accesskey="1" href="http://www.beacosta.com/blog" title="Beatriz Costa">Beatriz Costa</a></h1>
			<h2 title="WPF Data Binding">WPF Data Binding</h2>
		</div>
		
		<div id="center">
			<div class="content">
								<div class="post">
					<div class="date">June 27, 2006</div>
					<h2 id="post-29"><a id="postTitle" href="http://www.beacosta.com/blog/?p=29" rel="bookmark" title="How do I display some items differently based on one of their properties?">How do I display some items differently based on one of their properties?</a></h2>
					<p><span id="text">I
had a blast at TechEd. It was great to connect with our customers face
to face, hear what everyone had to say about Avalon, and bring the
praise and feedback to the team. I am very proud of the technology we
are building and I get really thrilled when I hear success stories from
our customers. </span></p>
<p><span id="text">Our PMs are all amazing speakers and their talks were very well received by the audience. <a href="http://blogs.msdn.com/okoboji/">Kevin</a>
in particular did a great job at explaining the ins and outs of data
binding, with a little humor between the lines (soooo like Kevin…). I
was really pleased to see the audience clapping after he showed off
certain features, such as binding to sub-properties and indexers.</span></p>
<p><span id="text">The sample for this post displays a few pictures
from TechEd with the help of the master-detail data binding feature,
which I already talked about in a <a href="http://www.beacosta.com/2005/11/master-detail-scenario.html">previous post</a>.
I will explain in this post how you can use a DataTrigger to change the
way data items are displayed based on their properties. In particular,
I am going to display a special visual tag with Kevin’s name for all
pictures of him, as you can see in the screenshot at the end of this
post. </span></p>
<p><span id="text">My first step was to tag all the pictures I wanted
to display. In order to do this, I right clicked on each of them, went
to Properties - Summary and filled out the Title and Keywords fields. I
added different keywords to the pictures, but the one I care about for
this sample is “Kevin”, which I added to all pictures of Kevin. </span></p>
<p><span id="text">Since I added all the information to the picture’s metadata, my data source is really simple:</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;public class TechEdPictures : ObservableCollection&lt;Uri&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public TechEdPictures()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.Add(new
Uri(@”Pictures\TechEd 004.jpg”, UriKind.Relative));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.Add(new
Uri(@”Pictures\TechEd 022.jpg”, UriKind.Relative));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(…)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>
<p><span id="text">I’m not going to explain master-detail again, but
here is the markup I used to get the ContentControl’s Content to change
when the ListBox’s selection (and current item) changes:</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;&lt;StackPanel Orientation=”Horizontal” DataContext=”{StaticResource source}”&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ListBox
ItemsSource=”{Binding}” ItemTemplate=”{StaticResource picSmall}”
Height=”400″ IsSynchronizedWithCurrentItem=”True” /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ContentControl
Content=”{Binding Path=/}” ContentTemplate=”{StaticResource
picBig}”/&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/StackPanel&gt;</span></p>
<p><span id="text">The template for the small images in the ListBox is also pretty simple:</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;&lt;DataTemplate x:Key=”picSmall”&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Image Source=”{Binding}” Width=”100″ Margin=”2″/&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/DataTemplate&gt;</span></p>
<p><span id="text">Next I want to display Kevin’s name everytime I bind
to an image that contains “Kevin” in the keywords. I started by
creating a TextBlock with the text “Kevin”, added a white background
with an opacity, rotated it and aligned it to the right of the image.
Notice that both elements are inside a Grid. Because I didn’t specify a
row and column for the Image and the TextBlock, they will by default
appear in the first row and column, and overlap.</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;&lt;DataTemplate x:Key=”picBig”&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;StackPanel Margin=”10, 0, 0, 0″ Width=”300″ &gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Grid&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Image
Source=”{Binding}” x:Name=”img”/&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;TextBlock
Background=”White” Opacity=”0.7″ Text=”** Kevin **” Margin=”5″
FontWeight=”Bold” FontSize=”30″ TextAlignment=”Center”
HorizontalAlignment=”Right” Visibility=”Hidden” x:Name=”tb”&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;TextBlock.LayoutTransform&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;RotateTransform
Angle=”90″ /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/TextBlock.LayoutTransform&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/TextBlock&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Grid&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;TextBlock
Text=”{Binding ElementName=img, Path=Source.Metadata.Title}”
TextWrapping=”Wrap” Margin=”10″ Height=”100″/&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/StackPanel&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(…)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/DataTemplate&gt;</span></p>
<p><span id="text">And now comes the interesting part. Notice that I
set the Visibility of the TextBlock to Hidden. I need some logic that
will set it to Visible when the image contains “Kevin” in the keywords
- some sort of trigger. Avalon contains three types of triggers:</span></p>
<p><span id="text">- EventTriggers - Used to control animations when a certain event occurs.<br>
- Triggers - Used to set properties when a property of a UI element has a certain value.<br>
- DataTriggers - Used to set properties when the result of a binding has a particular value.</span></p>
<p><span id="text">In this case, we want to trigger based on the
Metadata of the Image’s Source, which can be easily expressed with an
ElementName binding, so we should use a DataTrigger.</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;&lt;DataTemplate x:Key=”picBig”&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;StackPanel Margin=”10, 0, 0, 0″ Width=”300″ &gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(…)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/StackPanel&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;DataTemplate.Triggers&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;DataTrigger
Binding=”{Binding ElementName=img, Path=Source.Metadata.Keywords,
Converter={StaticResource isInKeywords}, ConverterParameter=Kevin}”
Value=”True”&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Setter
Property=”Visibility” Value=”Visible” TargetName=”tb” /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/DataTrigger&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/DataTemplate.Triggers&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/DataTemplate&gt;</span></p>
<p><span id="text">Keep in mind that Metadata.Keywords returns a
ReadOnlyCollection&lt;string&gt; and the keyword could be in any
position in the collection. This makes things a little more
complicated, because DataTriggers can only trigger when the result of
the binding is exactly equal to the value you specify. The trick to
make DataTriggers support any logic you want is to add a Converter
containing that logic. In this case, my Converter returns True if the
string “Kevin” is part of the metadata keywords, and False otherwise.
When the result of this conversion equals the trigger’s Value (True),
the trigger will set the Visibility property of the TextBlock - which
has the name “tb” - to Visible.</span></p>
<p><span id="text">I did not want to hardcode the string “Kevin” in the
Converter though; I wanted it to be generic enough to handle any
string. I accomplished this by setting the ConverterParameter property
in the binding to “Kevin”, as you can see in the markup above.</span></p>
<p><span id="text">Here is the code for the Converter:</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;public class IsInKeywords : IValueConverter<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public object
Convert(object value, Type targetType, object parameter, CultureInfo
culture)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadOnlyCollection&lt;string&gt;
keywords = value as ReadOnlyCollection&lt;string&gt;;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return keywords.Contains(parameter.ToString());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(…)<br>
&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>
<p><span id="text">Customers frequently ask, “How can I trigger when
the Binding and Value are *not* equal?” Or, in case the binding is an
integer, “How can I trigger when the result of the binding is bigger
than 10?” The trick I show here with the Converter can be used for any
of these scenarios.</span></p>
<p><span id="text">Here is a screenshot of the complete application.
And if you don’t care about the technology, you should still download
it to look at the pictures. <img src="Beatriz%20Costa%20%BB%20How%20do%20I%20display%20some%20items%20differently%20based%20on%20one%20of%20their%20properties_files/icon_smile.gif" alt=":)" class="wp-smiley"> </span></p>
<p><img src="Beatriz%20Costa%20%BB%20How%20do%20I%20display%20some%20items%20differently%20based%20on%20one%20of%20their%20properties_files/26DataTriggerSample.png" style="margin: 0px auto 10px; display: block; text-align: center;" border="0"></p>
<p><span id="text"><a href="http://www.beacosta.com/Zips/26DataTriggerSample.zip">Here</a> you can find the VS project with this sample code. This works with Beta2 WPF bits. </span></p>
										<p class="posted">Posted by <a href="http://www.beacosta.com/blog/?author=1" title="Posts by Bea">Bea</a> under <a href="http://www.beacosta.com/blog/?cat=14" title="View all posts in ListBox" rel="category">ListBox</a>, <a href="http://www.beacosta.com/blog/?cat=11" title="View all posts in Styles and Templates" rel="category">Styles and Templates</a>, <a href="http://www.beacosta.com/blog/?cat=10" title="View all posts in Master-detail" rel="category">Master-detail</a>, <a href="http://www.beacosta.com/blog/?cat=2" title="View all posts in WPF Data Binding" rel="category">WPF Data Binding</a> |   </p>
				</div>				
				<!-- <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
				xmlns:dc="http://purl.org/dc/elements/1.1/"
				xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
			<rdf:Description rdf:about="http://www.beacosta.com/blog/?p=29"
    dc:identifier="http://www.beacosta.com/blog/?p=29"
    dc:title="How do I display some items differently based on one of their properties?"
    trackback:ping="http://www.beacosta.com/blog/wp-trackback.php?p=29" />
</rdf:RDF>	-->
				
<!-- You can start editing here. -->

<p><a href="http://www.beacosta.com/blog/?feed=rss2&amp;p=29"><abbr title="Really Simple Syndication">RSS</abbr> feed</a> 
| <a href="http://www.beacosta.com/blog/wp-trackback.php?p=29">Trackback <acronym title="\&quot;Uniform" resource="" identifier\="">URI</acronym></a>
</p>

<h2 id="comments">4 Comments 
<a href="#postcomment" title="Leave a comment">»</a>
</h2>
<div class="commentlist">
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-135" class="comment">
				<a name="comment-135" id="comment-135"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20do%20I%20display%20some%20items%20differently%20based%20on%20one%20of%20their%20properties_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-135")'>
					<cite>Comment by Anonymous<a href="#comment-135"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-06-28 05:11:15 						
					</div>					
					<div class="content">
						<p>Nice examples. can you post a few for updating data back - Adding a comment to the photos or adding another pic.</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-135", 135, true); return false;'>Reply to this comment</a>
											</div>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-136" class="comment odd">
				<a name="comment-136" id="comment-136"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20do%20I%20display%20some%20items%20differently%20based%20on%20one%20of%20their%20properties_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-136")'>
					<cite>Comment by Bea<a href="#comment-136"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-06-29 11:40:05 						
					</div>					
					<div class="content">
						<p>Hi,</p>
<p>Thanks for the feedback. I have <a href="http://www.beacosta.com/Archive/2005_12_01_bcosta_archive.html" rel="nofollow">a post</a> that shows how to update data back to the source.</p>
<p>Is there any specific scenario you haven’t found documentation for? Let me know!</p>
<p>Thanks,<br>
Bea</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-136", 136, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-137" class="comment">
				<a name="comment-137" id="comment-137"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20do%20I%20display%20some%20items%20differently%20based%20on%20one%20of%20their%20properties_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-137")'>
					<cite>Comment by Anonymous<a href="#comment-137"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-06-30 20:47:14 						
					</div>					
					<div class="content">
						<p>hi costa,<br>
I want to ask question:<br>
Why did you set the Path to “/”?</p>
<p>what’ the usage of “/” tag</p>
<p>Content=”{Binding Path=/}”</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-137", 137, true); return false;'>Reply to this comment</a>
											</div>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-138" class="comment odd">
				<a name="comment-138" id="comment-138"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20How%20do%20I%20display%20some%20items%20differently%20based%20on%20one%20of%20their%20properties_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-138")'>
					<cite>Comment by Bea<a href="#comment-138"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-07-30 23:36:56 						
					</div>					
					<div class="content">
						<p>Hi,</p>
<p>“Path=/” means, in english, “bind to the current item of this
collection”. In a typical master-detail scenario, selecting an item in
the ListBox causes the current item to change. We bind to the current
item because we want the details to change at the same time.</p>
<p>Thanks,<br>
Bea</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-138", 138, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
</div>
<div id="addcomment" class="comment" style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">
<a id="addcommentanchor" name="addcommentanchor"></a>
<form action="http://www.beacosta.com/blog/wp-comments-post.php" method="post" id="commentform">
<div class="add">
	<div id="reroot" style="display: none;">
		<small><a href="#" onclick="reRoot(); return false;">
			Click here to cancel "reply".
		</a></small>
	</div>
	<small>
		Name (required)	</small>
	<div>
		<input name="author" id="author" class="textarea" value="" size="28" tabindex="1" type="text">
	</div>
	<small>
		E-mail (required - never shown publicly)	</small>
	<div>
		<input name="email" id="email" value="" size="28" tabindex="2" type="text">
	</div>
	<small>
		<acronym title="Uniform Resource Identifier">URI</acronym>	</small>
	<div>
		<input name="url" id="url" value="" size="28" tabindex="3" type="text">	
	<div style="display: block;" id="secureimgdiv">
				<p><label for="securitycode">Anti-spam word: (Required)</label><span style="color: rgb(255, 0, 0);">*</span><br>
				<small>To
prove you're a person (not a spam script), type the security word shown
in the picture. Click on the picture to hear an audio file of the word.</small><br>
				<input name="securitycode" id="securitycode" size="30" tabindex="4" type="text">
				<input name="matchthis" value="1434" type="hidden">
				<a href="http://www.beacosta.com/blog?audioselect=1434" title="Hear an audio file of the anti-spam image"><img src="Beatriz%20Costa%20%BB%20How%20do%20I%20display%20some%20items%20differently%20based%20on%20one%20of%20their%20properties_files/blog.jpg" alt="Click to hear an audio file of the anti-spam word" style="border: 1px solid black; vertical-align: top; height: 50px; width: 160px;"></a></p>
			</div></div>

	<small>
		Your Comment (<a href="#" onclick="changeCommentSize(-80); return false;">smaller size</a> | <a href="#" onclick="changeCommentSize(80); return false;">larger size</a>)
	</small>
	<div style="width: 100%;">
		<textarea name="comment" id="comment" cols="60" rows="14" tabindex="4"></textarea>
	</div>
	<small>
You may use &lt;a href="" title=""&gt; &lt;abbr title=""&gt;
&lt;acronym title=""&gt; &lt;b&gt; &lt;blockquote cite=""&gt;
&lt;code&gt; &lt;em&gt; &lt;i&gt; &lt;strike&gt; &lt;strong&gt; in your
comment. </small>
	<div>
		<input name="comment_post_ID" value="29" type="hidden">
		<input name="redirect_to" value="/blog/?p=29" type="hidden">
		<input onclick="if(typeof(onAddComment) == 'function') { onAddComment(); } else { alert('ERROR:\nIt looks like the website administrator hasn\'t activated the Brians Threaded Comments plugin from the plugin page'); };" name="addcommentbutton" id="addcommentbutton" value="Add comment" tabindex="5" type="button">
	</div>
</div>
<input id="comment_reply_ID" name="comment_reply_ID" value="0" type="hidden"><div style="display: none;" id="jsspamblock_hideable">
	<input name="jsspamblock_hidden" value="10daa69ea8367872ba2dfa06a84cc733" type="hidden">
	<p>For spam filtering purposes, please copy the number <strong>7763</strong> to the field below:</p>
	<input name="jsspamblock_input" id="jsspamblock_input" tabindex="5" value="">
</div>
<script type="text/javascript">
	document.getElementById("jsspamblock_input").value = 7763;
	document.getElementById("jsspamblock_hideable").style.display = "none";
</script>
			
			<script language="JavaScript" type="text/javascript">
			<!--
				var urlinput = document.getElementById("url");
				var submitp = urlinput.parentNode;
				var substitution2 = document.getElementById("secureimgdiv");
				submitp.appendChild(substitution2, urlinput);
			// -->
			</script>
</form>
</div>
						
								
				<p></p><div align="center"></div>						
			</div>
		</div>
		<div id="right">
		<div class="sidebar">  
    <!-- Meta -->
	<h2>Meta:</h2>
 	<ul class="noli">
	<li><a href="http://feeds.feedburner.com/BeatrizCosta" title="Syndicate this site using RSS"><abbr title="Really Simple Syndication">RSS</abbr></a></li>
	<li><a href="http://feeds.feedburner.com/CommentsForBeatrizCosta" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
	</ul>				

  <!-- Search -->
  <h2>Search</h2>
	<br>
	<form id="searchform" method="get" action="">
	<input name="s" id="s" size="15" type="text">
	<input name="submit" value="Search" type="submit">
	</form>

  <!-- Categories -->
  <h2>Categories</h2>
	<ul class="menu">
		<li><a href="http://www.beacosta.com/blog/?cat=3" title="View all posts filed under General">General</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=2" title="View all posts filed under WPF Data Binding">WPF Data Binding</a>
	<ul class="children">
	<li><a href="http://www.beacosta.com/blog/?cat=12" title="View all posts filed under Binding to ADO.NET">Binding to ADO.NET</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=14" title="View all posts filed under ListBox">ListBox</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=9" title="View all posts filed under ListView">ListView</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=10" title="View all posts filed under Master-detail">Master-detail</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=13" title="View all posts filed under Sorting, filtering, grouping">Sorting, filtering, grouping</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=11" title="View all posts filed under Styles and Templates">Styles and Templates</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=7" title="View all posts filed under TreeView">TreeView</a>
</li>
	</ul>
</li>
	</ul>					
	
  <!-- Archives -->
	<h2>Archives</h2>
	<ul>
		<li><a href="http://www.beacosta.com/blog/?m=200709" title="September 2007">September 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200708" title="August 2007">August 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200705" title="May 2007">May 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200704" title="April 2007">April 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200701" title="January 2007">January 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200611" title="November 2006">November 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200610" title="October 2006">October 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200609" title="September 2006">September 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200608" title="August 2006">August 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200607" title="July 2006">July 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200606" title="June 2006">June 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200605" title="May 2006">May 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200604" title="April 2006">April 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200603" title="March 2006">March 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200602" title="February 2006">February 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200601" title="January 2006">January 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200512" title="December 2005">December 2005</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200511" title="November 2005">November 2005</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200510" title="October 2005">October 2005</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200509" title="September 2005">September 2005</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200508" title="August 2005">August 2005</a></li>
	</ul>

</div>			<div id="footer">
				<div class="copyright">
				<small>
				<span class="copy">Copyright © 2007 				<strong><a title="Beatriz Costa" href="http://www.beacosta.com/blog">Beatriz Costa</a>
				</strong>
				</span>
				<br><br>
				</small>
				</div>
			</div>	
		</div>
	</div>
</body></html>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0071)http://www.wiredprairie.us/journal/2007/05/range_converter_for_wpf.html -->
<HTML id=sixapart-standard xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>WiredPrairie: Range converter for WPF</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8">
<META content="MSHTML 6.00.2900.3199" name=GENERATOR><LINK 
href="WiredPrairie Range converter for WPF_files/styles-site.css" type=text/css 
rel=stylesheet><LINK title=Atom 
href="http://www.wiredprairie.us/journal/atom.xml" type=application/atom+xml 
rel=alternate><LINK title="RSS 2.0" 
href="http://www.wiredprairie.us/journal/index.xml" type=application/rss+xml 
rel=alternate><LINK title=Home href="http://www.wiredprairie.us/journal/" 
rel=start><LINK title="Give me the maximum and no more ListBox!" 
href="http://www.wiredprairie.us/journal/2007/05/give_me_the_maximum_and_no_mor.html" 
rel=prev><LINK title="New Windows Live Writer Beta available" 
href="http://www.wiredprairie.us/journal/2007/05/new_windows_live_writer_beta_a.html" 
rel=next><!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"
         xmlns:dc="http://purl.org/dc/elements/1.1/">
<rdf:Description
    rdf:about="http://www.wiredprairie.us/journal/2007/05/range_converter_for_wpf.html"
    trackback:ping="http://www.wiredprairie.us/journal/mt/mt-tb.cgi/317"
    dc:title="Range converter for WPF"
    dc:identifier="http://www.wiredprairie.us/journal/2007/05/range_converter_for_wpf.html"
    dc:subject="Coding"
    dc:description="A member on the MSDN forums asked how to enable a button based on the index of the currently selected item in a ListBox. If the index was 0, they wanted the Button to be disabled. I whipped up a..."
    dc:creator="Aaron"
    dc:date="2007-05-24T20:24:32-06:00" />
</rdf:RDF>
-->
<SCRIPT src="WiredPrairie Range converter for WPF_files/mt-site.js" 
type=text/javascript></SCRIPT>
</HEAD>
<BODY class=layout-two-column-right 
onload=individualArchivesOnLoad(commenter_name)>
<DIV id=container>
<DIV class=pkg id=container-inner>
<DIV id=banner>
<DIV class=pkg id=banner-inner>
<FORM action=http://www.wiredprairie.us/journal/mt/mt-search.cgi 
method=get><INPUT type=hidden value=1 name=IncludeBlogs> <IMG height=14 
src="WiredPrairie Range converter for WPF_files/Search.gif" width=14 border=0> 
<INPUT id=Text2 name=search> <INPUT type=submit value=Search> 
</FORM></DIV></DIV>
<DIV id=navlistbar>
<UL id=navlist>
  <LI><A href="http://www.wiredprairie.us/journal/index.html">main</A> 
  <LI><A href="http://www.wiredprairie.us/journal/freeware.html">free</A> 
  <LI><A href="http://www.wiredprairie.us/gallery/index.php">gallery</A> 
  <LI><A href="http://www.wiredprairie.us/journal/myfavorites.html">must 
  install</A> 
  <LI><A href="http://www.wiredprairie.us/journal/about.html">about</A> 
  <LI><A 
  href="http://www.wiredprairie.us/journal/archivesbymonth.html">archives</A> 
  <LI><A href="http://www.wiredprairie.us/journal/index.xml"><IMG height=16 
  alt=feed src="WiredPrairie Range converter for WPF_files/rssfeed.png" 
  width=16></A> 
  <LI>
  <FORM action=http://www.wiredprairie.us/journal/mt/mt-search.cgi 
  method=get><INPUT type=hidden value=1 name=IncludeBlogs> <INPUT id=Text2 
  name=search> <INPUT type=submit value=Search> </FORM></LI></UL></DIV>
<DIV id=pagebody>
<DIV class=pkg id=pagebody-inner>
<DIV id=alpha>
<DIV class=pkg id=alpha-inner>
<P class=content-nav><A 
href="http://www.wiredprairie.us/journal/2007/05/give_me_the_maximum_and_no_mor.html">« 
Give me the maximum and no more ListBox!</A> | <A 
href="http://www.wiredprairie.us/journal/">Main</A> | <A 
href="http://www.wiredprairie.us/journal/2007/05/new_windows_live_writer_beta_a.html">New 
Windows Live Writer Beta available »</A> </P><A id=a000320></A>
<DIV class=entry id=entry-320>
<H3 class=entry-header>Range converter for WPF</H3>
<DIV class=entry-content>
<DIV class=entry-body>
<P>A member on the MSDN forums asked how to enable a button based on the index 
of the currently selected item in a ListBox. If the index was 0, they wanted the 
Button to be disabled. I whipped up a Converter:</P>
<P>&nbsp;</P><PRE class=code>  [<SPAN style="COLOR: rgb(43,145,175)">ValueConversion</SPAN>(<SPAN style="COLOR: rgb(0,0,255)">typeof</SPAN>(<SPAN style="COLOR: rgb(0,0,255)">int</SPAN>), <SPAN style="COLOR: rgb(0,0,255)">typeof</SPAN>(<SPAN style="COLOR: rgb(0,0,255)">bool</SPAN>))]
  <SPAN style="COLOR: rgb(0,0,255)">public</SPAN> <SPAN style="COLOR: rgb(0,0,255)">class</SPAN> <SPAN style="COLOR: rgb(43,145,175)">IntToBooleanRangeConverter</SPAN> : <SPAN style="COLOR: rgb(43,145,175)">IValueConverter
</SPAN>  {
    <SPAN style="COLOR: rgb(0,0,255)">public</SPAN> <SPAN style="COLOR: rgb(0,0,255)">object</SPAN> Convert(<SPAN style="COLOR: rgb(0,0,255)">object</SPAN> value, <SPAN style="COLOR: rgb(43,145,175)">Type</SPAN> targetType, <BR><SPAN style="COLOR: rgb(0,0,255)">object</SPAN> parameter, System.Globalization.<SPAN style="COLOR: rgb(43,145,175)">CultureInfo</SPAN> culture)
    {
      <SPAN style="COLOR: rgb(0,0,255)">string</SPAN> range = parameter <SPAN style="COLOR: rgb(0,0,255)">as</SPAN> <SPAN style="COLOR: rgb(0,0,255)">string</SPAN>;
      <SPAN style="COLOR: rgb(0,0,255)">int</SPAN> intVal = (<SPAN style="COLOR: rgb(0,0,255)">int</SPAN>) value;
      <SPAN style="COLOR: rgb(0,0,255)">if</SPAN> (!<SPAN style="COLOR: rgb(0,0,255)">string</SPAN>.IsNullOrEmpty(range))
      {
        <SPAN style="COLOR: rgb(0,0,255)">string</SPAN>[] nums = range.Split(<SPAN style="COLOR: rgb(0,0,255)">new</SPAN> <SPAN style="COLOR: rgb(0,0,255)">char</SPAN>[] { <SPAN style="COLOR: rgb(163,21,21)">'-'</SPAN> });
        <SPAN style="COLOR: rgb(0,0,255)">int</SPAN>[] checkVal = <SPAN style="COLOR: rgb(0,0,255)">new</SPAN> <SPAN style="COLOR: rgb(0,0,255)">int</SPAN>[nums.Length];
        <SPAN style="COLOR: rgb(0,0,255)">for</SPAN>(<SPAN style="COLOR: rgb(0,0,255)">int</SPAN> i = 0; i &lt; nums.Length; i ++)
        {
          <SPAN style="COLOR: rgb(0,0,255)">int</SPAN>.TryParse(nums[i], <SPAN style="COLOR: rgb(0,0,255)">out</SPAN> checkVal[i]);
        }

<P>        <SPAN style="COLOR: rgb(0,0,255)">if</SPAN> (nums.Length == 1)<BR>
        {<BR>
          <SPAN style="COLOR: rgb(0,0,255)">return</SPAN> checkVal[0] == intVal;<BR>
        }<BR>
        <SPAN style="COLOR: rgb(0,0,255)">else</SPAN> <SPAN style="COLOR: rgb(0,0,255)">if</SPAN> (nums.Length == 2)<BR>
        {<BR>
          <SPAN style="COLOR: rgb(0,128,0)">// is it #-# or #-?<BR>
</SPAN>          <SPAN style="COLOR: rgb(0,0,255)">if</SPAN> (!<SPAN style="COLOR: rgb(0,0,255)">string</SPAN>.IsNullOrEmpty(nums[1]))<BR>
          {<BR>
            <SPAN style="COLOR: rgb(0,128,0)">// # - #<BR>
</SPAN>            <SPAN style="COLOR: rgb(0,0,255)">return</SPAN> (intVal &gt;= checkVal[0] &amp;&amp; intVal &lt;= checkVal[1]);<BR>
          }<BR>
          <SPAN style="COLOR: rgb(0,0,255)">else<BR>
</SPAN>          {<BR>
            <SPAN style="COLOR: rgb(0,128,0)">// #-<BR>
</SPAN>            <SPAN style="COLOR: rgb(0,0,255)">return</SPAN> intVal &gt;= checkVal[0];<BR>
          }<BR>
        }<BR>
        <SPAN style="COLOR: rgb(0,0,255)">else<BR>
</SPAN>        {<BR>
          <SPAN style="COLOR: rgb(0,0,255)">throw</SPAN> <SPAN style="COLOR: rgb(0,0,255)">new</SPAN> <SPAN style="COLOR: rgb(43,145,175)">ArgumentOutOfRangeException</SPAN>(<SPAN style="COLOR: rgb(163,21,21)">"IntToBooleanRangeConverter:<BR> Range must be in format #-#, #-, or #"</SPAN>);<BR>
        }<BR>
      }<BR>
      <SPAN style="COLOR: rgb(0,0,255)">throw</SPAN> <SPAN style="COLOR: rgb(0,0,255)">new</SPAN> <SPAN style="COLOR: rgb(43,145,175)">ArgumentOutOfRangeException</SPAN>(<SPAN style="COLOR: rgb(163,21,21)">"IntToBooleanRangeConverter: <BR>Range must be in format #-#, #-, or #"</SPAN>);<BR>
    }</P>

<P>    <SPAN style="COLOR: rgb(0,0,255)">public</SPAN> <SPAN style="COLOR: rgb(0,0,255)">object</SPAN> ConvertBack(<SPAN style="COLOR: rgb(0,0,255)">object</SPAN> value, <SPAN style="COLOR: rgb(43,145,175)">Type</SPAN> targetType, <SPAN style="COLOR: rgb(0,0,255)">object</SPAN> parameter, System.Globalization.<SPAN style="COLOR: rgb(43,145,175)">CultureInfo</SPAN> culture)<BR>
    {<BR>
      <SPAN style="COLOR: rgb(0,0,255)">return</SPAN> <SPAN style="COLOR: rgb(0,0,255)">null</SPAN>;<BR>
    }</P>

<P>  }<BR>
</P></PRE><A href="http://11011.net/software/vspaste"></A><BR>
<P>Here's a demo:</P><BR>
<P><SPAN style="COLOR: rgb(0,0,255)">&lt;</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">Window<BR></SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: rgb(255,0,0)">xmlns</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">http://schemas.microsoft.com/winfx/2006/xaml/presentation</SPAN>"<BR><SPAN 
style="COLOR: rgb(0,0,255)">&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: rgb(255,0,0)">xmlns:x</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN style="COLOR: rgb(0,0,255)"><A 
href='http://schemas.microsoft.com/winfx/2006/xaml"'>http://schemas.microsoft.com/winfx/2006/xaml</SPAN>"<BR></A><SPAN 
style="COLOR: rgb(0,0,255)">&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: rgb(255,0,0)">xmlns:local</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">clr-namespace:WiredPrairieNamespace</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)"> <BR>&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: rgb(255,0,0)">xmlns:System</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">clr-namespace:System;assembly=mscorlib</SPAN>"<BR><SPAN 
style="COLOR: rgb(0,0,255)">&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: rgb(255,0,0)">x:Class</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">WiredPrairieNamespace.Window1</SPAN>"<BR><SPAN 
style="COLOR: rgb(0,0,255)">&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: rgb(255,0,0)">x:Name</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">Window</SPAN>"<BR><SPAN 
style="COLOR: rgb(0,0,255)">&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: rgb(255,0,0)">Title</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">Window1</SPAN>"<BR><SPAN 
style="COLOR: rgb(0,0,255)">&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: rgb(255,0,0)">Width</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">640</SPAN>"<SPAN style="COLOR: rgb(0,0,255)"> 
</SPAN><SPAN style="COLOR: rgb(255,0,0)">Height</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">480</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR><BR>&nbsp;&nbsp;&nbsp; &lt;</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">Window.Resources</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp; &lt;</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">local:IntToBooleanRangeConverter</SPAN><SPAN 
style="COLOR: rgb(0,0,255)"> </SPAN><SPAN 
style="COLOR: rgb(255,0,0)">x:Key</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">IntToBooleanRangeConverter</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)"> /&gt;<BR>&nbsp;&nbsp;&nbsp; &lt;/</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">Window.Resources</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR><BR>&nbsp;&nbsp;&nbsp; &lt;</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">Grid</SPAN><SPAN style="COLOR: rgb(0,0,255)"> 
</SPAN><SPAN style="COLOR: rgb(255,0,0)">x:Name</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">LayoutRoot</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;</SPAN><SPAN style="COLOR: rgb(163,21,21)">ListBox</SPAN><SPAN 
style="COLOR: rgb(0,0,255)"> </SPAN><SPAN 
style="COLOR: rgb(255,0,0)">HorizontalAlignment</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">Left</SPAN>"<SPAN style="COLOR: rgb(0,0,255)"> 
</SPAN><SPAN style="COLOR: rgb(255,0,0)">Margin</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">79,72,0,149</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)"> </SPAN><SPAN 
style="COLOR: rgb(255,0,0)">Width</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">191</SPAN>"<SPAN style="COLOR: rgb(0,0,255)"> 
<BR></SPAN><SPAN 
style="COLOR: rgb(255,0,0)">IsSynchronizedWithCurrentItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">True</SPAN>"<SPAN style="COLOR: rgb(0,0,255)"> 
</SPAN><SPAN style="COLOR: rgb(255,0,0)">x:Name</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">myList</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;</SPAN><SPAN style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;</SPAN>Item<SPAN 
style="COLOR: rgb(0,0,255)">&lt;/</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;</SPAN><SPAN style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;</SPAN>Item<SPAN 
style="COLOR: rgb(0,0,255)">&lt;/</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;</SPAN><SPAN style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;</SPAN>Item<SPAN 
style="COLOR: rgb(0,0,255)">&lt;/</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;</SPAN><SPAN style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;</SPAN>Item<SPAN 
style="COLOR: rgb(0,0,255)">&lt;/</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;</SPAN><SPAN style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;</SPAN>Item<SPAN 
style="COLOR: rgb(0,0,255)">&lt;/</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;</SPAN><SPAN style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;</SPAN>Item<SPAN 
style="COLOR: rgb(0,0,255)">&lt;/</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;</SPAN><SPAN style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;</SPAN>Item<SPAN 
style="COLOR: rgb(0,0,255)">&lt;/</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;</SPAN><SPAN style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;</SPAN>Item<SPAN 
style="COLOR: rgb(0,0,255)">&lt;/</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;</SPAN><SPAN style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;</SPAN>Item<SPAN 
style="COLOR: rgb(0,0,255)">&lt;/</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;</SPAN><SPAN style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;</SPAN>Item<SPAN 
style="COLOR: rgb(0,0,255)">&lt;/</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;</SPAN><SPAN style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;</SPAN>Item<SPAN 
style="COLOR: rgb(0,0,255)">&lt;/</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">ListBoxItem</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;/</SPAN><SPAN style="COLOR: rgb(163,21,21)">ListBox</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&lt;</SPAN><SPAN style="COLOR: rgb(163,21,21)">Button</SPAN><SPAN 
style="COLOR: rgb(0,0,255)"> </SPAN><SPAN 
style="COLOR: rgb(255,0,0)">IsEnabled</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN style="COLOR: rgb(0,0,255)">{Binding 
Path=SelectedIndex, <BR>Converter={StaticResource IntToBooleanRangeConverter}, 
<BR>ConverterParameter=1-, ElementName=myList}</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)"> <BR></SPAN><SPAN 
style="COLOR: rgb(255,0,0)">HorizontalAlignment</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">Right</SPAN>"<SPAN style="COLOR: rgb(0,0,255)"> 
</SPAN><SPAN style="COLOR: rgb(255,0,0)">Margin</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">0,218,181,175</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)"> <BR></SPAN><SPAN 
style="COLOR: rgb(255,0,0)">Width</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">115</SPAN>"<SPAN style="COLOR: rgb(0,0,255)"> 
</SPAN><SPAN style="COLOR: rgb(255,0,0)">Content</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">=</SPAN>"<SPAN 
style="COLOR: rgb(0,0,255)">Button</SPAN>"<SPAN style="COLOR: rgb(0,0,255)"> 
</SPAN><SPAN style="COLOR: rgb(0,0,255)">/&gt;<BR>&nbsp;&nbsp;&nbsp; 
&lt;/</SPAN><SPAN style="COLOR: rgb(163,21,21)">Grid</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;<BR>&lt;/</SPAN><SPAN 
style="COLOR: rgb(163,21,21)">Window</SPAN><SPAN 
style="COLOR: rgb(0,0,255)">&gt;</SPAN></P>If the ListBox item zero is selected, 
the button is Disabled. ConverterParameter controls the results. It accepts 
either a single value for exact comparison, or a range, such as 
<STRONG>0-10</STRONG> or <STRONG>5-</STRONG>. The latter would accept values 5 
or higher and the former values zero through ten (inclusive).
<P></P></DIV>
<DIV class=entry-more id=more></DIV></DIV>
<P class=entry-footer><SPAN class=post-footers>Posted by Aaron on May 24, 2007 
8:24 PM</SPAN> <SPAN class=separator>|</SPAN> <A class=permalink 
href="http://www.wiredprairie.us/journal/2007/05/range_converter_for_wpf.html">Permalink</A> 
</P></DIV></DIV></DIV></DIV></DIV></DIV></DIV>
<SCRIPT src="WiredPrairie Range converter for WPF_files/urchin.js" 
type=text/javascript>
</SCRIPT>

<SCRIPT type=text/javascript>
_uacct = "UA-635767-1";
urchinTracker();
</SCRIPT>
</BODY></HTML>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0102)http://blogs.sqlxml.org/bryantlikes/archive/2006/09/21/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-3.aspx -->
<HTML lang=en xml:lang="en" xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>Bryant Likes's Blog : Enabling WPF Magic Using WCF - Part 3</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8">
<META content="Sql and Xml,WCF,WPF" name=keywords>
<META 
content="In Part 1 we created a simple WPF application that demonstrated WPF's ability to automatically update bindings and in Part 2 we extended the application to use WCF by using callbacks to notify WPF of the changes. In this part we will get rid of the XML" 
name=description>
<META content="MSHTML 6.00.2900.3199" name=GENERATOR><LINK 
href="http://blogs.sqlxml.org/bryantlikes/pingback.aspx" rel=pingback><LINK 
media=screen 
href="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/style.css" 
type=text/css rel=stylesheet><LINK media=print 
href="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/print.css" 
type=text/css rel=stylesheet><LINK media=screen 
href="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/cactus.css" 
type=text/css rel=stylesheet><LINK media=screen 
href="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/customcss.css" 
type=text/css rel=stylesheet><LINK href="/favicon.ico" type=image/ico 
rel="shortcut icon"><LINK title="Bryant Likes's Blog (RSS 2.0)" 
href="http://feeds.feedburner.com/BryantLikesBlog" type=application/rss+xml 
rel=alternate><LINK 
title="Enabling WPF Magic Using WCF - Part 3 Comment RSS (RSS 2.0)" 
href="http://blogs.sqlxml.org/bryantlikes/commentrss.aspx?PostID=8047" 
type=application/rss+xml rel=alternate>
<SCRIPT 
src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/global.js" 
type=text/javascript></SCRIPT>

<SCRIPT 
src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/urchin.js" 
type=text/javascript>
</SCRIPT>

<SCRIPT type=text/javascript>
_uacct = "UA-133109-1";
urchinTracker();
</SCRIPT>
</HEAD>
<BODY>
<FORM id=aspnetForm name=aspnetForm 
onsubmit="javascript:return WebForm_OnSubmit();" 
action=/bryantlikes/archive/2006/09/21/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-3.aspx 
method=post>
<DIV><INPUT id=__EVENTTARGET type=hidden name=__EVENTTARGET> <INPUT 
id=__EVENTARGUMENT type=hidden name=__EVENTARGUMENT> <INPUT id=__VIEWSTATE 
type=hidden 
value=/wEPDwUKLTMyNjg0MDc1MWQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgIFHmN0bDAwJF8kY3RsMDAkXyR3cyRfJFNlYXJjaEJveAUqY3RsMDAkXyRjdGwwMCRfJGN0bDAyJF8kZm9ybSRfJGNoa1JlbWVtYmVyIYIS4KdU7zrl4bjphRf8RdzvYS0= 
name=__VIEWSTATE> </DIV>
<SCRIPT type=text/javascript>
<!--
var theForm = document.forms['aspnetForm'];
if (!theForm) {
    theForm = document.aspnetForm;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
// -->
</SCRIPT>

<SCRIPT 
src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/WebResource.axd" 
type=text/javascript></SCRIPT>

<SCRIPT 
src="D:\LINKS\DM-V-VM\Enabling WPF Magic Using WCF\Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files\WebResource(1).axd" 
type=text/javascript></SCRIPT>

<SCRIPT type=text/javascript>
<!--
function WebForm_OnSubmit() {
if (typeof(ValidatorOnSubmit) == "function" && ValidatorOnSubmit() == false) return false;
return true;
}
// -->
</SCRIPT>

<DIV id=masthead>
<DIV id=userArea>
<DIV id=welcome align=right>Welcome to SqlXml Blogs <A 
id=ctl00___ctl00___duw1_ac1___Login 
href="http://blogs.sqlxml.org/login.aspx?ReturnUrl=%2fbryantlikes%2farchive%2f2006%2f09%2f21%2fEnabling-WPF-Magic-Using-WCF-_2D00_-Part-3.aspx">Sign 
in</A> | <A id=ctl00___ctl00___duw1_ac1___Register 
href="http://blogs.sqlxml.org/user/CreateUser.aspx?ReturnUrl=/bryantlikes/archive/2006/09/21/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-3.aspx">Join</A> 
| <A id=ctl00___ctl00___duw1_Faq1 
href="http://blogs.sqlxml.org/languages/en-US/docs/faq.aspx">Help</A> </DIV>
<DIV id=SearchSideBar>
<DIV id=Search align=right>
<TABLE cellSpacing=0 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD><INPUT class=searchBox id=ctl00___ctl00___ws___SearchBox 
      onkeydown=KeyDownHandlerctl00___ctl00___ws___SearchButton(event); 
      name=ctl00$_$ctl00$_$ws$_$SearchBox> </TD>
    <TD><SPAN class=SearchButtonOuter><A class=SearchButton 
      id=ctl00___ctl00___ws___SearchButton 
      href="javascript:__doPostBack('ctl00$_$ctl00$_$ws$_$SearchButton','')">Search</A></SPAN> 
    </TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<DIV id=title>
<H1><A class=headermaintitle id=ctl00___ctl00___bt___BlogTitle 
href="http://blogs.sqlxml.org/bryantlikes/default.aspx">Bryant Likes's 
Blog</A></H1>
<DIV>It's all about WebData</DIV></DIV></DIV>
<DIV id=nav>
<DIV id=navbar>
<UL>
  <LI><A id=ctl00___ctl00___Homelink1 
  href="http://blogs.sqlxml.org/bryantlikes/default.aspx">Home</A> </LI>
  <LI><A id=ctl00___ctl00___Contactlink1 
  href="http://blogs.sqlxml.org/bryantlikes/contact.aspx">Email</A> </LI>
  <LI><A id=ctl00___ctl00___Aboutlink1 
  href="http://blogs.sqlxml.org/bryantlikes/about.aspx">About</A> </LI>
  <LI><A id=ctl00___ctl00___rss 
  href="http://feeds.feedburner.com/BryantLikesBlog">RSS 2.0</A> </LI>
  <LI><A id=ctl00___ctl00___atom 
  href="http://feeds.feedburner.com/BryantLikesBlog">Atom 1.0</A> 
</LI></UL></DIV></DIV>
<DIV id=content>
<DIV id=leftmenu>
<DIV id=TasksSideBar></DIV>
<DIV id=RecentPostsSideBar>
<H3>Recent Posts</H3>
<UL>
  <LI><A id=ctl00___ctl00___bs___rp___PostList_ctl01_Link 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2007/10/03/installing-subversion-as-a-windows-nt-service.aspx">Installing 
  Subversion as a Windows NT Service</A> 
  <LI><A id=ctl00___ctl00___bs___rp___PostList_ctl02_Link 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2007/08/16/which-transformer-are-you.aspx">Which 
  Transformer Are You?</A> 
  <LI><A id=ctl00___ctl00___bs___rp___PostList_ctl03_Link 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2007/08/16/verizon-rumor-stackup.aspx">Verizon 
  Rumor Stackup</A> 
  <LI><A id=ctl00___ctl00___bs___rp___PostList_ctl04_Link 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2007/07/18/creating-biztalk-application-references-with-nant.aspx">Creating 
  BizTalk Application References with Nant</A> 
  <LI><A id=ctl00___ctl00___bs___rp___PostList_ctl05_Link 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2007/06/05/web-experience-events.aspx">Web 
  Experience Events</A> </LI></UL></DIV>
<DIV id=TagSideBar>
<H3>Tags</H3>
<UL class=SidebarTagCloud>
  <LI class=Tag5><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/.NET/default.aspx" 
  rel=tag>.NET</A> 
  <LI class=Tag2><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/ASP.Net_2F00_Web+Services/default.aspx" 
  rel=tag>ASP.Net/Web Services</A> 
  <LI class=Tag3><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/Avanade/default.aspx" 
  rel=tag>Avanade</A> 
  <LI class=Tag3><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/BizTalk/default.aspx" 
  rel=tag>BizTalk</A> 
  <LI class=Tag4><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/Certifications/default.aspx" 
  rel=tag>Certifications</A> 
  <LI class=Tag2><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/Gadgets/default.aspx" 
  rel=tag>Gadgets</A> 
  <LI class=Tag1><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/General/default.aspx" 
  rel=tag>General</A> 
  <LI class=Tag6><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/Live+Writer/default.aspx" 
  rel=tag>Live Writer</A> 
  <LI class=Tag1><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/Reporting+Services/default.aspx" 
  rel=tag>Reporting Services</A> 
  <LI class=Tag1><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/SharePoint/default.aspx" 
  rel=tag>SharePoint</A> 
  <LI class=Tag5><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/Silverlight/default.aspx" 
  rel=tag>Silverlight</A> 
  <LI class=Tag1><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/Sql+and+Xml/default.aspx" 
  rel=tag>Sql and Xml</A> 
  <LI class=Tag4><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/Test-Driven+Dev/default.aspx" 
  rel=tag>Test-Driven Dev</A> 
  <LI class=Tag6><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/Virtualization/default.aspx" 
  rel=tag>Virtualization</A> 
  <LI class=Tag4><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/Vista/default.aspx" 
  rel=tag>Vista</A> 
  <LI class=Tag5><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/WCF/default.aspx" 
  rel=tag>WCF</A> 
  <LI class=Tag6><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/WF/default.aspx" 
  rel=tag>WF</A> 
  <LI class=Tag6><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/Windows+Mobile/default.aspx" 
  rel=tag>Windows Mobile</A> 
  <LI class=Tag3><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/WPF/default.aspx" 
  rel=tag>WPF</A> 
  <LI class=Tag3><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/tags/WPF_2F00_E/default.aspx" 
  rel=tag>WPF/E</A> </LI></UL></DIV>
<DIV id=WLSearchBoxDiv>
<TABLE style="WIDTH: 200px" cellSpacing=0 cellPadding=0>
  <TBODY>
  <TR id=WLSearchBoxPlaceholder>
    <TD 
    style="BORDER-RIGHT: #4b7b9f 2px; BORDER-TOP: #4b7b9f 2px solid; BORDER-LEFT: #4b7b9f 2px solid; WIDTH: 100%; BORDER-BOTTOM: #4b7b9f 2px solid"><INPUT 
      id=WLSearchBoxInput 
      style="BORDER-RIGHT: transparent 0px; PADDING-RIGHT: 0px; BACKGROUND-POSITION: right 50%; BORDER-TOP: transparent 0px; PADDING-LEFT: 0px; BACKGROUND-IMAGE: url(http://search.msn.com/s/siteowner/searchbox_background.png); PADDING-BOTTOM: 0px; BORDER-LEFT: transparent 0px; WIDTH: 100%; PADDING-TOP: 0px; BORDER-BOTTOM: transparent 0px; BACKGROUND-REPEAT: no-repeat; HEIGHT: 16px" 
      disabled value=Loading...></TD>
    <TD 
    style="BORDER-RIGHT: #4b7b9f 2px solid; BORDER-TOP: #4b7b9f 2px solid; BORDER-LEFT: #4b7b9f 2px solid; BORDER-BOTTOM: #4b7b9f 2px solid"><INPUT 
      id=WLSearchBoxButton 
      style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; BORDER-TOP-STYLE: none; PADDING-TOP: 0px; BORDER-RIGHT-STYLE: none; BORDER-LEFT-STYLE: none; BORDER-BOTTOM-STYLE: none" 
      type=image 
      src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/searchbutton_normal.png" 
      align=absBottom></TD></TR></TBODY></TABLE>
<SCRIPT type=text/javascript charset=utf-8>
	var WLSearchBoxConfiguration=
	{
		"global":{
			"serverDNS":"search.msn.com",
			"market":"en-US"
		},
		"appearance":{
			"autoHideTopControl":false,
			"width":800,
			"height":550,
			"theme":"Blue"
		},
		"scopes":[
			{
				"type":"web",
				"caption":"&#x27;&#x73;&#x20;&#x62;&#x6c;&#x6f;&#x67;",
				"searchParam":"site:blogs.sqlxml.org"
			}
			,
			{
				"type":"web",
				"caption":"&#x57;&#x65;&#x62;",
				"searchParam":""
			}
		]
	}
	</SCRIPT>

<SCRIPT 
src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/bootstrap.js" 
type=text/javascript charset=utf-8></SCRIPT>
</DIV>
<DIV id=NewsSideBar>
<DIV id=NewsSidebar>
<H3>News</H3>
<UL>
  <LI><A href="http://feeds.feedburner.com/BryantLikesBlog"><IMG 
  style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
  height=26 alt="" 
  src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/BryantLikesBlog.gif" 
  width=88></A> <BR><A 
  href="http://signup.alerts.live.com/alerts/login.do?PINID=27401148&amp;returnURL=http://blogs.sqlxml.org/BryantLikes"><IMG 
  alt="Windows Live Alerts" 
  src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/alert_signup_eng.gif" 
  border=0></A> <BR><A href="http://www.linkedin.com/in/bryantlikes"><IMG 
  height=33 alt="View Bryant Likes's profile on LinkedIn" 
  src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/btn_viewmy_120x33.gif" 
  width=120 border=0></A> <BR><BR><IMG alt=Me 
  src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/o_MVPPhotoSml.jpg"> 
  <BR><BR>The posts on this weblog are provided "as is" with no warranties and 
  confer no rights. The opinions expressed herin are the personal opinions of 
  the individual authors and do not represent the views of <A 
  href="http://www.avanade.com/">Avanade</A> in any way. </LI></UL></DIV></DIV>
<DIV id=NavSideBar>
<H3>Navigation</H3>
<DIV id=headertab>
<UL>
  <LI><A id=ctl00___ctl00___bs___nm___Menu_ctl00_MenuItem 
  href="http://blogs.sqlxml.org/default.aspx">Blogs</A> 
  <LI><A id=ctl00___ctl00___bs___nm___Menu_ctl01_MenuItem 
  href="http://blogs.sqlxml.org/photos/default.aspx">Photos</A> 
  <LI><A id=ctl00___ctl00___bs___nm___Menu_ctl02_MenuItem 
  href="http://blogs.sqlxml.org/files/default.aspx">Downloads</A> 
</LI></UL></DIV></DIV>
<DIV id=LinkSideBar></DIV>
<DIV id=ArchiveSideBar>
<H3>Archives</H3>
<UL>
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2007/10.aspx">October 
  2007 (1)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2007/08.aspx">August 
  2007 (2)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2007/07.aspx">July 
  2007 (1)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2007/06.aspx">June 
  2007 (1)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2007/05.aspx">May 
  2007 (4)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2007/04.aspx">April 
  2007 (1)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2007/03.aspx">March 
  2007 (4)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2007/02.aspx">February 2007 
  (8)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2007/01.aspx">January 
  2007 (8)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2006/12.aspx">December 2006 
  (9)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2006/11.aspx">November 2006 
  (7)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2006/10.aspx">October 
  2006 (4)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2006/09.aspx">September 2006 
  (11)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2006/08.aspx">August 
  2006 (18)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2006/07.aspx">July 
  2006 (5)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2006/06.aspx">June 
  2006 (1)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2006/05.aspx">May 
  2006 (3)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2006/04.aspx">April 
  2006 (7)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2006/03.aspx">March 
  2006 (7)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2006/02.aspx">February 2006 
  (2)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2005/12.aspx">December 2005 
  (5)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2005/11.aspx">November 2005 
  (11)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2005/10.aspx">October 
  2005 (3)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2005/09.aspx">September 2005 
  (8)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2005/08.aspx">August 
  2005 (7)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2005/07.aspx">July 
  2005 (5)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2005/06.aspx">June 
  2005 (11)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2005/05.aspx">May 
  2005 (9)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2005/04.aspx">April 
  2005 (14)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2005/03.aspx">March 
  2005 (12)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2005/02.aspx">February 2005 
  (17)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2005/01.aspx">January 
  2005 (10)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2004/12.aspx">December 2004 
  (9)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2004/11.aspx">November 2004 
  (4)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2004/10.aspx">October 
  2004 (10)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2004/09.aspx">September 2004 
  (2)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2004/08.aspx">August 
  2004 (4)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2004/07.aspx">July 
  2004 (15)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2004/06.aspx">June 
  2004 (11)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2004/05.aspx">May 
  2004 (14)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2004/04.aspx">April 
  2004 (12)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2004/03.aspx">March 
  2004 (16)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2004/02.aspx">February 2004 
  (16)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2003/11.aspx">November 2003 
  (4)</A> 
  <LI><A href="http://blogs.sqlxml.org/bryantlikes/archive/2003/10.aspx">October 
  2003 (20)</A> 
  <LI><A 
  href="http://blogs.sqlxml.org/bryantlikes/archive/2003/09.aspx">September 2003 
  (5)</A> </LI></UL></DIV></DIV>
<DIV id=main><SPAN id=ctl00___ctl00___Ads1___StandardTop>
<SCRIPT type=text/javascript><!--
google_ad_client = "pub-9526670085455515";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text_image";
google_ad_channel ="";
google_color_border = "FFFFFF";
google_color_bg = "FFFFFF";
google_color_link = "000066";
google_color_text = "333333";
google_color_url = "0066FF";
//--></SCRIPT>

<SCRIPT 
src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/show_ads.js" 
type=text/javascript>
</SCRIPT>
</SPAN>
<DIV class=post>
<H5 class="posthead pageTitle">Enabling WPF Magic Using WCF - Part 3 </H5>
<P>In <A 
href="http://blogs.sqlxml.org/bryantlikes/archive/2006/09/20/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-1.aspx">Part 
1</A> we created a simple WPF application that demonstrated WPF's ability to 
automatically update bindings and in <A 
href="http://blogs.sqlxml.org/bryantlikes/archive/2006/09/20/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-2.aspx">Part 
2</A> we extended the application to use WCF by using callbacks to notify WPF of 
the changes. In this part we will get rid of the XML file and move our 
application to use a SQL Server 2005 database for storage. In doing so we will 
replace the file system watcher with a SQL Notification. In order to learn about 
SQL Notifications I would suggest <A 
href="http://www.simple-talk.com/sql/sql-server-2005/using-and-monitoring-sql-2005-query-notification/">this 
article</A> for a good overview and <A 
href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnvs05/html/querynotification.asp">this 
article</A> for code examples. </P>
<P>The first thing we will do is create our database. To do this I used <A 
href="http://msdn.microsoft.com/vstudio/teamsystem/products/dbpro/default.aspx">VS 
Database Professional</A> which is currently at CTP5. Below are the steps to 
create this database in VSDP:</P>
<OL>
  <LI>Create a new SQL Server 2005 project called ContactData 
  <LI>In the project properties check the box for "Enable Service Broker" 
  <LI>Add a new table called Contact (definition shown below)</LI></OL>
<P>The contact table is very similar to our contact XML data:</P>
<DIV 
style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: courier new"><PRE style="MARGIN: 0px"><FONT color=#0000ff>create table</FONT> [dbo].[Contact]</PRE><PRE style="MARGIN: 0px">(</PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; ContactID <SPAN style="COLOR: blue">int</SPAN> <FONT color=#0000ff>identity</FONT>(1,1) <FONT color=#0000ff>primary key</FONT> not <SPAN style="COLOR: blue">null</SPAN>, </PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; FirstName <FONT color=#0000ff>nvarchar</FONT>(50) <FONT color=#0000ff>not</FONT> <SPAN style="COLOR: blue">null</SPAN>,</PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; LastName <FONT color=#0000ff>nvarchar</FONT>(50) <FONT color=#0000ff>not</FONT> <SPAN style="COLOR: blue">null</SPAN>,</PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; Phone <FONT color=#0000ff>nvarchar</FONT>(15) <FONT color=#0000ff>not</FONT> <SPAN style="COLOR: blue">null</SPAN></PRE><PRE style="MARGIN: 0px">);</PRE></DIV>
<P>In the project I also edited the 
Scripts\Post-Deployment\Script.PostDeployment.sql script to add in our default 
contacts:</P>
<DIV 
style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: courier new"><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">insert into </SPAN>Contact <SPAN style="COLOR: blue">values </SPAN>(<SPAN style="COLOR: maroon">'Tom'</SPAN>, <SPAN style="COLOR: maroon">'Jones'</SPAN>, <SPAN style="COLOR: maroon">'800-333-1111'</SPAN>)</PRE><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">insert into </SPAN>Contact <SPAN style="COLOR: blue">values </SPAN>(<SPAN style="COLOR: maroon">'Jill'</SPAN>, <SPAN style="COLOR: maroon">'Smith'</SPAN>, <SPAN style="COLOR: maroon">'800-222-1111'</SPAN>)</PRE><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">insert into </SPAN>Contact <SPAN style="COLOR: blue">values </SPAN>(<SPAN style="COLOR: maroon">'Ed'</SPAN>, <SPAN style="COLOR: maroon">'Baker'</SPAN>, <SPAN style="COLOR: maroon">'877-666-1111'</SPAN>)</PRE><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">insert into </SPAN>Contact <SPAN style="COLOR: blue">values </SPAN>(<SPAN style="COLOR: maroon">'Mary'</SPAN>, <SPAN style="COLOR: maroon">'Johnson'</SPAN>, <SPAN style="COLOR: maroon">'866-777-1111'</SPAN>)</PRE></DIV>
<P>Now we just right click our database project and select "Deploy". The 
database should get created and our table should get created and populated. 
Note: if you're not using VSDP you can still manually create the database and 
table and enable service broker following the instructions in the first 
article.</P>
<P>Now that we have a database to connect to we need to update our app.config 
file for our WCF service with the connection string. Below is the updated config 
file:</P>
<DIV 
style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: courier new"><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">&lt;?</SPAN><SPAN style="COLOR: maroon">xml</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">version</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">1.0</SPAN>"<SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">encoding</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">utf-8</SPAN>"<SPAN style="COLOR: blue"> ?&gt;</SPAN></PRE><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">&lt;</SPAN><SPAN style="COLOR: maroon">configuration</SPAN><SPAN style="COLOR: blue">&gt;</SPAN></PRE><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp; &lt;</SPAN><SPAN style="COLOR: maroon">connectionStrings</SPAN><SPAN style="COLOR: blue">&gt;</SPAN></PRE><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; &lt;</SPAN><SPAN style="COLOR: maroon">add</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">name</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">cDB</SPAN>"<SPAN style="COLOR: blue"> </SPAN></PRE><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">       </SPAN><SPAN style="COLOR: red">connectionString</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">Database=ContactData;Server=(local);</SPAN></PRE><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">Integrated Security=SSPI;</SPAN>"</PRE><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</SPAN><SPAN style="COLOR: red">providerName</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">System.Data.SqlClient</SPAN>"<SPAN style="COLOR: blue">/&gt;</SPAN></PRE><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp; &lt;/</SPAN><SPAN style="COLOR: maroon">connectionStrings</SPAN><SPAN style="COLOR: blue">&gt;</SPAN></PRE>
<DIV 
style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: courier new"><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp; <SPAN style="COLOR: blue">&lt;</SPAN><SPAN style="COLOR: maroon">system.serviceModel</SPAN><SPAN style="COLOR: blue">&gt;...</SPAN>&lt;/</SPAN><SPAN style="COLOR: maroon">system.serviceModel</SPAN><SPAN style="COLOR: blue">&gt;</SPAN></PRE><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">&lt;/</SPAN><SPAN style="COLOR: maroon">configuration</SPAN><SPAN style="COLOR: blue">&gt;</SPAN></PRE></DIV></DIV>
<P>After we've added the connection string to the database we can reference it 
in our ContactProvider class as follows:</P>
<DIV 
style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: courier new"><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: blue">static</SPAN> <SPAN style="COLOR: blue">readonly</SPAN> <SPAN style="COLOR: blue">string</SPAN> ConnStr = </PRE><PRE style="MARGIN: 0px"><SPAN style="COLOR: teal"><FONT color=#000000>  </FONT>ConfigurationManager</SPAN>.ConnectionStrings[<SPAN style="COLOR: maroon">"<SPAN style="COLOR: blue"><FONT color=#800000>cDB</FONT></SPAN>"</SPAN>].ConnectionString;</PRE></DIV>
<P>Now that we have a connection string we can pull the contacts from the 
database and return them to the client. To do this we will create a new method 
called GetClientsFromDb as shown below:</P>
<DIV 
style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: courier new"><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: teal">List</SPAN>&lt;<SPAN style="COLOR: teal">Contact</SPAN>&gt; GetContactsFromDb()</PRE><PRE style="MARGIN: 0px">{</PRE><PRE style="MARGIN: 0px">&nbsp; <SPAN style="COLOR: teal">List</SPAN>&lt;<SPAN style="COLOR: teal">Contact</SPAN>&gt; contacts = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: teal">List</SPAN>&lt;<SPAN style="COLOR: teal">Contact</SPAN>&gt;();</PRE><PRE style="MARGIN: 0px">&nbsp; <SPAN style="COLOR: blue">using</SPAN> (<SPAN style="COLOR: teal">SqlConnection</SPAN> conn = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: teal">SqlConnection</SPAN>(ConnStr))</PRE><PRE style="MARGIN: 0px">&nbsp; {</PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: teal">SqlCommand</SPAN> cmd = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: teal">SqlCommand</SPAN>(</PRE><PRE style="MARGIN: 0px">      <SPAN style="COLOR: maroon">"select ContactID, FirstName, LastName, Phone from dbo.Contact"</SPAN>, </PRE><PRE style="MARGIN: 0px">      conn);</PRE><PRE style="MARGIN: 0px">&nbsp;</PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; conn.Open();</PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: teal">IDataReader</SPAN> dr = cmd.ExecuteReader();</PRE><PRE style="MARGIN: 0px">&nbsp;</PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">while</SPAN> (dr.Read())</PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; {</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: teal">Contact</SPAN> c = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: teal">Contact</SPAN>();</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp;&nbsp;&nbsp; c.FirstName = dr.GetString(1);</PRE><PRE style="MARGIN: 0px">  &nbsp;&nbsp;&nbsp; c.LastName = dr.GetString(2);</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp;&nbsp;&nbsp; c.Phone = dr.GetString(3);</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp;&nbsp;&nbsp; contacts.Add(c);</PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; }</PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;}</PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;<SPAN style="COLOR: blue">return</SPAN> contacts;</PRE><PRE style="MARGIN: 0px">}</PRE></DIV>
<P>Normally we would use something like Enterprise Library to deal with the data 
access, but since this is a very simple example I just used the standard 
SqlClient objects. All we are doing is pulling all the contacts from the 
database and returning them as a list of Contact objects. Notice that the t-sql 
is very specific with column naming and table referencing, this will be 
important later when we add our Sql Dependency object. At this point we could 
return this to the client by changing GetContacts to use this method instead of 
the GetContactsFromFile method. However, let's continue to move forward and add 
in our Sql Dependency now. Below is the updated class definition for the 
ContactProvider class:</P>
<DIV 
style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: courier new"><PRE style="MARGIN: 0px"><SPAN style="COLOR: blue">namespace</SPAN> ContactService</PRE><PRE style="MARGIN: 0px">{</PRE><PRE style="MARGIN: 0px">&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">class</SPAN> <SPAN style="COLOR: teal">ContactProvider</SPAN> : <SPAN style="COLOR: teal">IContactProvider</SPAN>, <SPAN style="COLOR: teal"><STRONG>IDisposable</STRONG></SPAN></PRE><PRE style="MARGIN: 0px">  {</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; <SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: blue">static</SPAN> <SPAN style="COLOR: blue">readonly</SPAN> <SPAN style="COLOR: blue">string</SPAN> ConnStr = <SPAN style="COLOR: teal">...</SPAN>&nbsp; &nbsp; &nbsp; &nbsp; </PRE><PRE style="MARGIN: 0px">    <SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: teal">SqlDependency</SPAN> _sqlDep;</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; <SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: teal">List</SPAN>&lt;<SPAN style="COLOR: teal">Contact</SPAN>&gt; _contacts;</PRE><PRE style="MARGIN: 0px">&nbsp;</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; <SPAN style="COLOR: blue">public</SPAN> ContactProvider()</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; {</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; &nbsp; <SPAN style="COLOR: teal">SqlDependency</SPAN>.Start(ConnStr);</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; }</PRE><PRE style="MARGIN: 0px">&nbsp;</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; <SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: blue">static</SPAN> <SPAN style="COLOR: teal">List</SPAN>&lt;<SPAN style="COLOR: teal">IListChangedCallback</SPAN>&gt; _callbacks = ...</PRE><PRE style="MARGIN: 0px">&nbsp;</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: teal">List</SPAN>&lt;<SPAN style="COLOR: teal">Contact</SPAN>&gt; GetContacts()</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; {</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; &nbsp; <SPAN style="COLOR: teal">...</SPAN>&nbsp;</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; &nbsp; <STRONG><SPAN style="COLOR: blue">if</SPAN> (_contacts == <SPAN style="COLOR: blue">null</SPAN>)</STRONG></PRE><PRE style="MARGIN: 0px"><STRONG>&nbsp; &nbsp; &nbsp; {</STRONG></PRE><PRE style="MARGIN: 0px"><STRONG>&nbsp; &nbsp; &nbsp; &nbsp; _contacts = GetContactsFromDb();</STRONG></PRE><PRE style="MARGIN: 0px"><STRONG>&nbsp; &nbsp; &nbsp; }</STRONG></PRE><PRE style="MARGIN: 0px"><STRONG>&nbsp;</STRONG></PRE><PRE style="MARGIN: 0px"><STRONG>&nbsp; &nbsp; &nbsp; <SPAN style="COLOR: blue">return</SPAN> _contacts;</STRONG></PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; }</PRE><PRE style="MARGIN: 0px">&nbsp;</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; <SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: teal">List</SPAN>&lt;<SPAN style="COLOR: teal">Contact</SPAN>&gt; GetContactsFromDb()</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; {</PRE><PRE style="MARGIN: 0px">      ...</PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;&nbsp;   <SPAN style="COLOR: teal">SqlCommand</SPAN> cmd = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: teal">SqlCommand</SPAN>(...);</PRE><PRE style="MARGIN: 0px">&nbsp;</PRE><PRE style="MARGIN: 0px"><STRONG>      _sqlDep = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: teal">SqlDependency</SPAN>(cmd);</STRONG></PRE>
<DIV 
style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: courier new"><PRE style="MARGIN: 0px"><STRONG>&nbsp; &nbsp; &nbsp; _sqlDep.OnChange += OnListChanged;</STRONG></PRE></DIV><PRE style="MARGIN: 0px">&nbsp;</PRE><PRE style="MARGIN: 0px">&nbsp;&nbsp;&nbsp;   conn.Open();</PRE><PRE style="MARGIN: 0px">      ...</PRE><PRE style="MARGIN: 0px">    }</PRE><PRE style="MARGIN: 0px">&nbsp;</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; <SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: blue">void</SPAN> OnListChanged(<SPAN style="COLOR: blue">object</SPAN> sender, <SPAN style="COLOR: teal">EventArgs</SPAN> e)</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; {</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; &nbsp; <SPAN style="COLOR: blue">if</SPAN> (_callbacks.Count &gt; 0)</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; &nbsp; {</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; &nbsp; &nbsp; <STRONG>_contacts = GetContactsFromDb();</STRONG></PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; &nbsp; &nbsp; <SPAN style="COLOR: teal">Action</SPAN>&lt;<SPAN style="COLOR: teal">IListChangedCallback</SPAN>&gt; invoke =</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN style="COLOR: blue">delegate</SPAN>(<SPAN style="COLOR: teal">IListChangedCallback</SPAN> callback)</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; callback.OnCallback(<STRONG>_contacts</STRONG>.ToArray());</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; &nbsp; &nbsp; _callbacks.ForEach(invoke);</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; &nbsp; }</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; }</PRE><PRE style="MARGIN: 0px">&nbsp;</PRE><PRE style="MARGIN: 0px">&nbsp; &nbsp; <STRONG><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">void</SPAN> Dispose()</STRONG></PRE><PRE style="MARGIN: 0px"><STRONG>&nbsp; &nbsp; {</STRONG></PRE><PRE style="MARGIN: 0px"><STRONG>&nbsp; &nbsp; &nbsp; <SPAN style="COLOR: teal">SqlDependency</SPAN>.Stop(ConnStr);</STRONG></PRE><PRE style="MARGIN: 0px"><STRONG>&nbsp; &nbsp; }</STRONG></PRE><PRE style="MARGIN: 0px">&nbsp; }</PRE><PRE style="MARGIN: 0px">}</PRE></DIV>
<P>I've highlighted the changed in bold, hopefully you can see them. The first 
thing to note is that the class now implements IDisposable. This is to enable 
use to call SqlDependency.Start when the class is contructed and to call 
SqlDependency.Stop when the class is disposed. This is done, to quote <A 
href="http://blogs.msdn.com/sanchan/archive/2006/08/11/695493.aspx">Sanchan 
Sahai Saxena</A>&nbsp;in the article above, to "create the necessary queue, 
service and procedure and starts a listener to monitor the queue". </P>
<P>The next item to note is that when we get our initial list of contacts we are 
creating the dependency object using the same command. This ensures us that when 
any item in our list of contacts changes the dependency will be fired. We are 
also storing the list of contacts locally to avoid hitting the database multiple 
times. The dependency object's Change event is then wired to our OnListChanged 
event handler.</P>
<P>Finally we update our OnListChanged method to pull the contacts from the 
database and make the callback to the client with the updated list of contacts. 
To test the application fire up the service and then one or more of the client 
applications. Then open the table using SQL Server Management Studio and 
update/insert/delete records in the table. The results should be reflected 
almost instantly in the client applications. That's it! </P>
<P>Hopefully this has been a helpful series that demonstrates some of the cool 
features in both WCF and WPF (and SQL Server 2005). It has been a good learning 
experience for me. As we progress on our real application using some of these 
techniques I will try to add to this example. </P>
<P><STRONG>Technorati Tags:</STRONG> <A 
href="http://technorati.com/tag/WPF">WPF</A> <A 
href="http://technorati.com/tag/WCF">WCF</A>&nbsp;<A 
href="http://technorati.com/tag/Sql%20Server">Sql Server</A></P>
<DIV class=postfoot><SPAN class=em>Posted:</SPAN> Thursday, September 21, 2006 
1:45 PM by <A id=ctl00___ctl00___ctl02___Entry___AuthorLink 
href="http://blogs.sqlxml.org/user/Profile.aspx?UserID=2104">bryantlikes</A> 
<DIV><SPAN id=ctl00___ctl00___ctl02___Entry___InlineTagEditorPanel>Filed under: 
<A 
href="http://blogs.sqlxml.org/bryantlikes/archive/tags/Sql+and+Xml/default.aspx" 
rel=tag>Sql and Xml</A>, <A 
href="http://blogs.sqlxml.org/bryantlikes/archive/tags/WCF/default.aspx" 
rel=tag>WCF</A>, <A 
href="http://blogs.sqlxml.org/bryantlikes/archive/tags/WPF/default.aspx" 
rel=tag>WPF</A></SPAN><INPUT 
id=ctl00___ctl00___ctl02___Entry___InlineTagEditorPanel_State type=hidden 
value=nochange 
name=ctl00$_$ctl00$_$ctl02$_$Entry$_$InlineTagEditorPanel></DIV></DIV></DIV>
<DIV id=comments>
<H2>Comments </H2>
<DIV class=CommentArea>
<H4 class=CommentTitle><A 
id=ctl00___ctl00___ctl02___Comments___Comments_ctl00_NameLink 
title=shanthu>shanthu</A> said: <IMG class=CommentArrow 
src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/spacer.gif" 
align=absBottom> </H4>
<DIV class=CommentText>
<DIV class=CommentText2>
<DIV class=CommentText3>
<P>I have done lot of work with WPF and WCF, in spite of all the things i knew 
about these two topics, I found your article very very useful. Thank you very 
much for sharing.</P></DIV></DIV></DIV>
<DIV class=CommentFooter><A 
id=ctl00___ctl00___ctl02___Comments___Comments_ctl00_PermaLink title=permalink 
href="http://blogs.sqlxml.org/bryantlikes/archive/2006/09/21/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-3.aspx#8137">#</A> 
September 23, 2006 12:42 PM </DIV></DIV>
<DIV class=CommentArea>
<H4 class=CommentTitle><A 
id=ctl00___ctl00___ctl02___Comments___Comments_ctl01_NameLink 
title=shanthu>shanthu</A> said: <IMG class=CommentArrow 
src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/spacer.gif" 
align=absBottom> </H4>
<DIV class=CommentText>
<DIV class=CommentText2>
<DIV class=CommentText3>
<P>//Window1.xaml.cs</P>
<P>public Window1()</P>
<P>{</P>
<P>&nbsp; InitializeComponent();</P>
<P>&nbsp; _content.Content = new ContactViewModel();</P>
<P>}</P>
<P>I have started employing this pattern in my project. There is scope for 
further decoupling. Wherever possible I would like to avoid knowing the Concrete 
classes.</P>
<P>The above code can be refactored to be </P>
<P>public Window1()</P>
<P>{</P>
<P>&nbsp; InitializeComponent();</P>
<P>&nbsp; IContactViewModel contactViewModel = 
MyViewFactory.GetViewModel&lt;IContactViewModel&gt;();</P>
<P>&nbsp; _content.Content = IContactViewModel;</P>
<P>}</P>
<P>This will allow us keep chaging the implementation independent of the 
clients.</P></DIV></DIV></DIV>
<DIV class=CommentFooter><A 
id=ctl00___ctl00___ctl02___Comments___Comments_ctl01_PermaLink title=permalink 
href="http://blogs.sqlxml.org/bryantlikes/archive/2006/09/21/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-3.aspx#8194">#</A> 
September 24, 2006 1:37 PM </DIV></DIV>
<DIV class=CommentArea>
<H4 class=CommentTitle><A 
id=ctl00___ctl00___ctl02___Comments___Comments_ctl02_NameLink 
title="Pratap Gaikwad">Pratap Gaikwad</A> said: <IMG class=CommentArrow 
src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/spacer.gif" 
align=absBottom> </H4>
<DIV class=CommentText>
<DIV class=CommentText2>
<DIV class=CommentText3>
<P>Hi</P>
<P>I am working on WCF for 1 month now. I have integreted the wcf services into 
my project. </P>
<P>Flow of data in our project is like this:</P>
<P>UI---&gt;Business Layer---&gt;Service Layer--&gt;DB</P>
<P>Here between Business Layer and Service Layer I have to implement WCF. This 
service is called through WWF. </P>
<P>In WWF they are using global.asax file for calling web services. I have to 
remove these web services and implement wcf services. I have implemented wcf as 
a class lib project and unable to access this global variable declared in 
global.asax file. Can you suggest me to get &nbsp;through this 
problem</P></DIV></DIV></DIV>
<DIV class=CommentFooter><A 
id=ctl00___ctl00___ctl02___Comments___Comments_ctl02_PermaLink title=permalink 
href="http://blogs.sqlxml.org/bryantlikes/archive/2006/09/21/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-3.aspx#8901">#</A> 
October 5, 2006 3:15 AM </DIV></DIV>
<DIV class=CommentAreaOwner>
<H4 class=CommentTitle><A 
id=ctl00___ctl00___ctl02___Comments___Comments_ctl03_NameLink title=bryantlikes 
href="http://blogs.sqlxml.org/utility/Redirect.aspx?U=http%3a%2f%2fblogs.sqlxml.org%2fBryantLikes">bryantlikes</A> 
said: <IMG class=CommentArrow 
src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/spacer.gif" 
align=absBottom> </H4>
<DIV class=CommentText>
<DIV class=CommentText2>
<DIV class=CommentText3>
<P>If your WCF layer is implemented in a class library then you will need to 
host it somehow. Either in IIS or a windows NT service. I usually use a console 
application to host the WCF service during development and then move to a 
Windows NT service when I move to production.</P></DIV></DIV></DIV>
<DIV class=CommentFooter><A 
id=ctl00___ctl00___ctl02___Comments___Comments_ctl03_PermaLink title=permalink 
href="http://blogs.sqlxml.org/bryantlikes/archive/2006/09/21/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-3.aspx#8938">#</A> 
October 5, 2006 10:38 AM </DIV></DIV>
<DIV class=CommentArea>
<H4 class=CommentTitle><A 
id=ctl00___ctl00___ctl02___Comments___Comments_ctl04_NameLink title=Leo>Leo</A> 
said: <IMG class=CommentArrow 
src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/spacer.gif" 
align=absBottom> </H4>
<DIV class=CommentText>
<DIV class=CommentText2>
<DIV class=CommentText3>
<P>can you provided the completed source code?</P>
<P>Thank you</P></DIV></DIV></DIV>
<DIV class=CommentFooter><A 
id=ctl00___ctl00___ctl02___Comments___Comments_ctl04_PermaLink title=permalink 
href="http://blogs.sqlxml.org/bryantlikes/archive/2006/09/21/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-3.aspx#9765">#</A> 
October 16, 2006 7:26 PM </DIV></DIV>
<DIV class=CommentArea>
<H4 class=CommentTitle><A 
id=ctl00___ctl00___ctl02___Comments___Comments_ctl05_NameLink title=ralph 
href="http://blogs.sqlxml.org/utility/Redirect.aspx?U=http%3a%2f%2fblogs.msdn.com%2fralph.squillace" 
rel=nofollow>ralph</A> said: <IMG class=CommentArrow 
src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/spacer.gif" 
align=absBottom> </H4>
<DIV class=CommentText>
<DIV class=CommentText2>
<DIV class=CommentText3>
<P>If you are using WF and WCF together, you should examine the SDK for the 
CrossTechnology samples for .NET 3.0 (<A 
href="http://msdn2.microsoft.com/en-us/library/ms756478.aspx" target=_new 
rel=nofollow>http://msdn2.microsoft.com/en-us/library/ms756478.aspx</A>). </P>
<P>Cheers! Great example. Very useful!</P></DIV></DIV></DIV>
<DIV class=CommentFooter><A 
id=ctl00___ctl00___ctl02___Comments___Comments_ctl05_PermaLink title=permalink 
href="http://blogs.sqlxml.org/bryantlikes/archive/2006/09/21/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-3.aspx#13807">#</A> 
November 21, 2006 10:04 PM </DIV></DIV></DIV>
<FIELDSET id=commentform><LEGEND>Leave a Comment</LEGEND>
<P>
<DIV><LABEL for=ctl00___ctl00___ctl02___form___tbTitle>Title</LABEL> 
<EM>(required)</EM><SPAN 
id=ctl00___ctl00___ctl02___form___Requiredfieldvalidator1 
style="VISIBILITY: hidden; COLOR: red">*</SPAN></DIV>
<DIV><INPUT class=smallbox id=ctl00___ctl00___ctl02___form___tbTitle 
value="re: Enabling WPF Magic Using WCF - Part 3" 
name=ctl00$_$ctl00$_$ctl02$_$form$_$tbTitle></DIV>
<P></P>
<P>
<DIV id=ctl00___ctl00___ctl02___form___NameTitle><LABEL 
for=ctl00___ctl00___ctl02___form___tbName>Name</LABEL> <EM>(required)</EM><SPAN 
id=ctl00___ctl00___ctl02___form___Requiredfieldvalidator2 
style="VISIBILITY: hidden; COLOR: red">*</SPAN></DIV>
<DIV id=ctl00___ctl00___ctl02___form___NameDesc><INPUT class=smallbox 
id=ctl00___ctl00___ctl02___form___tbName 
name=ctl00$_$ctl00$_$ctl02$_$form$_$tbName></DIV>
<P></P>
<P>
<DIV><LABEL for=ctl00___ctl00___ctl02___form___tbUrl>Your URL</LABEL> 
<EM>(optional</EM>)</DIV>
<DIV><INPUT class=smallbox id=ctl00___ctl00___ctl02___form___tbUrl 
name=ctl00$_$ctl00$_$ctl02$_$form$_$tbUrl></DIV>
<P></P>
<P>
<DIV><LABEL for=ctl00___ctl00___ctl02___form___tbComment>Comments</LABEL> 
<EM>(required)</EM><SPAN 
id=ctl00___ctl00___ctl02___form___Requiredfieldvalidator3 
style="VISIBILITY: hidden; COLOR: red">*</SPAN></DIV>
<DIV><TEXTAREA id=ctl00___ctl00___ctl02___form___tbComment name=ctl00$_$ctl00$_$ctl02$_$form$_$tbComment rows=5 cols=25></TEXTAREA></DIV>
<P></P>
<P>
<DIV><INPUT id=ctl00___ctl00___ctl02___form___chkRemember type=checkbox 
name=ctl00$_$ctl00$_$ctl02$_$form$_$chkRemember><LABEL 
for=ctl00___ctl00___ctl02___form___chkRemember>Remember Me?</LABEL></DIV>
<P></P>
<P><INPUT id=ctl00___ctl00___ctl02___form___btnSubmit onclick='javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions("ctl00$_$ctl00$_$ctl02$_$form$_$btnSubmit", "", true, "", "", false, false))' type=submit value=Submit name=ctl00$_$ctl00$_$ctl02$_$form$_$btnSubmit> 
</P></FIELDSET> 
<FIELDSET id=postnotification><LEGEND>Comment Notification</LEGEND>
<P>If you would like to receive an email when updates are made to this post, 
please register <A id=ctl00___ctl00___ctl02___DetailedSubBar___RegisterLink 
href="http://blogs.sqlxml.org/user/CreateUser.aspx?ReturnUrl=/bryantlikes/archive/2006/09/21/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-3.aspx">here</A> 
</P>
<P>Subscribe to this post's comments using <A 
id=ctl00___ctl00___ctl02___DetailedSubBar___CommentRssLink 
href="http://blogs.sqlxml.org/bryantlikes/commentrss.aspx?PostID=8047">RSS</A> 
</P></FIELDSET> </DIV>
<DIV id=footer><A href="http://communityserver.org/r.ashx?1" target=_blank><IMG 
alt="Powered by Community Server (Personal Edition), by Telligent Systems " 
src="Bryant Likes's Blog  Enabling WPF Magic Using WCF - Part 3_files/PoweredByCS_personal.gif" 
border=0></A> </DIV></DIV>
<SCRIPT type=text/javascript>
<!--
var Page_Validators =  new Array(document.getElementById("ctl00___ctl00___ctl02___form___Requiredfieldvalidator1"), document.getElementById("ctl00___ctl00___ctl02___form___Requiredfieldvalidator2"), document.getElementById("ctl00___ctl00___ctl02___form___Requiredfieldvalidator3"));
// -->
</SCRIPT>

<SCRIPT type=text/javascript>
<!--
var ctl00___ctl00___ctl02___form___Requiredfieldvalidator1 = document.all ? document.all["ctl00___ctl00___ctl02___form___Requiredfieldvalidator1"] : document.getElementById("ctl00___ctl00___ctl02___form___Requiredfieldvalidator1");
ctl00___ctl00___ctl02___form___Requiredfieldvalidator1.controltovalidate = "ctl00___ctl00___ctl02___form___tbTitle";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator1.errormessage = "*";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator1.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator1.initialvalue = "";
var ctl00___ctl00___ctl02___form___Requiredfieldvalidator2 = document.all ? document.all["ctl00___ctl00___ctl02___form___Requiredfieldvalidator2"] : document.getElementById("ctl00___ctl00___ctl02___form___Requiredfieldvalidator2");
ctl00___ctl00___ctl02___form___Requiredfieldvalidator2.controltovalidate = "ctl00___ctl00___ctl02___form___tbName";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator2.errormessage = "*";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator2.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator2.initialvalue = "";
var ctl00___ctl00___ctl02___form___Requiredfieldvalidator3 = document.all ? document.all["ctl00___ctl00___ctl02___form___Requiredfieldvalidator3"] : document.getElementById("ctl00___ctl00___ctl02___form___Requiredfieldvalidator3");
ctl00___ctl00___ctl02___form___Requiredfieldvalidator3.controltovalidate = "ctl00___ctl00___ctl02___form___tbComment";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator3.errormessage = "*";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator3.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
ctl00___ctl00___ctl02___form___Requiredfieldvalidator3.initialvalue = "";
// -->
</SCRIPT>

<SCRIPT language=javascript type=text/javascript>
<!--
function KeyDownHandlerctl00___ctl00___ws___SearchButton(event)
{
	if (event.keyCode == 13)
	{
		event.returnValue = false;
		event.cancel = true;
     __doPostBack('ctl00$_$ctl00$_$ws$_$SearchButton','')	}
}

//-->
</SCRIPT>
<!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://blogs.sqlxml.org/bryantlikes/archive/2006/09/21/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-3.aspx"
dc:identifier="http://blogs.sqlxml.org/bryantlikes/archive/2006/09/21/Enabling-WPF-Magic-Using-WCF-_2D00_-Part-3.aspx"
dc:title="Enabling WPF Magic Using WCF - Part 3"
trackback:ping="http://blogs.sqlxml.org/bryantlikes/trackback.aspx?PostID=8047" />
</rdf:RDF>
-->
<SCRIPT type=text/javascript>
<!--
var Page_ValidationActive = false;
if (typeof(ValidatorOnLoad) == "function") {
    ValidatorOnLoad();
}

function ValidatorOnSubmit() {
    if (Page_ValidationActive) {
        return ValidatorCommonOnSubmit();
    }
    else {
        return true;
    }
}
// -->
</SCRIPT>
</FORM></BODY></HTML>

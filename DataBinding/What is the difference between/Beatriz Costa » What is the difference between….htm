<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Beatriz Costa » What is the difference between… ?</title>



<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="generator" content="WordPress 2.2.2"><!-- leave this for stats --><!-- Editable Meta Tags --> 

<meta name="description" content="">
<meta name="keywords" content="">
<meta name="author" content="Sreejith - GFXedit.com">
<meta name="copyright" content="Your Name">
<meta name="generator" content="WordPress 2.2.2">
<meta name="robots" content="index,follow"><!-- Meta Tags End--><!-- Style Sheet -->



<style type="text/css" media="screen">
@import url( http://www.beacosta.com/blog/wp-content/themes/darkpad-10/style.css );
</style><!-- Style Sheet End --><!-- Includes -->



 <script type="text/javascript" src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/addEvent.htm"></script>
 <script type="text/javascript" src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/titles.htm"></script><!-- End Includes --><!-- Feed and Ping URLS-->



<link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://www.beacosta.com/blog/?feed=rss2">
<link rel="alternate" type="text/xml" title="RSS .92" href="http://www.beacosta.com/blog/?feed=rss">
<link rel="alternate" type="application/atom+xml" title="Atom 0.3" href="http://www.beacosta.com/blog/?feed=atom">
<link rel="pingback" href="http://www.beacosta.com/blog/xmlrpc.php"><!--?php wp_get_archives('type=monthly&format=link'); ?-->

	<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.beacosta.com/blog/xmlrpc.php?rsd">
<script language="javascript" type="text/javascript">
<!--
		function collapseThread( theId ) {
			var comment = document.getElementById(theId);
			if(!comment)
			{
				alert("ERROR:\nThe document structure is different\nfrom what Threaded Comments expects.\nYou are missing the element '"+theId+"'");
				return;
			}
			var theBody = findBody(comment);
			if(comment.className.indexOf("collapsed") > -1) {
				comment.className = comment.className.replace(" collapsed", "");;
			} else {
				comment.className += " collapsed";
			}
		}

		function expandThread( theId ) {
			var comment = document.getElementById(theId);
			if(!comment)
			{
				alert("ERROR:\nThe document structure is different\nfrom what Threaded Comments expects.\nYou are missing the element '"+theId+"'");
				return;
			}
			var theBody = findBody(comment);
			if(comment.className.indexOf("collapsed") > -1) {
				comment.className = comment.className.replace(" collapsed", "");;
			} 
		}
		
		function findBody(el)
		{
			var divs = el.getElementsByTagName("div");
			var ret;
			for(var i = 0; i < divs.length; ++i) {
				if(divs.item(i).className.indexOf("body") > -1)
					return divs.item(i);
			}
			return false;
		}
	
		function onAddComment() {
			//checkDocumentIntegrity();
			var el = document.getElementById("commentform");
			// Future release: Check if form is filled correctly and mark the form fields.
			el.submit();
		}
		
		function moveAddCommentBelow(theId, threadId, collapse)
		{
			expandThread( theId );
			var addComment = document.getElementById("addcomment");
			if(!addComment)
			{
			  	alert("ERROR:\nThreaded Comments can't find the 'addcomment' div.\nThis is probably because you have changed\nthe comments.php file.\nMake sure there is a tag around the form\nthat has the id 'addcomment'"); 
				return
			}
			var comment = document.getElementById(theId);
			if(collapse)
			{
				for(var i = 0; i < comment.childNodes.length; ++i) {
					var c = comment.childNodes.item(i);
					if(typeof(c.className) == "string" && c.className.indexOf("collapsed")<0) {
						c.className += " collapsed";
					}
				}
			}
			addComment.parentNode.removeChild(addComment);

			comment.appendChild(addComment);
			if(comment.className.indexOf("alt")>-1) {
				addComment.className = addComment.className.replace(" alt", "");					
			} else {
				addComment.className += " alt";
			}
		        var replyId = document.getElementById("comment_reply_ID");
			if(replyId == null)
			{
				alert("Brians Threaded Comments Error:\nThere is no hidden form field called\n'comment_reply_ID'. This is probably because you\nchanged the comments.php file and forgot\nto include the field. Please take a look\nat the original comments.php and copy the\nform field over.");
			}
			replyId.value = threadId;
			var reRootElement = document.getElementById("reroot");
			if(reRootElement == null)
			{
				alert("Brians Threaded Comments Error:\nThere is no anchor tag called 'reroot' where\nthe comment form starts.\nPlease compare your comments.php to the original\ncomments.php and copy the reroot anchor tag over.");
			}
			reRootElement.style.display = "block";
			var aTags = comment.getElementsByTagName("A");
			var anc = aTags.item(0).id;
			//document.location.href = "#"+anc;
			document.getElementById("comment").focus();
		}

		function checkDocumentIntegrity()
		{
			str = "";
			
			str += checkElement("reroot","div tag");
			str += checkElement("addcomment", "div tag");
			str += checkElement("comment_reply_ID", "hidden form field");
			str += checkElement("content", "div tag");
			str += checkElement("comment", "textfield");
			str += checkElement("addcommentanchor", "anchor tag");
			
			if(str != "")
			{
				str = "Brian's Threaded Comments are missing some of the elements that are required for it to function correctly.\nThis is probably the because you have changed the original comments.php that was included with the plugin.\n\nThese are the errors:\n" + str;
				str += "\nYou should compare your comments.php with the original comments.php and make sure the required elements have not been removed.";

				alert(str);
			}
		}
               
		function checkElement(theId, elDesc)
		{
			var el = document.getElementById(theId);
			if(!el)
			{
				if(elDesc == null)
					elDesc = "element";
				return "- The "+elDesc+" with the ID '" +theId + "' is missing\n"; 
			}
			else 
				return "";
		}
		
		function reRoot()
		{
			var addComment = document.getElementById("addcomment");			
			var reRootElement = document.getElementById("reroot");
			reRootElement.style.display = "none";
			var content = document.getElementById("content");
			addComment.parentNode.removeChild(addComment);
			content.appendChild(addComment);
			addComment.className = addComment.className.replace(" alt", "");
			document.location.href = "#addcommentanchor";
			document.getElementById("comment").focus();				
			document.getElementById("comment_reply_ID").value = "0";
		}			
		
		function changeCommentSize(d)
		{
			var el = document.getElementById("comment");
			var height = parseInt(el.style.height);
			if(!height && el.offsetHeight)
				height = el.offsetHeight;
			height += d;
			if(height < 20) 
				height = 20;
			el.style.height = height+"px";
		}		
-->
</script>
<style type="text/css">
.comment 
{
	position: 				relative;
	margin:					3px;
	margin-top:				6px;
/*	border: 				1px solid #666; */
	padding:				4px 4px 4px 8px;
	background-color:		#fff;
}

.odd
{
	background-color: #f8f8f8;
}

.comment div {
	position: 				relative;
}

.comment .comment img
{
	margin: 				0px;
}

.comment .collapseicon 
{
	width: 					13px;
	height: 				13px;
	overflow:				hidden;
	background-image: 		url(http://www.beacosta.com/blog/wp-content/plugins/briansthreadedcomments.php?image=subthread-open.png);
}

.collapsed .collapseicon 
{
	background-image: 		url(http://www.beacosta.com/blog/wp-content/plugins/briansthreadedcomments.php?image=subthread.png);
}


.comment .reply {
	text-align: 			right;
	font-size: 				80%;
	padding: 				0px 6px 6px 0px;
}

.comment
{
	border: 	1px solid #ddd;
	margin-top: 			10px;
}

input#subscribe
{
	width: auto;
}

.comment .body .content
{
	padding:				0px 3px 0px 3px;
	width: 					100%;	
	overflow: 				auto; 
}

.comment .title abbr
{
	border: none;
}

.collapsed .body, .collapsed .comment
{
	display:				none;
}
/*
#addcomment small, #addcomment div
{
	padding:				3px;
}
*/
#commentform textarea {
	width: 97%;
}
</style><!-- End Feed and Ping URLS--></head><body>
	<div id="container">
		<div id="banner">
			<h1><a accesskey="1" href="http://www.beacosta.com/blog" title="Beatriz Costa">Beatriz Costa</a></h1>
			<h2 title="WPF Data Binding">WPF Data Binding</h2>
		</div>
		
		<div id="center">
			<div class="content">
								<div class="post">
					<div class="date">November 22, 2006</div>
					<h2 id="post-38"><a id="postTitle" href="http://www.beacosta.com/blog/?p=38" rel="bookmark" title="What is the difference between… ?">What is the difference between… ?</a></h2>
					<p><span id="text">I
had a blast at TechEd. After a few years working on WPF, it’s very
rewarding to see people’s excitement when they discover all the
features we offer. The high point of the conference for me (apart from
several detours to the Belgian chocolate fountain, yum….) was <a href="http://www.interact-sw.co.uk/iangblog/">Ian Griffiths</a>‘
presentation on data binding. If you haven’t seen Ian speak, you’re
missing out! His presentation was well prepared, well delivered and
technically accurate. I was also very excited to see that the WPF’s
labs were incredibly popular, so popular in fact that half way through
the conference the number of machines assigned to WPF was doubled. <img src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/icon_smile.gif" alt=":)" class="wp-smiley"> </span></p>
<p><span id="text">Now, back to the rainy weather… sigh…</span></p>
<p><span id="text">Today I will answer a few simple questions that I
get asked repeatedly. There are some concepts in WPF data binding that
are similar enough that users become easily confused. If there are
other concepts that you think should have made this list, please leave
a comment and I’ll cover them in my next post.</span></p>
<p><span id="text"><b>What is the difference between CollectionView and CollectionViewSource?</b></span></p>
<p><span id="text">The short answer is that CollectionView is a view and CollectionViewSource is not. </span></p>
<p><span id="text">Every time you bind an ItemsControl directly to a
collection, we create a view on top of that collection and bind to the
view instead. You can think of a view as a list of pointers to the
source collection. Views make it possible to perform four operations on
bound collections: sorting, filtering, grouping and tracking the
current item. Creating an intermediate object to handle these
operations may seem like unnecessary overhead, but it’s important to
guarantee that the original data remains intact. Imagine the problems
that could occur without view objects if two different parts of the UI
were bound to the same collection but with different sorting and
filtering.</span></p>
<p><span id="text">So, what is the type of that view object? At the
very minimum, it needs to implement ICollectionView. CollectionView is
the base implementation we provide for this interface, and it’s also
the view type we create when the source collection implements
IEnumerable and nothing else. CollectionView is the base class for two
other interesting view classes: BindingListCollectionView, which we
create when the source collection implements IBindingList, and
ListCollectionView, which is created when the source collection
implements IList. I talked about views in a bit more detail <a href="http://www.beacosta.com/2006/04/how-can-i-add-my-own-sorting-logic.html">in an earlier post</a>.</span></p>
<p><span id="text">CollectionViewSource is *not* a view. We designed this class for three reasons:</span></p>
<p><span id="text">- We wanted to allow users to create a custom view
and be able to tell us to use that view without the use of code (all in
markup). I may show how this can be done in a future post (is this a
topic of interest?).</span></p>
<p><span id="text">- We wanted to allow users to do simple sorting and grouping without using code. You can see a sample with this scenario <a href="http://www.beacosta.com/2006/01/how-do-i-sort-groups-of-data-items.html">in this earlier post</a>.</span></p>
<p><span id="text">- We wanted to have a container for all methods and
properties related to view operations. I’m not sure where they lived
before we had this class — possibly in BindingOperations — but I do
remember realizing that users had a hard time finding them.</span></p>
<p><span id="text">CollectionViewSource has a Source property that
should be set to the source collection and a read-only View property
that returns a handle to the view we create over that collection. If we
set the Source property of a Binding to a CollectionViewSource, the
binding engine is smart enough to understand that most of the time we
really want to bind to the view, so it binds to its View property
instead. (If this is not what you want, you can set the
BindsDirectlyToSource property of Binding to true.) I believe this is
the reason why people tend to think that CollectionViewSource is a
view. Also, the name is probably a bit misleading.</span></p>
<p><span id="text">In summary, you can think of CollectionViewSource as
an intermediate class that has a pointer to the source collection and
another one to the corresponding view, and that offers the advantages I
mentioned above. A CollectionView is simply the base class for all view
types we ship in WPF.</span></p>
<p><span id="text"><b>What is the difference between Binding and TemplateBinding?</b></span></p>
<p><span id="text">Binding provides much more flexibility than
TemplateBinding, but it’s more costly. TemplateBinding is limited to
one scenario but very efficient in what it does. </span></p>
<p><span id="text">Everytime you want to bind to a property of an
element from within its template, you should consider using a
TemplateBinding. For example, consider the following scenario:</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;&lt;Window x:Class="CommonQuestions.Window1"<br>
&nbsp;&nbsp;&nbsp;&nbsp;    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"<br>
&nbsp;&nbsp;&nbsp;&nbsp;    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"<br>
&nbsp;&nbsp;&nbsp;&nbsp;    Title="CommonQuestions" Height="300" Width="300"<br>
&nbsp;&nbsp;&nbsp;&nbsp;    &gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Window.Resources&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ControlTemplate
TargetType="{x:Type Button}" x:Key="buttonTemplate"&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Border
BorderBrush="{TemplateBinding Property=Background}" BorderThickness="3"
&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ContentPresenter
Margin="10"/&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Border&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ControlTemplate&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Window.Resources&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;StackPanel Margin="20"&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Button
Template="{StaticResource buttonTemplate}" HorizontalAlignment="Center"
Background="SteelBlue"&gt;Hello&lt;/Button&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/StackPanel&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Window&gt;</span></p>
<p><span id="text">In this case, I want the BorderBrush property of
Border to be whatever color is specified in the Button’s Background.
This is exactly the scenario that TemplateBinding is optimized for.
Instead of the TemplateBinding in this snippet, you could use the
following Binding: {Binding RelativeSource={RelativeSource
TemplatedParent}, Path=Background}. The resulting behavior would be the
same, but this is not as efficient, and it’s quite a bit more complex
to write, so TemplateBinding is the preferred approach. TemplateBinding
also allows you to specify a Converter and a ConverterParameter, which
increases the scope of the supported scenarios quite a bit. However, a
TemplateBinding can only transfer data in one direction: from the
templated parent to the element with the TemplateBinding. If you need
to transfer data in the opposite direction or both ways, a Binding with
RelativeSource of TemplatedParent is your only option. For example,
interaction with a TextBox or Slider within a template will only change
a property on the templated parent if you use a two-way Binding.</span></p>
<p><span id="text">In summary: if you want a one-way binding from
within a template to a property of its templated parent, use
TemplateBinding. For all other scenarios, or for extra flexibility in
this last scenario, use Binding.</span></p>
<p><span id="text"><b>What is the difference between ContentPresenter and ContentControl?</b></span></p>
<p><span id="text">If you look at these two classes in <a href="http://www.aisto.com/roeder/dotnet/">reflector</a>, you will notice the main difference between them: ContentControl derives from Control, and ContentPresenter doesn’t. </span></p>
<p><span id="text">ContentControl is a control that knows how to
display content. If you’ve been reading my blog, you’re probably
familiar with ItemsControl by now, which is a control that knows how to
display a collection of data. ContentControl is the equivalent to
ItemsControl, but it is used to display non-collections instead. Some
classic examples of controls that derive from ContentControl are Button
and Label. Its most important property is the Content
DependencyProperty, of type object.</span></p>
<p><span id="text">ContentPresenter is an element that is useful inside
the template of a ContentControl, and is used to specify where you want
its content to be placed. For example, in the markup above I placed a
ContentPresenter inside the Border because I want the Content of the
Button (”Hello”) to appear inside the Border. If you remove the
ContentPresenter, you will notice that “Hello” is no longer displayed.
If you add elements before or after, you will notice that “Hello” will
show up in the location where the ContentPresenter is placed in the
layout pass.</span></p>
<p><span id="text">The ContentPresenter tag in the markup above is equivalent to the following:</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;&lt;ContentPresenter
Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding
ContentTemplate}" ContentTemplateSelector="{TemplateBinding
ContentTemplateSelector}" Margin="10"/&gt;</span></p>
<p><span id="text">A long time ago, you had to be explicit about where
the Content, ContentTemplate and ContentTemplateSelector properties
came from. We decided to make this implicit because we realized this is
what people want most of the time. If, for some reason, you don’t want
to use the Content of your ContentControl in its template, and want to
use some other data instead, you can set the Content property of the
ContentPresenter explicitly. For example, try replacing the
ContentPresenter in the markup above with the following:</span></p>
<p><span id="code">&nbsp;&nbsp;&nbsp;&nbsp;&lt;ContentPresenter Content="{TemplateBinding Background}" Margin="10"/&gt;</span></p>
<p><span id="text">You will notice that the Button will display “#FF4682B4″ instead of “Hello”, even though we set its Content property to “Hello”.</span></p>
<p><span id="text">In summary: ContentControl is a control that uses a
template to display a single piece of content, and ContentPresenter is
used to specify where the content should go in the ContentControl’s
template.</span></p>
										<p class="posted">Posted by <a href="http://www.beacosta.com/blog/?author=1" title="Posts by Bea">Bea</a> under <a href="http://www.beacosta.com/blog/?cat=2" title="View all posts in WPF Data Binding" rel="category">WPF Data Binding</a> |   </p>
				</div>				
				<!-- <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
				xmlns:dc="http://purl.org/dc/elements/1.1/"
				xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
			<rdf:Description rdf:about="http://www.beacosta.com/blog/?p=38"
    dc:identifier="http://www.beacosta.com/blog/?p=38"
    dc:title="What is the difference between&#8230; ?"
    trackback:ping="http://www.beacosta.com/blog/wp-trackback.php?p=38" />
</rdf:RDF>	-->
				
<!-- You can start editing here. -->

<p><a href="http://www.beacosta.com/blog/?feed=rss2&amp;p=38"><abbr title="Really Simple Syndication">RSS</abbr> feed</a> 
| <a href="http://www.beacosta.com/blog/wp-trackback.php?p=38">Trackback <acronym title="\&quot;Uniform" resource="" identifier\="">URI</acronym></a>
</p>

<h2 id="comments">11 Comments 
<a href="#postcomment" title="Leave a comment">»</a>
</h2>
<div class="commentlist">
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-53" class="comment">
				<a name="comment-53" id="comment-53"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-53")'>
					<cite>Comment by Vivek<a href="#comment-53"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-11-23 13:36:07 						
					</div>					
					<div class="content">
						<p>Any idea if MediaElement can play Mpeg or Avi files?<br>
WMV looks good when the window is small, but for windows of bigger sizes its awful?</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-53", 53, true); return false;'>Reply to this comment</a>
											</div>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-55" class="comment odd">
				<a name="comment-55" id="comment-55"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-55")'>
					<cite>Comment by Bea<a href="#comment-55"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-11-24 13:08:30 						
					</div>					
					<div class="content">
						<p>Vivek,<br>
For non-data binding WPF questions, please post in our <a href="http://forums.microsoft.com/MSDN/ShowForum.aspx?ForumID=119&amp;SiteID=1" rel="nofollow">forum</a>.<br>
Thanks,<br>
Bea</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-55", 55, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-56" class="comment">
				<a name="comment-56" id="comment-56"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-56")'>
					<cite>Comment by Kent boogaart<a href="#comment-56"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-11-24 06:46:53 						
					</div>					
					<div class="content">
						<p>&gt; is this a topic of interest?</p>
<p>You’ve got my vote.</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-56", 56, true); return false;'>Reply to this comment</a>
											</div>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-57" class="comment odd">
				<a name="comment-57" id="comment-57"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-57")'>
					<cite>Comment by Bea<a href="#comment-57"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-11-25 13:09:47 						
					</div>					
					<div class="content">
						<p>Hi Kent,<br>
Thanks for the feedback. I will write about that then.<br>
Bea</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-57", 57, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-58" class="comment">
				<a name="comment-58" id="comment-58"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-58")'>
					<cite>Comment by Al<a href="#comment-58"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-11-25 16:07:35 						
					</div>					
					<div class="content">
						<p>Bea,</p>
<p>I think a lot of your examples are ok, but they really aren’t how the real world works, at least for me anyway.</p>
<p>For example, although my data comes to me in an xml format, it gets
parsed and placed into an object. My binding needs to take place in
code because each call for data can have a different number of columns,
which will be unknown until I receive the data. I have a requirement
for textboxes in each column header to act as input for a filter. Each
row needs a checkbox that not only is bound to the ListViewItem’s
IsSelected property but also bound to the data source. And on top of
all of this is a very complex architecture that leaves everything
loosely coupled.</p>
<p>So I guess what I am asking for is better examples. Show us not only
how to bind with xaml, but in code as well. Show us observable
collections with dynamic properties. Show us how to bind a checkbox to
a ListViewItem’s IsSelected property _and_ to a property in the data
source (my current problem that needs resolution).</p>
<p>Thanks,<br>
Al</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-58", 58, true); return false;'>Reply to this comment</a>
											</div>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-59" class="comment odd">
				<a name="comment-59" id="comment-59"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-59")'>
					<cite>Comment by Bea<a href="#comment-59"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-11-26 09:10:25 						
					</div>					
					<div class="content">
						<p>Al,</p>
<p>Thanks for your feedback. I agree that real world apps are much more
complex than the simple samples you find in my blog. But at the same
time, all these samples are based on questions I received from
customers that, like you, are writing big real world apps. I will be
happy to write a sample that addresses the particular difficulties you
are encountering while writing your app.</p>
<p>Replying to the scenarios you mentioned:</p>
<p>- I can certainly write my bindings in code in my next sample.<br>
- Can you explain what you mean by dynamic properties in ObservableCollections? Are you using WPF’s property system?<br>
- Anytime you want to bind to more than one source at a time, you should use MultiBinding. You can find a MultiBinding sample <a href="http://www.beacosta.com/2006/09/how-can-i-control-color-using-sliders.html" rel="nofollow">here</a>. Let me know if this solves your problem.</p>
<p>Thanks,<br>
Bea</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-59", 59, true); return false;'>Reply to this comment</a>
											</div>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-60" class="comment">
				<a name="comment-60" id="comment-60"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-60")'>
					<cite>Comment by Al<a href="#comment-60"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-12-11 00:26:38 						
					</div>					
					<div class="content">
						<p>Hi Bea,</p>
<p>I’m sorry it’s taken so long to get back to you. In a static
situation, the observable collection would have a set of properties
that you would then map to each column in a list view, something like
Name, Age, and Height for example. And that’s great for a static view.
The data I work with isn’t static. I have one list view and when the
data is returned it may have one column of data or ten, depending on
the call being made. My list view needs to be able to handle the
additional (or lack) of columns without resorting to hard-code
properties (i.e., Name, Age, etc). I mean, I could have set of
properties named Column1, Column2, etc, but that’s pretty kludgy. The
solution to this problem was (and I’m not sure I completely understand
everything) to create some classes to generate some custom properties
for a collection utilizing the TypeDescriptionProvider,
CustomTypeDescriptor and PropertyDescriptor classes. This creates a
dynamic, custom set of properties for the collection so I can map my
collection to the each column in the list view. As far as the
MultiBinding example goes, try this. Use the example in the SDK for
having a checkbox on a ListViewItem (How to: Create ListViewItems with
a CheckBox). Bind the list view to an observable collection and
additionally bind the checkbox checked state to a boolean in the
observable collection. Show us the example with xaml and code. There is
a definite lack of coding examples for Binding/MultiBinding in code and
a few good examples would go a long way to help and for understanding.</p>
<p>Thanks,<br>
Al</p>
					</div>
				<small>(Comments wont nest below this level)</small>
				</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-61" class="comment odd">
				<a name="comment-61" id="comment-61"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-61")'>
					<cite>Comment by Bea<a href="#comment-61"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-12-12 11:05:40 						
					</div>					
					<div class="content">
						<p>Hi Al,</p>
<p>Ah, yes, I understand your scenario with the dynamic properties and
yes, CustomTypeDescriptor is the best solution. I added this topic to
my list, so I will talk about it in a future post (not in the next one,
since I have other topic requests before this one.) </p>
<p>I have one question about your ListView scenario. Are the CheckBoxes
in the ListViewItems bound to one single property in the
ObservableCollection, meaning they’re all checked or all unchecked? Or
are they bound to a property on the items added to the
ObservableCollection, which means some of them could be checked and
others unchecked? From your description, it seems like you’re asking
for the first, but I would expect the second one to be a more useful
scenario. </p>
<p>Thanks,<br>
Bea</p>
					</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-62" class="comment odd">
				<a name="comment-62" id="comment-62"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-62")'>
					<cite>Comment by Al<a href="#comment-62"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2006-12-13 16:59:41 						
					</div>					
					<div class="content">
						<p>Bea,</p>
<p>It is the latter. The checkboxes are bound to a property on the
items added to the ObservableCollection, so some checkboxes are
unchecked and some are checked.</p>
<p>Al</p>
					</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>

					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-60", 60, false); return false;'>Reply here</a>
											</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-63" class="comment">
				<a name="comment-63" id="comment-63"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-63")'>
					<cite>Comment by Peter Kellner<a href="#comment-63"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2007-08-30 07:11:44 						
					</div>					
					<div class="content">
						<p>Is there someway with blend to work with templates? I end up cutting and pasting a lot and it gets kind of confusing.</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-63", 63, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
			<div style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="div-comment-352" class="comment">
				<a name="comment-352" id="comment-352"></a>
				<div class="title">
					<img class="collapseicon" src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/briansthreadedcomments.png" onclick='collapseThread("div-comment-352")'>
					<cite>Comment by Bea<a href="#comment-352"></a></cite> 
														
				</div>
				<div class="body">
					<div class="meta">
						2007-09-17 21:47:48 						
					</div>					
					<div class="content">
						<p>Hi Peter,</p>
<p>Unfortunately I am not an expert in Blend. There is a <a href="http://www.microsoft.com/communities/newsgroups/en-us/default.aspx?dg=microsoft.public.expression.interactivedesigner&amp;cat=&amp;lang=en&amp;CR=US" rel="nofollow">forum</a> where you can ask Blend questions - there are typically people from the Blend team watching the questions and replying.</p>
<p>I hope you can find answers to your questions there.</p>
<p>Thanks,<br>
Bea</p>
					</div>
					<div class="reply">
						 
						<a href="#" onclick='moveAddCommentBelow("div-comment-352", 352, true); return false;'>Reply to this comment</a>
											</div>
				</div>
					

			</div>
			<!-- This has to be here because of Internet Explorers plethora of layout bugs -->
			<div style="overflow: hidden; height: 1px;">&nbsp;</div>
</div>
<div id="addcomment" class="comment" style="background: rgb(64, 64, 64) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">
<a id="addcommentanchor" name="addcommentanchor"></a>
<form action="http://www.beacosta.com/blog/wp-comments-post.php" method="post" id="commentform">
<div class="add">
	<div id="reroot" style="display: none;">
		<small><a href="#" onclick="reRoot(); return false;">
			Click here to cancel "reply".
		</a></small>
	</div>
	<small>
		Name (required)	</small>
	<div>
		<input name="author" id="author" class="textarea" value="" size="28" tabindex="1" type="text">
	</div>
	<small>
		E-mail (required - never shown publicly)	</small>
	<div>
		<input name="email" id="email" value="" size="28" tabindex="2" type="text">
	</div>
	<small>
		<acronym title="Uniform Resource Identifier">URI</acronym>	</small>
	<div>
		<input name="url" id="url" value="" size="28" tabindex="3" type="text">	
	<div style="display: block;" id="secureimgdiv">
				<p><label for="securitycode">Anti-spam word: (Required)</label><span style="color: rgb(255, 0, 0);">*</span><br>
				<small>To
prove you're a person (not a spam script), type the security word shown
in the picture. Click on the picture to hear an audio file of the word.</small><br>
				<input name="securitycode" id="securitycode" size="30" tabindex="4" type="text">
				<input name="matchthis" value="1448" type="hidden">
				<a href="http://www.beacosta.com/blog?audioselect=1448" title="Hear an audio file of the anti-spam image"><img src="Beatriz%20Costa%20%BB%20What%20is%20the%20difference%20between%85_files/blog.jpg" alt="Click to hear an audio file of the anti-spam word" style="border: 1px solid black; vertical-align: top; height: 50px; width: 160px;"></a></p>
			</div></div>

	<small>
		Your Comment (<a href="#" onclick="changeCommentSize(-80); return false;">smaller size</a> | <a href="#" onclick="changeCommentSize(80); return false;">larger size</a>)
	</small>
	<div style="width: 100%;">
		<textarea name="comment" id="comment" cols="60" rows="14" tabindex="4"></textarea>
	</div>
	<small>
You may use &lt;a href="" title=""&gt; &lt;abbr title=""&gt;
&lt;acronym title=""&gt; &lt;b&gt; &lt;blockquote cite=""&gt;
&lt;code&gt; &lt;em&gt; &lt;i&gt; &lt;strike&gt; &lt;strong&gt; in your
comment. </small>
	<div>
		<input name="comment_post_ID" value="38" type="hidden">
		<input name="redirect_to" value="/blog/?p=38" type="hidden">
		<input onclick="if(typeof(onAddComment) == 'function') { onAddComment(); } else { alert('ERROR:\nIt looks like the website administrator hasn\'t activated the Brians Threaded Comments plugin from the plugin page'); };" name="addcommentbutton" id="addcommentbutton" value="Add comment" tabindex="5" type="button">
	</div>
</div>
<input id="comment_reply_ID" name="comment_reply_ID" value="0" type="hidden"><div style="display: none;" id="jsspamblock_hideable">
	<input name="jsspamblock_hidden" value="6ca2029113f6030817597204942c1c13" type="hidden">
	<p>For spam filtering purposes, please copy the number <strong>9831</strong> to the field below:</p>
	<input name="jsspamblock_input" id="jsspamblock_input" tabindex="5" value="">
</div>
<script type="text/javascript">
	document.getElementById("jsspamblock_input").value = 9831;
	document.getElementById("jsspamblock_hideable").style.display = "none";
</script>
			
			<script language="JavaScript" type="text/javascript">
			<!--
				var urlinput = document.getElementById("url");
				var submitp = urlinput.parentNode;
				var substitution2 = document.getElementById("secureimgdiv");
				submitp.appendChild(substitution2, urlinput);
			// -->
			</script>
</form>
</div>
						
								
				<p></p><div align="center"></div>						
			</div>
		</div>
		<div id="right">
		<div class="sidebar">  
    <!-- Meta -->
	<h2>Meta:</h2>
 	<ul class="noli">
	<li><a href="http://feeds.feedburner.com/BeatrizCosta" title="Syndicate this site using RSS"><abbr title="Really Simple Syndication">RSS</abbr></a></li>
	<li><a href="http://feeds.feedburner.com/CommentsForBeatrizCosta" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
	</ul>				

  <!-- Search -->
  <h2>Search</h2>
	<br>
	<form id="searchform" method="get" action="">
	<input name="s" id="s" size="15" type="text">
	<input name="submit" value="Search" type="submit">
	</form>

  <!-- Categories -->
  <h2>Categories</h2>
	<ul class="menu">
		<li><a href="http://www.beacosta.com/blog/?cat=3" title="View all posts filed under General">General</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=2" title="View all posts filed under WPF Data Binding">WPF Data Binding</a>
	<ul class="children">
	<li><a href="http://www.beacosta.com/blog/?cat=12" title="View all posts filed under Binding to ADO.NET">Binding to ADO.NET</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=14" title="View all posts filed under ListBox">ListBox</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=9" title="View all posts filed under ListView">ListView</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=10" title="View all posts filed under Master-detail">Master-detail</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=13" title="View all posts filed under Sorting, filtering, grouping">Sorting, filtering, grouping</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=11" title="View all posts filed under Styles and Templates">Styles and Templates</a>
</li>
	<li><a href="http://www.beacosta.com/blog/?cat=7" title="View all posts filed under TreeView">TreeView</a>
</li>
	</ul>
</li>
	</ul>					
	
  <!-- Archives -->
	<h2>Archives</h2>
	<ul>
		<li><a href="http://www.beacosta.com/blog/?m=200709" title="September 2007">September 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200708" title="August 2007">August 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200705" title="May 2007">May 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200704" title="April 2007">April 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200701" title="January 2007">January 2007</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200611" title="November 2006">November 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200610" title="October 2006">October 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200609" title="September 2006">September 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200608" title="August 2006">August 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200607" title="July 2006">July 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200606" title="June 2006">June 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200605" title="May 2006">May 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200604" title="April 2006">April 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200603" title="March 2006">March 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200602" title="February 2006">February 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200601" title="January 2006">January 2006</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200512" title="December 2005">December 2005</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200511" title="November 2005">November 2005</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200510" title="October 2005">October 2005</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200509" title="September 2005">September 2005</a></li>
	<li><a href="http://www.beacosta.com/blog/?m=200508" title="August 2005">August 2005</a></li>
	</ul>

</div>			<div id="footer">
				<div class="copyright">
				<small>
				<span class="copy">Copyright © 2007 				<strong><a title="Beatriz Costa" href="http://www.beacosta.com/blog">Beatriz Costa</a>
				</strong>
				</span>
				<br><br>
				</small>
				</div>
			</div>	
		</div>
	</div>
</body></html>
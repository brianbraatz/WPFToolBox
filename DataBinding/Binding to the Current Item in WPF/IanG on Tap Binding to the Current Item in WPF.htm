<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0062)http://www.interact-sw.co.uk/iangblog/2007/09/03/bindtocurrent -->
<HTML xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>IanG on Tap: Binding to the Current Item in WPF</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8">
<META content="Ian Griffiths' Weblog" name=description><LINK id=ctl00_rssLink 
title=RSS href="../../../../rss2.0" type=application/rss+xml rel=alternate><LINK 
href="IanG on Tap Binding to the Current Item in WPF_files/blog.css" 
type=text/css rel=stylesheet>
<META content="MSHTML 6.00.2900.3199" name=GENERATOR></HEAD>
<BODY>
<DIV class=blogTitle>
<H1>IanG on Tap</H1>
<P id=ctl00_subtitle><A href="http://www.interact-sw.co.uk/iangblog/">Ian 
Griffiths in Weblog Form</A> (<A 
href="http://www.interact-sw.co.uk/iangblog/rss2.0">RSS 2.0</A>)</P></DIV>
<DIV class=blogRightColumn>
<SCRIPT type=text/javascript><!--
google_ad_client = "pub-5895148714260970";
google_ad_width = 234;
google_ad_height = 60;
google_ad_format = "234x60_as";
google_ad_type = "text_image";
//2007-05-08: IanG Blog
google_ad_channel = "1140968575";
google_color_border = "336699";
google_color_bg = "FFFFFF";
google_color_link = "0000FF";
google_color_text = "000000";
google_color_url = "008000";
//-->
</SCRIPT>

<SCRIPT src="IanG on Tap Binding to the Current Item in WPF_files/show_ads.js" 
type=text/javascript>
</SCRIPT>

<DIV class=blogNav>
<H3>Blog Navigation</H3>
<TABLE>
  <TBODY>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/10/">October 
      (2007)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/09/">September 
      (2007)</A></P></TD>
    <TD>
      <P>(3 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/08/">August 
      (2007)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/07/">July 
      (2007)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/06/">June 
      (2007)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/05/">May 
      (2007)</A></P></TD>
    <TD>
      <P>(8 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/04/">April 
      (2007)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/03/">March 
      (2007)</A></P></TD>
    <TD>
      <P>(7 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/02/">February 
      (2007)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2007/01/">January 
      (2007)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/11/">November 
      (2006)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/10/">October 
      (2006)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/09/">September 
      (2006)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/06/">June 
      (2006)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/05/">May 
      (2006)</A></P></TD>
    <TD>
      <P>(4 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/04/">April 
      (2006)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/03/">March 
      (2006)</A></P></TD>
    <TD>
      <P>(5 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2006/01/">January 
      (2006)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/12/">December 
      (2005)</A></P></TD>
    <TD>
      <P>(3 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/11/">November 
      (2005)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/10/">October 
      (2005)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/09/">September 
      (2005)</A></P></TD>
    <TD>
      <P>(8 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/08/">August 
      (2005)</A></P></TD>
    <TD>
      <P>(7 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/06/">June 
      (2005)</A></P></TD>
    <TD>
      <P>(3 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/05/">May 
      (2005)</A></P></TD>
    <TD>
      <P>(7 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/04/">April 
      (2005)</A></P></TD>
    <TD>
      <P>(6 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/03/">March 
      (2005)</A></P></TD>
    <TD>
      <P>(1 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/02/">February 
      (2005)</A></P></TD>
    <TD>
      <P>(2 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2005/01/">January 
      (2005)</A></P></TD>
    <TD>
      <P>(5 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/12/">December 
      (2004)</A></P></TD>
    <TD>
      <P>(5 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/11/">November 
      (2004)</A></P></TD>
    <TD>
      <P>(7 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/10/">October 
      (2004)</A></P></TD>
    <TD>
      <P>(3 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/09/">September 
      (2004)</A></P></TD>
    <TD>
      <P>(7 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/08/">August 
      (2004)</A></P></TD>
    <TD>
      <P>(16 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/07/">July 
      (2004)</A></P></TD>
    <TD>
      <P>(10 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/06/">June 
      (2004)</A></P></TD>
    <TD>
      <P>(27 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/05/">May 
      (2004)</A></P></TD>
    <TD>
      <P>(15 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/04/">April 
      (2004)</A></P></TD>
    <TD>
      <P>(15 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/03/">March 
      (2004)</A></P></TD>
    <TD>
      <P>(13 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/02/">February 
      (2004)</A></P></TD>
    <TD>
      <P>(16 items)</P></TD></TR>
  <TR>
    <TD>
      <P><A href="http://www.interact-sw.co.uk/iangblog/2004/01/">January 
      (2004)</A></P></TD>
    <TD>
      <P>(15 items)</P></TD></TR></TBODY></TABLE>
<P id=ctl00_ctl01_pBlogHome><A 
href="http://www.interact-sw.co.uk/iangblog/">Blog Home</A></P>
<P id=ctl00_ctl01_pBlogRss><A 
href="http://www.interact-sw.co.uk/iangblog/rss2.0">RSS 2.0</A></P>
<H3>Writing</H3>
<P><A href="http://www.oreilly.com/catalog/9780596510374/">Programming 
WPF</A></P>
<P><A href="http://www.oreilly.com/catalog/netwinformian/">.NET Windows Forms in 
a Nutshell</A></P>
<P><A href="http://www.oreilly.com/catalog/mastvsnet/">Mastering Visual Studio 
.NET</A></P>
<H3>Other Sites</H3>
<P><A href="http://www.interact-sw.co.uk/">Interact Software</A></P></DIV></DIV>
<DIV class=blogBody>
<HR>

<H2>Binding to the Current Item in WPF - <SPAN class=blogDate>Monday 3 
September, 2007, 11:17 PM </SPAN></H2>
<DIV class=blogitem>
<P>When working with collection-like data sources in WPF, you can read 
properties of the selected item by writing your binding expressions as though 
there were only one source object. Here’s an example:</P><PRE><SPAN style="COLOR: blue">&lt;</SPAN><SPAN style="COLOR: brown">DockPanel</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">DataContext</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{x:Static Fonts.SystemFontFamilies}</SPAN>"<SPAN style="COLOR: blue">&gt;</SPAN>
<SPAN style="COLOR: blue">  </SPAN><SPAN style="COLOR: blue">&lt;</SPAN><SPAN style="COLOR: brown">TextBlock</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">DockPanel.Dock</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">Top</SPAN>"
            <SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">Text</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding Baseline}</SPAN>"<SPAN style="COLOR: blue"> /&gt;</SPAN>
<SPAN style="COLOR: blue">  </SPAN><SPAN style="COLOR: blue">&lt;</SPAN><SPAN style="COLOR: brown">ListBox</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">ItemsSource</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding}</SPAN>"
          <SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">IsSynchronizedWithCurrentItem</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">True</SPAN>"<SPAN style="COLOR: blue"> /&gt;</SPAN>
<SPAN style="COLOR: blue">&lt;/</SPAN><SPAN style="COLOR: brown">DockPanel</SPAN><SPAN style="COLOR: blue">&gt;</SPAN>
</PRE>
<P>The data source here is a collection – an array of <CODE>FontFamily</CODE> 
objects. The <CODE>ListBox</CODE> displays all of the items in this array. 
However, the <CODE>TextBlock</CODE> has a binding expression that seems to make 
no sense – it tries to read the <CODE>Baseline</CODE> property, and yet the 
source, an array, has no such property. When WPF encounters a binding to a 
non-existent property on a collection, WPF has a fallback strategy: it looks for 
the named property on the current item. Consequently, the <CODE>TextBlock</CODE> 
shows the <CODE>Baseline</CODE> property of the currently selected font.</P>
<P>This is jolly useful, but what do you do in situations where fallback doesn’t 
occur? For example, suppose you want to bind to the whole of the current item. 
Usually, a <CODE>{Binding}</CODE> with no path has that effect:</P><PRE><SPAN style="COLOR: blue">&lt;</SPAN><SPAN style="COLOR: brown">TextBlock</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">DockPanel.Dock</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">Top</SPAN>"<SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">FontFamily</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding}</SPAN>"
<SPAN style="COLOR: blue">  </SPAN><SPAN style="COLOR: red">Text</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">The quick brown fox jumps over the lazy dog.</SPAN>"<SPAN style="COLOR: blue"> /&gt;</SPAN>
</PRE>
<P>However, this doesn’t work here. WPF’s alternate behaviour only kicked in for 
the <CODE>{Binding Baseline}</CODE> example because arrays don’t have 
<CODE>Baseline</CODE> properties. Conversely, <CODE>{Binding}</CODE> is 
perfectly valid for an array, so WPF sees no need to fall back to an alternative 
interpretation. Unfortunately, this ends up trying to set the 
<CODE>FontFamily</CODE> to an array of fonts, which fails. (This failure doesn’t 
trigger the fallback behaviour. That happens only if the binding cannot be 
evaluated. A binding that evaluates to an unsuitable type is insufficient.)</P>
<P>So how do we indicate that we want the current item, rather than the whole 
collection? Here’s how:</P><PRE><SPAN style="COLOR: blue">&lt;</SPAN><SPAN style="COLOR: brown">TextBlock</SPAN><SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">DockPanel.Dock</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">Top</SPAN>"<SPAN style="COLOR: blue"> </SPAN><SPAN style="COLOR: red">FontFamily</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding /}</SPAN>"
<SPAN style="COLOR: blue">  </SPAN><SPAN style="COLOR: red">Text</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">The quick brown fox jumps over the lazy dog.</SPAN>"<SPAN style="COLOR: blue"> /&gt;</SPAN>
</PRE>
<P>In case the difference isn’t leaping out at you, there’s an extra “/” in the 
binding expression.</P>
<P>This struck me as less than totally obvious. (Hence this blog.) Indeed, I 
wasn’t even confident this would work first time I tried it. However, it makes 
some sense after a bit of thought. The main thing is to understand how this 
relates to a more common syntax:</P><PRE><SPAN style="COLOR: red">Property</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding Items/Name}</SPAN>"
</PRE>
<P>This binding expression means: the <CODE>Items</CODE> property of the source 
is a collection; get the currently selected item in that collection, and read 
the <CODE>Name</CODE> property.</P>
<P>In general, leaving out a property name in a binding path indicates that you 
want the whole object rather than a specific property. For example:</P><PRE><SPAN style="COLOR: red">Property</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding Items/}</SPAN>"
</PRE>
<P>This means: the <CODE>Items</CODE> property of the source is a collection; 
return the current item from that collection. Likewise:</P><PRE><SPAN style="COLOR: red">Property</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding /Name}</SPAN>"
</PRE>
<P>This means: the source is a collection; get its current item and then return 
that item’s <CODE>Name</CODE> property. Indeed, this last form is arguably what 
we should have used earlier. The expression <CODE>{Binding /Baseline}</CODE> 
would indicate explicitly that we want the <CODE>Baseline</CODE> of the current 
object, whereas <CODE>{Binding Baseline}</CODE> relies on WPF having to guess 
that this was what we meant. One could argue that we should always use this form 
for this purpose, except the syntax looks misleadingly like some sort of file 
path or URL.</P>
<P>Having understood the two variants where we leave out one or other property 
name, it’s relatively straightforward to interpret the form with no name on 
either side.</P><PRE><SPAN style="COLOR: red">Property</SPAN><SPAN style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding /}</SPAN>"
</PRE>
<P>This means: the source is a collection; return the currently selected item in 
that collection. Or more succinctly: bind to the currently selected 
item.</P></DIV></DIV>
<DIV class=blogBody>
<HR>
<SPAN class=copyright>Copyright © 2002-2007, <A id=ctl00_homeLink 
href="http://www.interact-sw.co.uk/">Interact Software Ltd.</A> Content by <A 
href="mailto:ian@interact-sw.co.uk">Ian Griffiths</A>. Please direct all Web 
site inquiries to <A 
href="mailto:webmaster@interact-sw.co.uk">webmaster@interact-sw.co.uk</A></SPAN> 
</DIV></BODY></HTML>

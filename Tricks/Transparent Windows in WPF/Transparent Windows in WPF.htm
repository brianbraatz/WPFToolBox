<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Transparent Windows in WPF</title>


	
		
		<meta content=".Text" name="GENERATOR">
		<link id="MainStyle" type="text/css" rel="stylesheet" href="Transparent%20Windows%20in%20WPF_files/style.css">
		<link id="SecondaryCss" type="text/css" rel="stylesheet" href="Transparent%20Windows%20in%20WPF_files/customcss.css">
		<link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="http://blogs.interknowlogy.com/johnbowen/rss.aspx">
	<link rel="pingback" href="http://blogs.interknowlogy.com/johnbowen/Services/Pingback.aspx"></head><body>
		<form name="Form1" method="post" action="20458.aspx" id="Form1">
<input name="__VIEWSTATE" value="" type="hidden">
			

<div id="top">

<h1><a id="Header1_HeaderTitle" class="headermaintitle" href="http://blogs.interknowlogy.com/johnbowen/">John Bowen's Blog</a></h1>
<p id="tagline">Blog.WriteLine(new Random().NextThoughts(".NET"));<br><br><a href="http://www.katemc.com/3day/"><img src="Transparent%20Windows%20in%20WPF_files/kateBanner.png" alt="Support the 3-Day Walk for Breast Cancer"></a></p>
</div>

<div id="leftmenu">

	
<h3>My Links</h3>
<ul>
			<li><a id="MyLinks1_HomeLink" href="http://blogs.interknowlogy.com/johnbowen/">Home</a></li>
			<li><a id="MyLinks1_ContactLink" accesskey="9" href="http://blogs.interknowlogy.com/johnbowen/contact.aspx">Contact</a></li>
			<li><a id="MyLinks1_Syndication" href="http://blogs.interknowlogy.com/johnbowen/Rss.aspx">Syndication</a> <a id="MyLinks1_XMLLink" href="http://blogs.interknowlogy.com/johnbowen/Rss.aspx"><img src="Transparent%20Windows%20in%20WPF_files/xml.gif" alt="" border="0"></a>
			</li><li><a id="MyLinks1_Admin" href="http://blogs.interknowlogy.com/johnbowen/login.aspx">Login</a></li>
</ul>
	
<h3>Blog Stats</h3>
	<ul>
		<li>Posts - 14
		</li><li>Stories - 0
		</li><li>Comments - 3
		</li><li>Trackbacks - 0
	</li>
</ul>
	
<h3>News</h3>
	<ul>
	  <li><b><a href="http://gdcportal.interknowlogy.com/Pages/WindowsPresentation.aspx">Download the WPF Reference Poster</a></b></li>
	</ul>

	
		<h3>Archives</h3>
		
				<ul>
			
				<li><a id="SingleColumn1_Categories_CatList__ctl0_LinkList__ctl1_Link" href="http://blogs.interknowlogy.com/johnbowen/archive/2007/08.aspx">August, 2007 (1)</a>  </li>
			
				<li><a id="SingleColumn1_Categories_CatList__ctl0_LinkList__ctl2_Link" href="http://blogs.interknowlogy.com/johnbowen/archive/2007/06.aspx">June, 2007 (3)</a>  </li>
			
				<li><a id="SingleColumn1_Categories_CatList__ctl0_LinkList__ctl3_Link" href="http://blogs.interknowlogy.com/johnbowen/archive/2007/05.aspx">May, 2007 (3)</a>  </li>
			
				<li><a id="SingleColumn1_Categories_CatList__ctl0_LinkList__ctl4_Link" href="http://blogs.interknowlogy.com/johnbowen/archive/2007/04.aspx">April, 2007 (2)</a>  </li>
			
				<li><a id="SingleColumn1_Categories_CatList__ctl0_LinkList__ctl5_Link" href="http://blogs.interknowlogy.com/johnbowen/archive/2007/03.aspx">March, 2007 (1)</a>  </li>
			
				<li><a id="SingleColumn1_Categories_CatList__ctl0_LinkList__ctl6_Link" href="http://blogs.interknowlogy.com/johnbowen/archive/2007/02.aspx">February, 2007 (3)</a>  </li>
			
				<li><a id="SingleColumn1_Categories_CatList__ctl0_LinkList__ctl7_Link" href="http://blogs.interknowlogy.com/johnbowen/archive/2007/01.aspx">January, 2007 (1)</a>  </li>
			
				</ul>
			
	
		<h3>Post Categories</h3>
		
				<ul>
			
				<li><a id="SingleColumn1_Categories_CatList__ctl1_LinkList__ctl1_Link" href="http://blogs.interknowlogy.com/johnbowen/category/137.aspx">Dev Tools</a> <a id="SingleColumn1_Categories_CatList__ctl1_LinkList__ctl1_RssLink" title="Subscribe to Dev Tools" href="http://blogs.interknowlogy.com/johnbowen/category/137.aspx/rss">(RSS)</a> </li>
			
				<li><a id="SingleColumn1_Categories_CatList__ctl1_LinkList__ctl2_Link" href="http://blogs.interknowlogy.com/johnbowen/category/136.aspx">MSBuild</a> <a id="SingleColumn1_Categories_CatList__ctl1_LinkList__ctl2_RssLink" title="Subscribe to MSBuild" href="http://blogs.interknowlogy.com/johnbowen/category/136.aspx/rss">(RSS)</a> </li>
			
				<li><a id="SingleColumn1_Categories_CatList__ctl1_LinkList__ctl3_Link" href="http://blogs.interknowlogy.com/johnbowen/category/159.aspx">Silverlight</a> <a id="SingleColumn1_Categories_CatList__ctl1_LinkList__ctl3_RssLink" title="Subscribe to Silverlight" href="http://blogs.interknowlogy.com/johnbowen/category/159.aspx/rss">(RSS)</a> </li>
			
				<li><a id="SingleColumn1_Categories_CatList__ctl1_LinkList__ctl4_Link" href="http://blogs.interknowlogy.com/johnbowen/category/131.aspx">Team Foundation Server</a> <a id="SingleColumn1_Categories_CatList__ctl1_LinkList__ctl4_RssLink" title="Subscribe to Team Foundation Server" href="http://blogs.interknowlogy.com/johnbowen/category/131.aspx/rss">(RSS)</a> </li>
			
				<li><a id="SingleColumn1_Categories_CatList__ctl1_LinkList__ctl5_Link" href="http://blogs.interknowlogy.com/johnbowen/category/130.aspx">WPF</a> <a id="SingleColumn1_Categories_CatList__ctl1_LinkList__ctl5_RssLink" title="Subscribe to WPF" href="http://blogs.interknowlogy.com/johnbowen/category/130.aspx/rss">(RSS)</a> </li>
			
				</ul>
			
	
		<h3>Image Galleries</h3>
		
				<ul>
			
				<li><a id="SingleColumn1_Categories_CatList__ctl2_LinkList__ctl1_Link" href="http://blogs.interknowlogy.com/johnbowen/gallery/138.aspx">attachments</a>  </li>
			
				</ul>
			
	
		<h3>Dev Tools</h3>
		
				<ul>
			
				</ul>
			
	
		<h3>MSBuild</h3>
		
				<ul>
			
				</ul>
			
	
		<h3>Team Foundation Server</h3>
		
				<ul>
			
				</ul>
			
	
		<h3>WPF</h3>
		
				<ul>
			
				</ul>
			
	
<p align="center"><a id="SingleColumn1_Hyperlink4" name="Hyperlink4" href="http://www.roudybob.net/category/12.aspx" target="_blank"><img src="Transparent%20Windows%20in%20WPF_files/DotTextSkin.gif" alt="" border="0"></a></p>




</div>

<div id="main">
	
					
	<div class="post">
		<h2>
			<a id="viewpost.ascx_TitleUrl" href="http://blogs.interknowlogy.com/johnbowen/archive/2007/06/20/20458.aspx">Transparent Windows in WPF</a>
		</h2>
		<p class="bodytext">One
of the flashiest features of WPF is pervasive transparency. Colors used
for borders, backgrounds, text, graphics can all be set to be
semi-transparent using the Color Alpha value and in some cases a
separate OpacityMask. Transparency can even be used at the window level
(in both Vista and XP)! A few warnings before we get into how to do
this:</p>
<blockquote dir="ltr" style="margin-right: 0px;">
<p class="bodytext">1. This is the kind of stuff that makes Vista require powerful graphics cards, so keep graphics performance in mind.</p>
<p class="bodytext">2. The crazier you make your top level window
objects, the crazier you will make your users. This is far beyond
changing the template for a button. If you do this incorrectly you can
end up with a modal window that can't be dragged and has no close
button. Think about how Joe User would deal with that before you do it.</p></blockquote>
<p class="bodytext">Now that that's out of the way, there are a few
different properties that affect a Window's transparency and shape. To
affect the Window itself set these properties on the root Window
element in XAML (or in code if you prefer). The first property to set
is Background. Background is important for setting transparency on just
about any WPF element. The key thing to remember when setting the
background color is that there are 2 possible settings that will give
you a totally see-through object, but will behave differently. The most
obvious setting is the Transparent named color (or any #00xxxxxx hex
color value). This will give you a window that you can see through but
still capture mouse input. The other setting that can be used is the
"{x:Null}" markup extension (or null in code) to remove the background
entirely. This behaves differently: no background = no mouse input
capturing area, but child elements can still capture mouse input as
normal. You may want only a partially transparent window, but keep in
mind that the window's area is rectangular so rounded corners or other
shapes need to be rendered by child elements so you're probably better
off adding something like a top level Border for your semi-transparent
Background on top of the clear Window.</p>
<p class="bodytext">The next important property to set is
AllowsTransparency. If this is not set to True your window background
will just render as black. If you try running your app now, you'll get
an exception telling you that None is the only valid WindowStyle for a
transparent window. This is the last key property in a transparent
window: WindowStyle="None". Setting this has now removed all of the
system's window controls (Minimize, Maximize, Close) and the
system-themed frame. You are now free to make your window look like
whatever you want! But you've now also lost the standard method of
moving and closing a window! </p>
<p class="bodytext">Unless you trust all of your users to be proficient
with Alt-F4, it's probably a good idea to add a close button and maybe
a window dragging surface too, just to be nice. The sample app uses a
pair of same colored borders to create a thin outer frame and a normal
window title bar. Notice however, that the entire window has rounded
corners, and the main surface of the app is semi-transparent. There's
also an X button in the top right that's bound to
ApplicationCommands.Close. Here's what the main window looks like:</p><img alt="normal window" src="Transparent%20Windows%20in%20WPF_files/SeeThruApp1.png"> 
<p class="bodytext">And here's the XAML:</p><!-- code formatted by http://manoli.net/csharpformat/ -->
<pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">Window</span> <span class="attr">x:Class</span><span class="kwrd">="SeeThru.Window1"</span>
    <span class="attr">xmlns</span><span class="kwrd">="http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span>
    <span class="attr">xmlns:x</span><span class="kwrd">="http://schemas.microsoft.com/winfx/2006/xaml"</span>
    <span class="attr">Title</span><span class="kwrd">="SeeThru"</span> <span class="attr">Height</span><span class="kwrd">="300"</span> <span class="attr">Width</span><span class="kwrd">="300"</span>
    <span class="attr">WindowStyle</span><span class="kwrd">="None"</span> <span class="attr">AllowsTransparency</span><span class="kwrd">="True"</span>
    <span class="attr">Background</span><span class="kwrd">="Transparent"</span>
    <span class="kwrd">&gt;</span>
  <span class="kwrd">&lt;</span><span class="html">Window.Resources</span><span class="kwrd">&gt;</span>
    <span class="kwrd">&lt;</span><span class="html">LinearGradientBrush</span> <span class="attr">x:Key</span><span class="kwrd">="WindowFrameBrush"</span> <span class="attr">StartPoint</span><span class="kwrd">="0,0.5"</span> <span class="attr">EndPoint</span><span class="kwrd">="1,0.5"</span><span class="kwrd">&gt;</span>
      <span class="kwrd">&lt;</span><span class="html">GradientStop</span> <span class="attr">Color</span><span class="kwrd">="CadetBlue"</span> <span class="attr">Offset</span><span class="kwrd">="0.4"</span><span class="kwrd">/&gt;</span>
      <span class="kwrd">&lt;</span><span class="html">GradientStop</span> <span class="attr">Color</span><span class="kwrd">="Gray"</span> <span class="attr">Offset</span><span class="kwrd">="1"</span><span class="kwrd">/&gt;</span>
    &lt;/<span class="html">LinearGradientBrush</span><span class="kwrd">&gt;</span>
  &lt;/<span class="html">Window.Resources</span><span class="kwrd">&gt;</span>
  <span class="kwrd">&lt;</span><span class="html">Border</span> <span class="attr">Background</span><span class="kwrd">="#50FFFFFF"</span> <span class="attr">CornerRadius</span><span class="kwrd">="5"</span> <span class="attr">BorderBrush</span><span class="kwrd">="{StaticResource WindowFrameBrush}"</span> <span class="attr">BorderThickness</span><span class="kwrd">="2,0,2,2"</span><span class="kwrd">&gt;</span>
    <span class="kwrd">&lt;</span><span class="html">Grid</span><span class="kwrd">&gt;</span>
      <span class="kwrd">&lt;</span><span class="html">Grid.RowDefinitions</span><span class="kwrd">&gt;</span>
        <span class="kwrd">&lt;</span><span class="html">RowDefinition</span> <span class="attr">Height</span><span class="kwrd">="30"</span> <span class="kwrd">/&gt;</span>
        <span class="kwrd">&lt;</span><span class="html">RowDefinition</span><span class="kwrd">/&gt;</span>
      &lt;/<span class="html">Grid.RowDefinitions</span><span class="kwrd">&gt;</span>
      <span class="kwrd">&lt;</span><span class="html">Border</span> <span class="attr">Background</span><span class="kwrd">="{StaticResource WindowFrameBrush}"</span> <span class="attr">HorizontalAlignment</span><span class="kwrd">="Stretch"</span> <span class="attr">VerticalAlignment</span><span class="kwrd">="Stretch"</span> 
              <span class="attr">CornerRadius</span><span class="kwrd">="5,5,0,0"</span> <span class="attr">Margin</span><span class="kwrd">="-1,0,-1,0"</span> <span class="attr">MouseLeftButtonDown</span><span class="kwrd">="DragWindow"</span><span class="kwrd">&gt;</span>
        <span class="kwrd">&lt;</span><span class="html">Grid</span><span class="kwrd">&gt;</span>
          <span class="kwrd">&lt;</span><span class="html">TextBlock</span> <span class="attr">Foreground</span><span class="kwrd">="White"</span> <span class="attr">FontWeight</span><span class="kwrd">="Bold"</span> <span class="attr">VerticalAlignment</span><span class="kwrd">="Center"</span> <span class="attr">Margin</span><span class="kwrd">="10,2,10,2"</span> 
            <span class="attr">Text</span><span class="kwrd">="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Title}"</span><span class="kwrd">/&gt;</span>
          <span class="kwrd">&lt;</span><span class="html">Button</span> <span class="attr">Content</span><span class="kwrd">="X"</span> <span class="attr">HorizontalAlignment</span><span class="kwrd">="Right"</span> <span class="attr">VerticalAlignment</span><span class="kwrd">="Center"</span> <span class="attr">Margin</span><span class="kwrd">="5"</span> <span class="attr">FontSize</span><span class="kwrd">="7"</span> 
                  <span class="attr">Width</span><span class="kwrd">="15"</span> <span class="attr">Height</span><span class="kwrd">="15"</span> <span class="attr">Padding</span><span class="kwrd">="0"</span> <span class="attr">Command</span><span class="kwrd">="ApplicationCommands.Close"</span><span class="kwrd">/&gt;</span>
        &lt;/<span class="html">Grid</span><span class="kwrd">&gt;</span>
      &lt;/<span class="html">Border</span><span class="kwrd">&gt;</span>
      <span class="kwrd">&lt;</span><span class="html">TextBlock</span> <span class="attr">Text</span><span class="kwrd">="This is some text in the window"</span> <span class="attr">Grid</span>.<span class="attr">Row</span><span class="kwrd">="1"</span> <span class="attr">HorizontalAlignment</span><span class="kwrd">="Center"</span> 
                 <span class="attr">VerticalAlignment</span><span class="kwrd">="Center"</span> <span class="attr">TextWrapping</span><span class="kwrd">="Wrap"</span> <span class="attr">FontSize</span><span class="kwrd">="32"</span><span class="kwrd">/&gt;</span>
      <span class="kwrd">&lt;</span><span class="html">Button</span> <span class="attr">Content</span><span class="kwrd">="Click for new window"</span> <span class="attr">Click</span><span class="kwrd">="ButtonClicked"</span> <span class="attr">HorizontalAlignment</span><span class="kwrd">="Center"</span> 
              <span class="attr">VerticalAlignment</span><span class="kwrd">="Bottom"</span> <span class="attr">Grid</span>.<span class="attr">Row</span><span class="kwrd">="1"</span><span class="kwrd">/&gt;</span>
    &lt;/<span class="html">Grid</span><span class="kwrd">&gt;</span>
  &lt;/<span class="html">Border</span><span class="kwrd">&gt;</span>
&lt;/<span class="html">Window</span><span class="kwrd">&gt;</span>
</pre>
<p class="bodytext">We're not quite done with this window yet. You may
have noticed the MouseLeftButtonDown property on the titlebar Border.
This needs to be handled in code to allow dragging of the window. The
ButtonClicked method is used later for the next window we'll be
creating. We'll also add the CommandBinding for the Close command that
was hooked up to the close button earlier.</p><!-- code formatted by http://manoli.net/csharpformat/ --><pre class="csharpcode">        <span class="kwrd">public</span> Window1()
        {
            InitializeComponent();
            CommandBindings.Add(<span class="kwrd">new</span> CommandBinding(ApplicationCommands.Close,
                <span class="kwrd">new</span> ExecutedRoutedEventHandler(<span class="kwrd">delegate</span>(<span class="kwrd">object</span> sender, ExecutedRoutedEventArgs args) { <span class="kwrd">this</span>.Close(); })));
        }
        <span class="kwrd">public</span> <span class="kwrd">void</span> DragWindow(<span class="kwrd">object</span> sender, MouseButtonEventArgs args)
        {
            DragMove();
        }
        <span class="kwrd">public</span> <span class="kwrd">void</span> ButtonClicked(<span class="kwrd">object</span> sender, RoutedEventArgs args)
        {
            CrazyWindow win2 = <span class="kwrd">new</span> CrazyWindow();
            win2.ShowDialog();
        }
</pre>
<p class="bodytext">We now have a window that looks and behaves almost
like a normal window but has a customized look and a semi-transparent
main area. But what if you want a different shape for your window? The
shape of our first window was provided by a border with rounded corners
so it ended up being nearly rectangular. If we forego the top level
border any elements that are added will just be rendered in empty
space. To make the new window as crazy as possible we'll use a large
spiked path in place of a background. Some text to provide instructions
and a text-only title bar are the only other elements in the window.
The window background is set to null so the only clickable areas will
be inside the visible elements:</p><!-- code formatted by http://manoli.net/csharpformat/ -->
<pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">Window</span> <span class="attr">x:Class</span><span class="kwrd">="SeeThru.CrazyWindow"</span>
    <span class="attr">xmlns</span><span class="kwrd">="http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span>
    <span class="attr">xmlns:x</span><span class="kwrd">="http://schemas.microsoft.com/winfx/2006/xaml"</span>
    <span class="attr">Title</span><span class="kwrd">="A Crazy Window"</span> <span class="attr">Height</span><span class="kwrd">="300"</span> <span class="attr">Width</span><span class="kwrd">="300"</span>
    <span class="attr">WindowStyle</span><span class="kwrd">="None"</span> <span class="attr">AllowsTransparency</span><span class="kwrd">="True"</span>
    <span class="attr">Background</span><span class="kwrd">="{x:Null}"</span>
    <span class="kwrd">&gt;</span>
    <span class="kwrd">&lt;</span><span class="html">Grid</span> <span class="attr">MouseRightButtonDown</span><span class="kwrd">="WindowClicked"</span><span class="kwrd">&gt;</span>
      <span class="kwrd">&lt;</span><span class="html">Viewbox</span> <span class="attr">Stretch</span><span class="kwrd">="Uniform"</span><span class="kwrd">&gt;</span>
        <span class="kwrd">&lt;</span><span class="html">Path</span> <span class="attr">Fill</span><span class="kwrd">="#80D0E0FF"</span> <span class="attr">Stroke</span><span class="kwrd">="Red"</span> <span class="attr">StrokeThickness</span><span class="kwrd">="3"</span> <span class="attr">HorizontalAlignment</span><span class="kwrd">="Center"</span> <span class="attr">VerticalAlignment</span><span class="kwrd">="Center"</span> 
              <span class="attr">Data</span><span class="kwrd">="M79,3L65,82 17,91 50,138 96,157 104,192 175,154 190,167 218,78 156,76 157,9 111,39z"</span><span class="kwrd">/&gt;</span>
      &lt;/<span class="html">Viewbox</span><span class="kwrd">&gt;</span>
      <span class="kwrd">&lt;</span><span class="html">TextBlock</span> <span class="attr">Text</span><span class="kwrd">="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Title}"</span> 
                 <span class="attr">FontSize</span><span class="kwrd">="18"</span> <span class="attr">Background</span><span class="kwrd">="Transparent"</span> <span class="attr">HorizontalAlignment</span><span class="kwrd">="Left"</span> <span class="attr">VerticalAlignment</span><span class="kwrd">="Top"</span> <span class="attr">Margin</span><span class="kwrd">="20"</span> 
                 <span class="attr">MouseLeftButtonDown</span><span class="kwrd">="DragWindow"</span> <span class="attr">FontFamily</span><span class="kwrd">="Impact"</span> <span class="attr">Foreground</span><span class="kwrd">="#C030A060"</span><span class="kwrd">/&gt;</span>
      <span class="kwrd">&lt;</span><span class="html">TextBlock</span> <span class="attr">Text</span><span class="kwrd">="Right Click Anywhere to Close"</span> <span class="attr">Background</span><span class="kwrd">="Black"</span> <span class="attr">Width</span><span class="kwrd">="200"</span> <span class="attr">Foreground</span><span class="kwrd">="White"</span> 
                 <span class="attr">VerticalAlignment</span><span class="kwrd">="Center"</span> <span class="attr">HorizontalAlignment</span><span class="kwrd">="Center"</span> <span class="attr">FontSize</span><span class="kwrd">="14"</span> <span class="attr">TextWrapping</span><span class="kwrd">="Wrap"</span> <span class="kwrd">/&gt;</span>
    &lt;/<span class="html">Grid</span><span class="kwrd">&gt;</span>
&lt;/<span class="html">Window</span><span class="kwrd">&gt;</span>
</pre>

<p class="bodytext">The code-behind also needs a few handlers for dragging and closing the window.</p><!-- code formatted by http://manoli.net/csharpformat/ --><pre class="csharpcode">        <span class="kwrd">public</span> <span class="kwrd">void</span> DragWindow(<span class="kwrd">object</span> sender, MouseButtonEventArgs args)
        {
            DragMove();
        }
     
        <span class="kwrd">public</span> <span class="kwrd">void</span> WindowClicked(<span class="kwrd">object</span> sender, MouseButtonEventArgs args)
        {
            Close();
        }
</pre><br><img alt="crazy window" src="Transparent%20Windows%20in%20WPF_files/SeeThruApp2.png"> 
<p class="bodytext">The new window pops up when the button in the main
window is clicked and closes when right clicked. Dragging the floating
title moves the window. Here's the project with both windows:</p>
<p><a href="http://blogs.interknowlogy.com/downloads/johnbowen/SeeThru.zip">SeeThru.zip</a></p>
		<p class="postfoot">
			posted on Wednesday, June 20, 2007 2:56 AM
		</p>
	</div>
	
	
<!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://blogs.interknowlogy.com/johnbowen/archive/2007/06/20/20458.aspx"
dc:identifier="http://blogs.interknowlogy.com/johnbowen/archive/2007/06/20/20458.aspx"
dc:title="Transparent Windows in WPF"
trackback:ping="http://blogs.interknowlogy.com/johnbowen/services/trackbacks/20458.aspx" />
</rdf:RDF>
-->


				
</div>


<p id="footer">
	Powered by: 
	<br>
	<a id="Footer1_Hyperlink2" name="Hyperlink1" href="http://scottwater.com/blog"><img src="Transparent%20Windows%20in%20WPF_files/100x30_Logo.gif" alt="" border="0"></a>
	<a id="Footer1_Hyperlink3" name="Hyperlink1" href="http://asp.net/"><img src="Transparent%20Windows%20in%20WPF_files/PoweredByAsp.gif" alt="" border="0"></a>
	<br>
	Copyright © John Bowen
</p></form>
	</body></html>
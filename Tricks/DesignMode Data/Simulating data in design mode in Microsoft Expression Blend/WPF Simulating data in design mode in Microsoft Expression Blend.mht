From: <Saved by Windows Internet Explorer 7>
Subject: WPF: Simulating data in design mode in Microsoft Expression Blend
Date: Thu, 1 Nov 2007 13:18:53 -0700
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_00D5_01C81C89.BF9995B0"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3198

This is a multi-part message in MIME format.

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.galasoft.ch/mydotnet/articles/article-2007091401.html

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" =
"http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<HTML xmlns=3D"http://www.w3.org/1999/xhtml"><HEAD><TITLE>WPF: =
Simulating data in design mode in Microsoft Expression Blend</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dutf-8"><!--
//-----------------------------------------------------------------------=
------
// Copyright =C2=A9 GalaSoft Laurent Bugnion 2007
//-----------------------------------------------------------------------=
------
// Website  : www.galasoft.ch                     =20
// Language : HTML 4.0 Transitional
// Author   : Laurent Bugnion, laurent@galasoft.ch
//-----------------------------------------------------------------------=
------
--><LINK href=3D"/favicon.ico" rel=3D"Shortcut Icon"><LINK=20
href=3D"http://www.galasoft.ch/layout/new.gslb.brown.css" =
type=3Dtext/css=20
rel=3DStylesheet><LINK=20
href=3D"http://www.galasoft.ch/layout/gslb.realsimpleblog.brown.css" =
type=3Dtext/css=20
rel=3DStylesheet><LINK =
href=3D"http://www.galasoft.ch/layout/manoli.csharp.css"=20
type=3Dtext/css rel=3DStylesheet>
<SCRIPT src=3D"http://www.galasoft.ch/script/gslb.object.js"=20
type=3Dtext/javascript></SCRIPT>

<SCRIPT src=3D"http://www.galasoft.ch/script/gslb.positionedbase.js"=20
type=3Dtext/javascript></SCRIPT>

<SCRIPT src=3D"http://www.galasoft.ch/script/gslb.csslength.js"=20
type=3Dtext/javascript></SCRIPT>

<SCRIPT src=3D"http://www.galasoft.ch/script/gslb.positionednode.js"=20
type=3Dtext/javascript></SCRIPT>

<META content=3D"MSHTML 6.00.6000.16544" name=3DGENERATOR></HEAD>
<BODY><A class=3Dgslb_mainLnkHome id=3DlnkHome style=3D"LEFT: 8px; TOP: =
8px"=20
href=3D"http://www.galasoft.ch/index.html" target=3D_top><IMG=20
title=3D"Navigate back home" alt=3D"Navigate back home"=20
src=3D"http://www.galasoft.ch/logo/vsmallhead.gif"></A>
<SCRIPT type=3Dtext/javascript>
      new gslb.PositionedNode( document.getElementById( 'lnkHome' ) );
    </SCRIPT>
=20
<DIV class=3Dgslb_mainDivImageTitle><IMG class=3Dgslb_mainImgTitle=20
title=3D"GalaSoft Laurent Bugnion" alt=3D"GalaSoft Laurent Bugnion"=20
src=3D"http://www.galasoft.ch/logo/header.gif"> </DIV>
<DIV class=3Dgslb_rsbDivPosting style=3D"MARGIN-TOP: 2em; WIDTH: 60%">
<DIV class=3Dgslb_rsbDivPostingTitle>WPF: Simulating data in design mode =
in=20
Microsoft Expression Blend </DIV>
<TABLE style=3D"WIDTH: 100%">
  <TBODY>
  <TR>
    <TD=20
    style=3D"PADDING-RIGHT: 0.8em; PADDING-LEFT: 0px; PADDING-BOTTOM: =
0px; PADDING-TOP: 0px">
      <DIV class=3Dgslb_mainDivSummary><A=20
      =
href=3D"http://www.galasoft.ch/mydotnet/articles/article-2007091401.html#=
intro">Introduction</A>=20
      / <A=20
      =
href=3D"http://www.galasoft.ch/mydotnet/articles/article-2007091401.html#=
builtin">Simulating=20
      data, built-in</A> / <A=20
      =
href=3D"http://www.galasoft.ch/mydotnet/articles/article-2007091401.html#=
xmltestdata">XML=20
      test data</A> / <A=20
      =
href=3D"http://www.galasoft.ch/mydotnet/articles/article-2007091401.html#=
clrtestdata">CLR=20
      test data</A> / <A=20
      =
href=3D"http://www.galasoft.ch/mydotnet/articles/article-2007091401.html#=
testmode">Test=20
      mode</A> / <A=20
      =
href=3D"http://www.galasoft.ch/mydotnet/articles/article-2007091401.html#=
release">Release</A>=20
      / <A=20
      =
href=3D"http://www.galasoft.ch/mydotnet/articles/article-2007091401.html#=
download">Download</A>=20
      / <A=20
      =
href=3D"http://www.galasoft.ch/mydotnet/articles/article-2007091401.html#=
conclusion">Conclusion</A>=20
      / <A=20
      =
href=3D"http://www.galasoft.ch/mydotnet/articles/article-2007091401.html#=
history">History</A>=20
      </DIV></TD>
    <TD style=3D"VERTICAL-ALIGN: top; TEXT-ALIGN: right">
      <DIV class=3Dgslb_mainDivSummary><A=20
      =
href=3D"http://www.galasoft.ch/mydotnet/articles/article-2007081301.aspx"=
>&lt;&lt;&nbsp;Prev</A>&nbsp;|&nbsp;<A=20
      =
href=3D"http://www.galasoft.ch/articles_en.html#wpf">Index</A>&nbsp;|&nbs=
p;<A=20
      =
href=3D"http://www.galasoft.ch/mydotnet/articles/article-2007100601.html"=
>Next&nbsp;&gt;&gt;</A>=20
      </DIV></TD></TR></TBODY></TABLE>
<DIV class=3Dgslb_rsbDivFeature>
<DIV class=3Dgslb_rsbDivTitle><A id=3Dintro></A>Introduction </DIV>
<P class=3Dgslb_rsbPParagraph>Making a UI element "blendable" (i.e. =
being able to=20
edit that element in Microsoft Expression Blend) is very important if =
you want=20
to enable a better workflow for the graphics designers. In complex user=20
interfaces, editing UI elements "in place", for example items in a =
ListView or a=20
ComboBox can speed up the design by factors, </P>
<P class=3Dgslb_rsbPParagraph>In <A=20
href=3D"http://geekswithblogs.net/lbugnion/archive/2007/05/17/WPF-Debuggi=
ng-your-UI-in-Expression-Blend.aspx"=20
target=3D_blank>one past post</A> and <A=20
href=3D"http://geekswithblogs.net/lbugnion/archive/2007/05/19/WPF-Data-Bi=
nding-in-Expression-Blend.aspx"=20
target=3D_blank>another</A>, I talked about my quest to display test =
data in=20
Expression Blend. The goal behind this is to enable the graphics =
designers to=20
work on the controls' look and feel directly in Blend, and if possible =
directly=20
in the element's context. Instead of working on "bits" (typically on <A=20
href=3D"http://msdn2.microsoft.com/en-us/library/system.windows.datatempl=
ate.aspx"=20
target=3D_blank>DataTemplates</A> stored in resources), the designer is =
able to=20
see the result of his work without starting the application! I =
eventually found=20
a way with the help of IdentityMine's Jonathan Russ, and I am now able =
to give=20
test data to our graphics designers, allowing them to work in a very =
comfortable=20
way. </P>
<P class=3Dgslb_rsbPParagraph>In this article, the technique detailed =
can be=20
applied to any control deriving from ItemsControl. That can be an <A=20
href=3D"http://msdn2.microsoft.com/en-us/library/system.windows.controls.=
itemscontrol.aspx"=20
target=3D_blank>ItemsControl</A> directly, a <A=20
href=3D"http://msdn2.microsoft.com/en-us/library/system.windows.controls.=
listview.aspx"=20
target=3D_blank>ListView</A>, a <A=20
href=3D"http://msdn2.microsoft.com/en-us/library/system.windows.controls.=
listbox.aspx"=20
target=3D_blank>ListBox</A>, a <A=20
href=3D"http://msdn2.microsoft.com/en-us/library/system.windows.controls.=
combobox.aspx"=20
target=3D_blank>ComboBox</A>, etc... For simplicity, I will only show =
the examples=20
for a ListBox control. </P></DIV>
<DIV class=3Dgslb_rsbDivFeature>
<DIV class=3Dgslb_rsbDivTitle><A id=3Dbuiltin></A>Simulating data in =
Blend, built-in=20
feature </DIV>
<P class=3Dgslb_rsbPParagraph>You can actually already have Blend =
automatically=20
generate test data for a ListBox. The way to do this is as follows=20
(Preconditions: I created a WPF application. I created a class named =
"DataItem",=20
with 3 properties "MyString", "MyInt" and "MyColor". Inside the Window1 =
class, I=20
added a public property "MyCollection" of type =
ObservableCollection<DATAITEM>.=20
This will be my data source for the ListBox) </P>
<UL class=3Dgslb_rsbList>
  <LI>In Blend, select the ListBox. In the Properties tab, select the=20
  ItemsSource property. In the dialog, select the tab "Element =
Property", then=20
  select the Window. On the left hand side, you should see the property=20
  MyCollection. Select this property. Note that if you expand the =
"Advanced=20
  properties" expander, you can also set the trigger, binding direction, =

  converter, etc... </LI></UL>
<DIV class=3Dgslb_rsbDivImage><IMG title=3D"Create Data Binding dialog"=20
alt=3D"Create Data Binding dialog"=20
src=3D"http://www.galasoft.ch/mydotnet/articles/resources/article-2007091=
401/2007091401.png">=20
</DIV>
<UL class=3Dgslb_rsbList>
  <LI>In the same dialog, click on the button "Define DataTemplate". =
Blend=20
  proposes a default DataTemplate based on the type of the properties =
included=20
  in DataItem. For the string and the Int32, the proposed value is OK. =
For the=20
  Color, it doesn't make much sense. Just unselect the MyColor property. =
Anyway=20
  the designers must rework the whole template later. The only goal of =
that step=20
  is to have Blend create a DataTemplate in the resources, so that we =
can work=20
  on it.=20
  <LI>Note the checkbox on the bottom: "Generate Sample Data". Check =
that=20
  checkbox. </LI></UL>
<DIV class=3Dgslb_rsbDivImage><IMG title=3D"Create Data Template dialog" =

alt=3D"Create Data Template dialog"=20
src=3D"http://www.galasoft.ch/mydotnet/articles/resources/article-2007091=
401/2007091402.png">=20
</DIV>
<P class=3Dgslb_rsbPParagraph>If you check the main window containing =
the ListBox=20
now, you will see that Blend generated test data, 4 random strings =
"Apple",=20
"Grapefruit", ""Pear" and "Banana", as well as 4 random integers. This =
provides=20
the designers with something to work on. Of course, this only applies to =
simple=20
data items, and if a complex data structure must be displayed, it will =
be=20
necessary to create more elaborate test data. </P>
<DIV class=3Dgslb_rsbDivImage><IMG title=3D"Test data in Blend"=20
alt=3D"Test data in Blend"=20
src=3D"http://www.galasoft.ch/mydotnet/articles/resources/article-2007091=
401/2007091403.png">=20
</DIV>
<P class=3Dgslb_rsbPParagraph><SPAN style=3D"FONT-WEIGHT: bold">How does =
it=20
work?</SPAN> </P>
<P class=3Dgslb_rsbPParagraph>If you change to the XAML editor, you'll =
notice that=20
Blend added 2 new namespaces to the Window declaration: </P>
<DIV class=3Dgslb_rsbDivCodeSection>
<DIV class=3Dgslb_rsbDivCode><SPAN class=3Dattr>xmlns:d</SPAN><SPAN=20
class=3Dkwrd>=3D"http://schemas.microsoft.com/expression/blend/2006"</SPA=
N> <SPAN=20
class=3Dattr>xmlns:mc</SPAN><SPAN=20
class=3Dkwrd>=3D"http://schemas.openxmlformats.org/markup-compatibility/2=
006"</SPAN>=20
<SPAN class=3Dattr>mc:Ignorable</SPAN><SPAN class=3Dkwrd>=3D"d"</SPAN> =
</DIV></DIV>
<P class=3Dgslb_rsbPParagraph>Also, the ListBox now has a new attached =
property:=20
</P>
<DIV class=3Dgslb_rsbDivCodeSection>
<DIV class=3Dgslb_rsbDivCode><SPAN =
class=3Dattr>d:UseSampleData</SPAN><SPAN=20
class=3Dkwrd>=3D"True"</SPAN> </DIV></DIV>
<P class=3Dgslb_rsbPParagraph>If this property is set to false, or =
removed=20
altogether, Blend will not create test data. Note that this data is only =
used in=20
Blend. It will <SPAN style=3D"FONT-WEIGHT: bold">not</SPAN> be displayed =
in Cider=20
(Visual Studio 2008 WPF designer). </P></DIV>
<DIV class=3Dgslb_rsbDivFeature>
<DIV class=3Dgslb_rsbDivTitle><A id=3Dxmltestdata></A>XML test data =
</DIV>
<P class=3Dgslb_rsbPParagraph>Another way to display test data in Blend =
is to use=20
an <A=20
href=3D"http://msdn2.microsoft.com/en-us/library/system.windows.data.xmld=
ataprovider.aspx"=20
target=3D_blank>XmlDataProvider</A> in the Window's resources. However, =
I don't=20
prefer that way of doing, because binding to an XmlDataProvider requires =
a=20
different syntax than binding to a CLR object or to a =
DependencyProperty. For=20
instance, you need to use a XPath instead of a Path. In general, UI is =
bound to=20
CLR objects rather than to XML objects, so I think it makes more sense =
to use=20
CLR objects also for the design mode. </P>
<P class=3Dgslb_rsbPParagraph>Here is however how you can create inline =
test data=20
in the XAML file, and bind to it. </P>
<UL class=3Dgslb_rsbList>
  <LI>Open the XAML file (Window1.xaml) in Visual Studio. Then in the =
Window's=20
  resources, add an XmlDataProvider as follows (note the empty xmlns=20
  declaration, which is needed!): </LI></UL>
<DIV class=3Dgslb_rsbDivCodeSection>
<DIV class=3Dgslb_rsbDivCode><SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>XmlDataProvider</SPAN> <SPAN class=3Dattr>x:Key</SPAN><SPAN =

class=3Dkwrd>=3D"MyXmlProvider"</SPAN> <SPAN =
class=3Dattr>XPath</SPAN><SPAN=20
class=3Dkwrd>=3D"MyData"</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;</SPAN><SPAN class=3Dhtml>x:XData</SPAN><SPAN=20
class=3Dkwrd>&gt;</SPAN> <SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>MyData</SPAN> <SPAN class=3Dattr>xmlns</SPAN><SPAN=20
class=3Dkwrd>=3D""</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;</SPAN><SPAN class=3Dhtml>MyDataItem</SPAN> <SPAN=20
class=3Dattr>MyString</SPAN><SPAN class=3Dkwrd>=3D"Test data 1"</SPAN> =
<SPAN=20
class=3Dattr>MyInt</SPAN><SPAN class=3Dkwrd>=3D"32"</SPAN> <SPAN=20
class=3Dattr>MyColor</SPAN><SPAN class=3Dkwrd>=3D"#FFAABBCC"</SPAN><SPAN =

class=3Dkwrd>/&gt;</SPAN> <SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>MyDataItem</SPAN> <SPAN class=3Dattr>MyString</SPAN><SPAN=20
class=3Dkwrd>=3D"Test data 2"</SPAN> <SPAN =
class=3Dattr>MyInt</SPAN><SPAN=20
class=3Dkwrd>=3D"42"</SPAN> <SPAN class=3Dattr>MyColor</SPAN><SPAN=20
class=3Dkwrd>=3D"Red"</SPAN><SPAN class=3Dkwrd>/&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;/</SPAN><SPAN class=3Dhtml>MyData</SPAN><SPAN=20
class=3Dkwrd>&gt;</SPAN> <SPAN class=3Dkwrd>&lt;/</SPAN><SPAN=20
class=3Dhtml>x:XData</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;/</SPAN><SPAN class=3Dhtml>XmlDataProvider</SPAN><SPAN=20
class=3Dkwrd>&gt;</SPAN> </DIV></DIV>
<UL class=3Dgslb_rsbList>
  <LI>We need also to modify the DataTemplate as follows: </LI></UL>
<DIV class=3Dgslb_rsbDivCodeSection>
<DIV class=3Dgslb_rsbDivCode><SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>DataTemplate</SPAN> <SPAN class=3Dattr>x:Key</SPAN><SPAN=20
class=3Dkwrd>=3D"MyTemplate"</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;</SPAN><SPAN class=3Dhtml>StackPanel</SPAN> <SPAN=20
class=3Dattr>Background</SPAN><SPAN class=3Dkwrd>=3D"{Binding=20
XPath=3D@MyColor}"</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;</SPAN><SPAN class=3Dhtml>TextBlock</SPAN> <SPAN=20
class=3Dattr>Text</SPAN><SPAN class=3Dkwrd>=3D"{Binding =
XPath=3D@MyInt}"</SPAN><SPAN=20
class=3Dkwrd>/&gt;</SPAN> <SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>TextBlock</SPAN> <SPAN class=3Dattr>Text</SPAN><SPAN=20
class=3Dkwrd>=3D"{Binding XPath=3D@MyString}"</SPAN><SPAN =
class=3Dkwrd>/&gt;</SPAN>=20
<SPAN class=3Dkwrd>&lt;/</SPAN><SPAN class=3Dhtml>StackPanel</SPAN><SPAN =

class=3Dkwrd>&gt;</SPAN> <SPAN class=3Dkwrd>&lt;/</SPAN><SPAN=20
class=3Dhtml>DataTemplate</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> =
</DIV></DIV>
<UL class=3Dgslb_rsbList>
  <LI>The ListBox must also be modified to comply with the XML XPath =
syntax:=20
  </LI></UL>
<DIV class=3Dgslb_rsbDivCodeSection>
<DIV class=3Dgslb_rsbDivCode><SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>ListBox</SPAN> <SPAN class=3Dattr>ItemTemplate</SPAN><SPAN=20
class=3Dkwrd>=3D"{StaticResource MyTemplate}"</SPAN> <SPAN=20
class=3Dattr>ItemsSource</SPAN><SPAN class=3Dkwrd>=3D"{Binding =
Source=3D{StaticResource=20
MyXmlProvider}, XPath=3DMyDataItem}"</SPAN> <SPAN=20
class=3Dattr>HorizontalAlignment</SPAN><SPAN =
class=3Dkwrd>=3D"Stretch"</SPAN> <SPAN=20
class=3Dattr>VerticalAlignment</SPAN><SPAN =
class=3Dkwrd>=3D"Stretch"</SPAN> <SPAN=20
class=3Dattr>HorizontalContentAlignment</SPAN><SPAN =
class=3Dkwrd>=3D"Stretch"</SPAN>=20
<SPAN class=3Dattr>VerticalContentAlignment</SPAN><SPAN=20
class=3Dkwrd>=3D"Stretch"</SPAN> <SPAN class=3Dattr>Width</SPAN><SPAN=20
class=3Dkwrd>=3D"Auto"</SPAN> <SPAN class=3Dattr>Height</SPAN><SPAN=20
class=3Dkwrd>=3D"Auto"</SPAN><SPAN class=3Dkwrd>/&gt;</SPAN> =
</DIV></DIV>
<P class=3Dgslb_rsbPParagraph>The disadvantages of using XmlDataProvider =
for test=20
data are quite obvious in this simple example: The bindings must be =
modified to=20
bind to the test data. However, since the data is created in the XAML =
file=20
itself, Blend is able to display the data: </P>
<DIV class=3Dgslb_rsbDivImage><IMG title=3D"XML test data in Blend"=20
alt=3D"XML test data in Blend"=20
src=3D"http://www.galasoft.ch/mydotnet/articles/resources/article-2007091=
401/2007091404.png">=20
</DIV>
<P class=3Dgslb_rsbPParagraph>To be thorough, note that the XPath syntax =
also=20
allows filtering the XML data. Also, the XML test data can be defined in =
an=20
external XML file, in which case the XmlDataProvider's Source property =
must be=20
used. </P></DIV>
<DIV class=3Dgslb_rsbDivFeature>
<DIV class=3Dgslb_rsbDivTitle><A id=3Dclrtestdata></A>Using a data =
provider and CLR=20
objects as test data </DIV>
<P class=3Dgslb_rsbPParagraph>Since many applications use CLR objects as =
their=20
datasource (and not XML data), it is great to be able to use CLR objects =
to=20
display data in Blend too. However, Blend is a bit annoying with =
code-behind:=20
When a Window is opened, the code in that Window is not executed by =
Blend. The=20
reasons behind this are quite complex and linked to the way how Blend =
loads and=20
displays the Window object. I talked about this in one of my <A=20
href=3D"http://geekswithblogs.net/lbugnion/archive/2007/05/17/WPF-Debuggi=
ng-your-UI-in-Expression-Blend.aspx"=20
target=3D_blank>previous blog entries</A>. </P>
<P class=3Dgslb_rsbPParagraph>However, Blend will instantiate the =
objects defined=20
in the Window's resources when they're bound to an element in the XAML =
file.=20
Playing with that feature, it is possible to define a data provider in =
the=20
resources, and to check in the constructor if the Window is running in =
design=20
mode or in runtime mode. </P>
<P class=3Dgslb_rsbPParagraph>The first step is to create a data =
provider. This=20
object must offer a collection to bind to. This collection will contain =
the data=20
items which must be displayed. Many types of collections are supported =
in WPF=20
(all IEnumerable), but typically we use <A=20
href=3D"http://msdn2.microsoft.com/en-us/library/ms668604.aspx"=20
target=3D_blank>ObservableCollection</A>, because the UI will =
automatically be=20
updated when items are added, removed or moved in the collection. </P>
<P class=3Dgslb_rsbPParagraph>The data items we will display in this =
example offer=20
3 DependencyProperties: </P>
<DIV class=3Dgslb_rsbDivCodeSection>
<DIV class=3Dgslb_rsbDivCode><SPAN class=3Dkwrd>public</SPAN> <SPAN=20
class=3Dkwrd>class</SPAN> <SPAN class=3Dtype>Item</SPAN> : <SPAN=20
class=3Dtype>DependencyObject</SPAN> { <SPAN class=3Dkwrd>public</SPAN> =
<SPAN=20
class=3Dkwrd>string</SPAN> MyString { get { <SPAN =
class=3Dkwrd>return</SPAN> (<SPAN=20
class=3Dkwrd>string</SPAN>) GetValue(MyStringProperty); } set {=20
SetValue(MyStringProperty, <SPAN class=3Dkwrd>value</SPAN>); } } <SPAN=20
class=3Dkwrd>public</SPAN> <SPAN class=3Dkwrd>static</SPAN> <SPAN=20
class=3Dkwrd>readonly</SPAN> <SPAN =
class=3Dtype>DependencyProperty</SPAN>=20
MyStringProperty =3D <SPAN =
class=3Dtype>DependencyProperty</SPAN>.Register(<SPAN=20
class=3Dstr>"MyString"</SPAN>, <SPAN class=3Dkwrd>typeof</SPAN>(<SPAN=20
class=3Dkwrd>string</SPAN>), <SPAN class=3Dkwrd>typeof</SPAN>(<SPAN=20
class=3Dtype>Item</SPAN>), <SPAN class=3Dkwrd>new</SPAN> <SPAN=20
class=3Dtype>UIPropertyMetadata</SPAN>(<SPAN class=3Dstr>""</SPAN>)); =
<SPAN=20
class=3Dkwrd>public</SPAN> <SPAN class=3Dkwrd>int</SPAN> MyInt { get { =
<SPAN=20
class=3Dkwrd>return</SPAN> (<SPAN class=3Dkwrd>int</SPAN>) =
GetValue(MyIntProperty);=20
} set { SetValue(MyIntProperty, <SPAN class=3Dkwrd>value</SPAN>); } } =
<SPAN=20
class=3Dkwrd>public</SPAN> <SPAN class=3Dkwrd>static</SPAN> <SPAN=20
class=3Dkwrd>readonly</SPAN> <SPAN =
class=3Dtype>DependencyProperty</SPAN>=20
MyIntProperty =3D <SPAN =
class=3Dtype>DependencyProperty</SPAN>.Register(<SPAN=20
class=3Dstr>"MyInt"</SPAN>, <SPAN class=3Dkwrd>typeof</SPAN>(<SPAN=20
class=3Dkwrd>int</SPAN>), <SPAN class=3Dkwrd>typeof</SPAN>(<SPAN=20
class=3Dtype>Item</SPAN>), <SPAN class=3Dkwrd>new</SPAN> <SPAN=20
class=3Dtype>UIPropertyMetadata</SPAN>(0)); <SPAN =
class=3Dkwrd>public</SPAN> Color=20
MyColor { get { <SPAN class=3Dkwrd>return</SPAN> (Color)=20
GetValue(MyColorProperty); } set { SetValue(MyColorProperty, <SPAN=20
class=3Dkwrd>value</SPAN>); } } <SPAN class=3Dkwrd>public</SPAN> <SPAN=20
class=3Dkwrd>static</SPAN> <SPAN class=3Dkwrd>readonly</SPAN> <SPAN=20
class=3Dtype>DependencyProperty</SPAN> MyColorProperty =3D <SPAN=20
class=3Dtype>DependencyProperty</SPAN>.Register(<SPAN =
class=3Dstr>"MyColor"</SPAN>,=20
<SPAN class=3Dkwrd>typeof</SPAN>(<SPAN class=3Dtype>Color</SPAN>), <SPAN =

class=3Dkwrd>typeof</SPAN>(<SPAN class=3Dtype>Item</SPAN>), <SPAN=20
class=3Dkwrd>new</SPAN> <SPAN =
class=3Dtype>UIPropertyMetadata</SPAN>(<SPAN=20
class=3Dtype>Colors</SPAN>.Black)); <SPAN class=3Dkwrd>public</SPAN> =
Item(<SPAN=20
class=3Dkwrd>string</SPAN> myString, <SPAN class=3Dkwrd>int</SPAN> =
myInt, <SPAN=20
class=3Dtype>Color</SPAN> myColor) { MyString =3D myString; MyInt =3D =
myInt; MyColor =3D=20
myColor; } } </DIV></DIV>
<P class=3Dgslb_rsbPParagraph>The advantage of using the Item class is =
that we can=20
use exactly the same data structure in runtime mode and in design mode. =
We just=20
need to create test items if the code runs in design mode, which is the =
task of=20
the DataProvider class: </P>
<DIV class=3Dgslb_rsbDivCodeSection>
<DIV class=3Dgslb_rsbDivCode><SPAN class=3Dkwrd>public</SPAN> <SPAN=20
class=3Dkwrd>class</SPAN> <SPAN class=3Dtype>DataProvider</SPAN> { <SPAN =

class=3Dkwrd>private</SPAN> <SPAN =
class=3Dtype>ObservableCollection</SPAN>&lt;<SPAN=20
class=3Dtype>Item</SPAN>&gt; _myCollection =3D <SPAN =
class=3Dkwrd>new</SPAN> <SPAN=20
class=3Dtype>ObservableCollection</SPAN>&lt;<SPAN =
class=3Dtype>Item</SPAN>&gt;();=20
<SPAN class=3Dkwrd>public</SPAN> <SPAN=20
class=3Dtype>ObservableCollection</SPAN>&lt;<SPAN =
class=3Dtype>Item</SPAN>&gt;=20
MyCollection { get { <SPAN class=3Dkwrd>return</SPAN> _myCollection; } } =
<SPAN=20
class=3Dkwrd>public</SPAN> <SPAN class=3Dkwrd>bool</SPAN> IsInDesignMode =
{ get {=20
<SPAN class=3Dkwrd>return</SPAN> <SPAN=20
class=3Dtype>DesignerProperties</SPAN>.GetIsInDesignMode(<SPAN=20
class=3Dkwrd>new</SPAN> <SPAN class=3Dtype>DependencyObject</SPAN>()); } =
} <SPAN=20
class=3Dkwrd>public</SPAN> <SPAN class=3Dkwrd>bool</SPAN> =
IsInRuntimeMode { get {=20
<SPAN class=3Dkwrd>return</SPAN> !IsInDesignMode; } } <SPAN=20
class=3Dkwrd>public</SPAN> DataProvider() { <SPAN class=3Dkwrd>if</SPAN> =

(IsInDesignMode) { _myCollection.Add(<SPAN class=3Dkwrd>new</SPAN> <SPAN =

class=3Dtype>Item</SPAN>(<SPAN class=3Dstr>"Test data 1"</SPAN>, 32, =
<SPAN=20
class=3Dtype>Color</SPAN>.FromArgb(255, 170, 187, 204))); =
_myCollection.Add(<SPAN=20
class=3Dkwrd>new</SPAN> <SPAN class=3Dtype>Item</SPAN>(<SPAN =
class=3Dstr>"Test data=20
2"</SPAN>, 42, <SPAN class=3Dtype>Colors</SPAN>.Red)); } } } =
</DIV></DIV>
<P class=3Dgslb_rsbPParagraph>In this class, notice that a property uses =
the <A=20
href=3D"http://msdn2.microsoft.com/en-us/library/system.componentmodel.de=
signerproperties.getisindesignmode.aspx"=20
target=3D_blank>DesignerProperties.GetIsInDesignMode</A> to test if the =
code is=20
run in design mode or in runtime mode. The IsRuntime property seeems=20
unnecessary, but remember that we need to bind to properties, and =
bindings=20
cannot evaluate expressions (except if you use <A=20
href=3D"http://www.identitymine.com/" target=3D_blank>IdentityMine</A>'s =
excellent=20
EvalBinding markup extension). This is why we have two properties for =
this=20
purpose. </P>
<P class=3Dgslb_rsbPParagraph>The DataProvider's constructor will be =
called by the=20
framework when the instance is needed. We'll see later how the object is =

instantiated and used in the XAML code. In the constructor, we check if =
the code=20
is run in design mode, and if it is, we add test data to the collection! =
This=20
data will be displayed by Expression Blend as we'll see in just a =
moment. </P>
<P class=3Dgslb_rsbPParagraph>In XAML, we must declare a resource =
pointing to the=20
DataProvider. Since this object only has a default constructor, we don't =
need to=20
"pack" it in an <A=20
href=3D"http://msdn2.microsoft.com/en-us/library/system.windows.data.obje=
ctdataprovider.aspx"=20
target=3D_blank>ObjectDataProvider</A>, it is sufficient to simply =
declare the=20
object itself. If a more complex construct is needed, however, an=20
ObjectDataProvider might be needed. For details about the ODP, check Bea =
Costa's=20
<A href=3D"http://www.beacosta.com/" target=3D_blank>excellent blog</A> =
about=20
binding. </P>
<P class=3Dgslb_rsbPParagraph>The DataTemplate we used with the =
XmlDataProvider=20
needs to be slightly changed, because we don't use the XPath syntax =
anymore, but=20
the Path property instead. The XAML code becomes: </P>
<DIV class=3Dgslb_rsbDivCodeSection>
<DIV class=3Dgslb_rsbDivCode><SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>Window</SPAN> <SPAN class=3Dattr>xmlns</SPAN><SPAN=20
class=3Dkwrd>=3D"http://schemas.microsoft.com/winfx/2006/xaml/presentatio=
n"</SPAN>=20
<SPAN class=3Dattr>xmlns:x</SPAN><SPAN=20
class=3Dkwrd>=3D"http://schemas.microsoft.com/winfx/2006/xaml"</SPAN> =
<SPAN=20
class=3Dattr>xmlns:src</SPAN><SPAN=20
class=3Dkwrd>=3D"clr-namespace:GalaSoftLb.Wpf.DesignAndTestMode"</SPAN> =
<SPAN=20
class=3Dattr>x:Class</SPAN><SPAN=20
class=3Dkwrd>=3D"GalaSoftLb.Wpf.DesignAndTestMode.Window1"</SPAN> <SPAN=20
class=3Dattr>Title</SPAN><SPAN class=3Dkwrd>=3D"Window1"</SPAN> <SPAN=20
class=3Dattr>Height</SPAN><SPAN class=3Dkwrd>=3D"300"</SPAN> <SPAN=20
class=3Dattr>Width</SPAN><SPAN class=3Dkwrd>=3D"300"</SPAN> <SPAN=20
class=3Dkwrd>&gt;</SPAN> <SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>Window.Resources</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> <SPAN =

class=3Dkwrd>&lt;</SPAN><SPAN class=3Dhtml>src:DataProvider</SPAN> <SPAN =

class=3Dattr>x:Key</SPAN><SPAN class=3Dkwrd>=3D"MyProvider"</SPAN><SPAN=20
class=3Dkwrd>/&gt;</SPAN> <SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>DataTemplate</SPAN> <SPAN class=3Dattr>x:Key</SPAN><SPAN=20
class=3Dkwrd>=3D"MyTemplate"</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;</SPAN><SPAN class=3Dhtml>StackPanel</SPAN><SPAN=20
class=3Dkwrd>&gt;</SPAN> <SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>StackPanel.Background</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> =
<SPAN=20
class=3Dkwrd>&lt;</SPAN><SPAN class=3Dhtml>SolidColorBrush</SPAN> <SPAN=20
class=3Dattr>Color</SPAN><SPAN class=3Dkwrd>=3D"{Binding =
MyColor}"</SPAN><SPAN=20
class=3Dkwrd>/&gt;</SPAN> <SPAN class=3Dkwrd>&lt;/</SPAN><SPAN=20
class=3Dhtml>StackPanel.Background</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> =
<SPAN=20
class=3Dkwrd>&lt;</SPAN><SPAN class=3Dhtml>TextBlock</SPAN> <SPAN=20
class=3Dattr>Text</SPAN><SPAN class=3Dkwrd>=3D"{Binding =
Path=3DMyInt}"</SPAN><SPAN=20
class=3Dkwrd>/&gt;</SPAN> <SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>TextBlock</SPAN> <SPAN class=3Dattr>Text</SPAN><SPAN=20
class=3Dkwrd>=3D"{Binding Path=3DMyString}"</SPAN><SPAN =
class=3Dkwrd>/&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;/</SPAN><SPAN class=3Dhtml>StackPanel</SPAN><SPAN=20
class=3Dkwrd>&gt;</SPAN> <SPAN class=3Dkwrd>&lt;/</SPAN><SPAN=20
class=3Dhtml>DataTemplate</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;/</SPAN><SPAN class=3Dhtml>Window.Resources</SPAN><SPAN =

class=3Dkwrd>&gt;</SPAN> <SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>Grid</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;</SPAN><SPAN class=3Dhtml>ListBox</SPAN> <SPAN=20
class=3Dattr>ItemsSource</SPAN><SPAN class=3Dkwrd>=3D"{Binding =
Source=3D{StaticResource=20
MyProvider}, Path=3DMyCollection}"</SPAN> <SPAN=20
class=3Dattr>ItemTemplate</SPAN><SPAN class=3Dkwrd>=3D"{StaticResource=20
MyTemplate}"</SPAN> <SPAN =
class=3Dattr>HorizontalContentAlignment</SPAN><SPAN=20
class=3Dkwrd>=3D"Stretch"</SPAN><SPAN class=3Dkwrd>/&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;/</SPAN><SPAN class=3Dhtml>Grid</SPAN><SPAN =
class=3Dkwrd>&gt;</SPAN>=20
<SPAN class=3Dkwrd>&lt;/</SPAN><SPAN class=3Dhtml>Window</SPAN><SPAN=20
class=3Dkwrd>&gt;</SPAN> </DIV></DIV>
<P class=3Dgslb_rsbPParagraph>Opening that project in Blend shows the =
advantage of=20
addind data in design mode. The Window displays data in the ListView. =
But=20
there's more! You can actually edit the DataTemplate in place. Here is =
how to do=20
this: </P>
<P class=3Dgslb_rsbPParagraph>Select the ListView in the "Objects and =
Timeline"=20
(or in the main window), right click and then select "Edit Other =
Templates /=20
Edit Generated Items (ItemTemplate) / Edit Template". Notice that Blend =
doesn't=20
change to another window like usual, but instead allows editing the =
DataTemplate=20
directly in the window. Notice also how modifying one of the item will=20
immediately affect the others. This is really a very nice way to edit a=20
ListView, and makes the designers' work much easier! </P>
<DIV class=3Dgslb_rsbDivImage><IMG title=3D"Editing the DataTemplate in =
Blend"=20
alt=3D"Editing the DataTemplate in Blend"=20
src=3D"http://www.galasoft.ch/mydotnet/articles/resources/article-2007091=
401/2007091405.png">=20
</DIV>
<P class=3Dgslb_rsbPParagraph>To be complete, we must note that in-place =
editing=20
is only possible if the DataTemplate is stored in the same XAML file as =
the=20
ListView it applies to. If you move that resource to a =
ResourceDictionary=20
somewhere else in the project (or in an external "Skins" DLL), you =
cannot edit=20
in place any more, but instead the edited DataTemplate will be opened in =
a new=20
window. It's not too bad, but if that's a problem, you can always copy =
the=20
DataTemplate temporarily in the same XAML file as the ListView, edit, =
and then=20
copy it back to the original place. In Blend, copy/paste of resources =
can be=20
done by dragging-and-dropping resources in the Resources panel. =
</P></DIV>
<DIV class=3Dgslb_rsbDivFeature>
<DIV class=3Dgslb_rsbDivTitle><A id=3Dtestmode></A>Test mode </DIV>
<P class=3Dgslb_rsbPParagraph>Another great side effect of the design =
mode as=20
implemented here is the possibility to run the application in test mode. =
Testing=20
the UI in special conditions can be difficult, especially if data is =
coming from=20
the network. Having a network service generate test data in order to =
test the UI=20
can be tricky, or even impossible. Sometimes you want to create a simple =
test=20
layer and hook your UI directly to it. We will extend our example with a =
test=20
mode in the DataProvider. This boolean property is set by the Test UI. =
In our=20
simple example, the Test UI is placed in the same window as the =
ListView, and is=20
a simple checkbox. When the checkbox is checked by the user, the =
DataProvider is=20
set in test mode, and the test data is generated. To make things more=20
interesting, we will create a lot of entries using a "for" loop. Exactly =
the=20
same data is used in design mode and in test mode. However, it would be =
easy to=20
create test data on the fly in test mode, to see the UI react in a =
dynamic way.=20
</P>
<P class=3Dgslb_rsbPParagraph>Running the application in test mode also =
allows=20
visualizing the animations, which Blend often cannot display. Animations =

triggered by a change of state, for example, cannot be seen in Blend, =
but can be=20
easily simulated in test mode. </P>
<P class=3Dgslb_rsbPParagraph>Modifying the DataProvider, it now =
becomes: </P>
<DIV class=3Dgslb_rsbDivCodeSection>
<DIV class=3Dgslb_rsbDivCode><SPAN class=3Dkwrd>public</SPAN> <SPAN=20
class=3Dkwrd>class</SPAN> <SPAN class=3Dtype>DataProvider</SPAN> { <SPAN =

class=3Dkwrd>public</SPAN> <SPAN class=3Dkwrd>bool</SPAN> IsInDesignMode =
{ get {=20
<SPAN class=3Dkwrd>return</SPAN> <SPAN=20
class=3Dtype>DesignerProperties</SPAN>.GetIsInDesignMode(<SPAN=20
class=3Dkwrd>new</SPAN> <SPAN class=3Dtype>DependencyObject</SPAN>()); } =
} <SPAN=20
class=3Dkwrd>public</SPAN> <SPAN class=3Dkwrd>bool</SPAN> =
IsInRuntimeMode { get {=20
<SPAN class=3Dkwrd>return</SPAN> !IsInDesignMode; } } <SPAN=20
class=3Dkwrd>private</SPAN> <SPAN class=3Dkwrd>bool</SPAN> _isInTestMode =
=3D <SPAN=20
class=3Dkwrd>false</SPAN>; <SPAN class=3Dkwrd>public</SPAN> <SPAN=20
class=3Dkwrd>bool</SPAN> IsInTestMode { get { <SPAN =
class=3Dkwrd>return</SPAN>=20
_isInTestMode; } set { <SPAN class=3Dkwrd>if</SPAN> (_isInTestMode =
=3D=3D <SPAN=20
class=3Dkwrd>value</SPAN>) { <SPAN class=3Dkwrd>return</SPAN>; } =
_isInTestMode =3D=20
<SPAN class=3Dkwrd>value</SPAN>; MakeData(); } } <SPAN =
class=3Dkwrd>private</SPAN>=20
<SPAN class=3Dtype>ObservableCollection</SPAN>&lt;<SPAN =
class=3Dtype>Item</SPAN>&gt;=20
_myCollection =3D <SPAN class=3Dkwrd>new</SPAN> <SPAN=20
class=3Dtype>ObservableCollection</SPAN>&lt;<SPAN =
class=3Dtype>Item</SPAN>&gt;();=20
<SPAN class=3Dkwrd>public</SPAN> <SPAN=20
class=3Dtype>ObservableCollection</SPAN>&lt;<SPAN =
class=3Dtype>Item</SPAN>&gt;=20
MyCollection { get { <SPAN class=3Dkwrd>return</SPAN> _myCollection; } } =
<SPAN=20
class=3Dkwrd>public</SPAN> DataProvider() { MakeData(); } <SPAN=20
class=3Dkwrd>private</SPAN> <SPAN class=3Dkwrd>void</SPAN> MakeData() { =
<SPAN=20
class=3Dkwrd>if</SPAN> (_myCollection.Count &gt; 0) { =
_myCollection.Clear(); }=20
<SPAN class=3Dkwrd>if</SPAN> (IsInDesignMode || IsInTestMode) { <SPAN=20
class=3Dkwrd>for</SPAN> (<SPAN class=3Dkwrd>byte</SPAN> index =3D 0; =
index &lt; 255;=20
index++) { _myCollection.Add(<SPAN class=3Dkwrd>new</SPAN> <SPAN=20
class=3Dtype>Item</SPAN>(<SPAN class=3Dstr>"Test data "</SPAN> + index, =
index, <SPAN=20
class=3Dtype>Color</SPAN>.FromArgb(255, index, 187, 204))); } } <SPAN=20
class=3Dkwrd>else</SPAN> { <SPAN class=3Drem>// This is where you want =
to hook to a=20
service, for example</SPAN> <SPAN class=3Drem>// For this simple demo, =
let's=20
create dummy data</SPAN> _myCollection.Add(<SPAN class=3Dkwrd>new</SPAN> =
<SPAN=20
class=3Dtype>Item</SPAN>(<SPAN class=3Dstr>"Real data 1"</SPAN>, 1, =
<SPAN=20
class=3Dtype>Colors</SPAN>.Yellow)); _myCollection.Add(<SPAN =
class=3Dkwrd>new</SPAN>=20
<SPAN class=3Dtype>Item</SPAN>(<SPAN class=3Dstr>"Real data 2"</SPAN>, =
2, <SPAN=20
class=3Dtype>Colors</SPAN>.Green)); } } } </DIV></DIV></DIV>
<DIV class=3Dgslb_rsbDivFeature>
<DIV class=3Dgslb_rsbDivTitle><A id=3Drelease></A>Release version of =
your=20
application </DIV>
<P class=3Dgslb_rsbPParagraph>The last thing we need to take care of is =
the=20
Release version. Typically, a .NET application is developed in Debug =
version,=20
and then a Release version is created, for example using Visual Studio's =

configuration manager. Typically in Release version, test code is not =
included,=20
to avoid distributing unneeded code. </P>
<P class=3Dgslb_rsbPParagraph>Note however that the Release version must =
be tested=20
carefully, because "switching off" some code may create unwanted side =
effects!=20
To remove code from the Release version, but leave it in the Debug =
version, we=20
use the precompiler directive #if DEBUG, where DEBUG is a variable which =
is only=20
defined in the Debug version (that's the default configuration in Visual =
Studio,=20
check <A =
href=3D"http://msdn2.microsoft.com/en-us/library/2kf0yb05(vs.80).aspx"=20
target=3D_blank>MSDN</A> for details. </P>
<P class=3Dgslb_rsbPParagraph>We will enclose our test-and-design mode =
code in=20
"#if DEBUG" directives, so that it is only available in the =
application's debug=20
version. Additionally, we will create a "IsDebug" property, which will =
return=20
true if the application runs in Debug mode, and false otherwise. We will =
use=20
this property's value to hide the test UI in release mode. To do this, =
we simply=20
bind the test UI's "Visible" property to the "IsDebug" property, but we =
must=20
also use an out-of-the-box <A=20
href=3D"http://msdn2.microsoft.com/en-us/library/system.windows.controls.=
booleantovisibilityconverter.aspx"=20
target=3D_blank>BooleanToVisibilityConverter</A> to convert a boolean =
value to=20
Visibility.Visible or Visibility.Collapsed. </P>
<P class=3Dgslb_rsbPParagraph>The UI's code becomes: </P>
<DIV class=3Dgslb_rsbDivCodeSection>
<DIV class=3Dgslb_rsbDivCode><SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>Grid</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;</SPAN><SPAN =
class=3Dhtml>Grid.RowDefinitions</SPAN><SPAN=20
class=3Dkwrd>&gt;</SPAN> <SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>RowDefinition</SPAN> <SPAN class=3Dattr>Height</SPAN><SPAN=20
class=3Dkwrd>=3D"*"</SPAN><SPAN class=3Dkwrd>/&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;</SPAN><SPAN class=3Dhtml>RowDefinition</SPAN> <SPAN=20
class=3Dattr>Height</SPAN><SPAN class=3Dkwrd>=3D"Auto"</SPAN><SPAN=20
class=3Dkwrd>/&gt;</SPAN> <SPAN class=3Dkwrd>&lt;/</SPAN><SPAN=20
class=3Dhtml>Grid.RowDefinitions</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> =
<SPAN=20
class=3Dkwrd>&lt;</SPAN><SPAN class=3Dhtml>ListBox</SPAN> <SPAN=20
class=3Dattr>ItemsSource</SPAN><SPAN class=3Dkwrd>=3D"{Binding =
Source=3D{StaticResource=20
MyProvider}, Path=3DMyCollection}"</SPAN> <SPAN=20
class=3Dattr>HorizontalContentAlignment</SPAN><SPAN =
class=3Dkwrd>=3D"Stretch"</SPAN>=20
<SPAN class=3Dattr>ItemTemplate</SPAN><SPAN =
class=3Dkwrd>=3D"{DynamicResource=20
MyTemplate}"</SPAN><SPAN class=3Dkwrd>/&gt;</SPAN> <SPAN =
class=3Drem>&lt;!--Test=20
UI--&gt;</SPAN> <SPAN class=3Dkwrd>&lt;</SPAN><SPAN =
class=3Dhtml>Border</SPAN> <SPAN=20
class=3Dattr>Visibility</SPAN><SPAN class=3Dkwrd>=3D"{Binding =
Path=3DIsDebug,=20
Converter=3D{StaticResource BooleanToVisibilityConverter}, =
Source=3D{StaticResource=20
MyProvider}}"</SPAN> <SPAN class=3Dattr>Grid</SPAN>.<SPAN=20
class=3Dattr>Row</SPAN><SPAN class=3Dkwrd>=3D"1"</SPAN><SPAN =
class=3Dkwrd>&gt;</SPAN>=20
<SPAN class=3Dkwrd>&lt;</SPAN><SPAN class=3Dhtml>CheckBox</SPAN> <SPAN=20
class=3Dattr>Content</SPAN><SPAN class=3Dkwrd>=3D"Test mode"</SPAN> =
<SPAN=20
class=3Dattr>Margin</SPAN><SPAN class=3Dkwrd>=3D"8,8,0,8"</SPAN> <SPAN=20
class=3Dattr>Click</SPAN><SPAN =
class=3Dkwrd>=3D"CheckBox_Click"</SPAN><SPAN=20
class=3Dkwrd>/&gt;</SPAN> <SPAN class=3Dkwrd>&lt;/</SPAN><SPAN=20
class=3Dhtml>Border</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> <SPAN=20
class=3Dkwrd>&lt;/</SPAN><SPAN class=3Dhtml>Grid</SPAN><SPAN =
class=3Dkwrd>&gt;</SPAN>=20
</DIV></DIV>
<P class=3Dgslb_rsbPParagraph>with: </P>
<DIV class=3Dgslb_rsbDivCodeSection>
<DIV class=3Dgslb_rsbDivCode><SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>Window.Resources</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> <SPAN =

class=3Dkwrd>&lt;</SPAN><SPAN =
class=3Dhtml>ResourceDictionary</SPAN><SPAN=20
class=3Dkwrd>&gt;</SPAN> <SPAN class=3Dkwrd>&lt;</SPAN><SPAN=20
class=3Dhtml>BooleanToVisibilityConverter</SPAN> <SPAN=20
class=3Dattr>x:Key</SPAN><SPAN=20
class=3Dkwrd>=3D"BooleanToVisibilityConverter"</SPAN><SPAN =
class=3Dkwrd>/&gt;</SPAN>=20
<SPAN class=3Drem>&lt;!--...--&gt;</SPAN> <SPAN =
class=3Dkwrd>&lt;/</SPAN><SPAN=20
class=3Dhtml>ResourceDictionary</SPAN><SPAN class=3Dkwrd>&gt;</SPAN> =
<SPAN=20
class=3Dkwrd>&lt;/</SPAN><SPAN class=3Dhtml>Window.Resources</SPAN><SPAN =

class=3Dkwrd>&gt;</SPAN> </DIV></DIV>
<P class=3Dgslb_rsbPParagraph>As for the DataProvider's full code, it is =
now: </P>
<DIV class=3Dgslb_rsbDivCodeSection>
<DIV class=3Dgslb_rsbDivCode><SPAN class=3Dkwrd>public</SPAN> <SPAN=20
class=3Dkwrd>class</SPAN> <SPAN class=3Dtype>DataProvider</SPAN> { <SPAN =

class=3Dkwrd>public</SPAN> <SPAN class=3Dkwrd>bool</SPAN> IsInDesignMode =
{ get {=20
<SPAN class=3Dkwrd>return</SPAN> <SPAN=20
class=3Dtype>DesignerProperties</SPAN>.GetIsInDesignMode(<SPAN=20
class=3Dkwrd>new</SPAN> <SPAN class=3Dtype>DependencyObject</SPAN>()); } =
} <SPAN=20
class=3Dkwrd>public</SPAN> <SPAN class=3Dkwrd>bool</SPAN> =
IsInRuntimeMode { get {=20
<SPAN class=3Dkwrd>return</SPAN> !IsInDesignMode; } } <SPAN=20
class=3Dkwrd>public</SPAN> <SPAN class=3Dkwrd>bool</SPAN> IsDebug { get =
{ <SPAN=20
class=3Dpreproc>#if</SPAN> DEBUG <SPAN class=3Dkwrd>return</SPAN> <SPAN=20
class=3Dkwrd>true</SPAN>; <SPAN class=3Dpreproc>#else</SPAN> <SPAN=20
class=3Dkwrd>return</SPAN> <SPAN class=3Dkwrd>false</SPAN>; <SPAN=20
class=3Dpreproc>#endif</SPAN> } } <SPAN class=3Dpreproc>#if</SPAN> DEBUG =
<SPAN=20
class=3Dkwrd>private</SPAN> <SPAN class=3Dkwrd>bool</SPAN> _isInTestMode =
=3D <SPAN=20
class=3Dkwrd>false</SPAN>; <SPAN class=3Dkwrd>public</SPAN> <SPAN=20
class=3Dkwrd>bool</SPAN> IsInTestMode { get { <SPAN =
class=3Dkwrd>return</SPAN>=20
_isInTestMode; } set { <SPAN class=3Dkwrd>if</SPAN> (_isInTestMode =
=3D=3D <SPAN=20
class=3Dkwrd>value</SPAN>) { <SPAN class=3Dkwrd>return</SPAN>; } =
_isInTestMode =3D=20
<SPAN class=3Dkwrd>value</SPAN>; MakeData(); } } <SPAN =
class=3Dpreproc>#endif</SPAN>=20
<SPAN class=3Dkwrd>private</SPAN> <SPAN=20
class=3Dtype>ObservableCollection</SPAN>&lt;<SPAN =
class=3Dtype>Item</SPAN>&gt;=20
_myCollection =3D <SPAN class=3Dkwrd>new</SPAN> <SPAN=20
class=3Dtype>ObservableCollection</SPAN>&lt;<SPAN =
class=3Dtype>Item</SPAN>&gt;();=20
<SPAN class=3Dkwrd>public</SPAN> <SPAN=20
class=3Dtype>ObservableCollection</SPAN>&lt;<SPAN =
class=3Dtype>Item</SPAN>&gt;=20
MyCollection { get { <SPAN class=3Dkwrd>return</SPAN> _myCollection; } } =
<SPAN=20
class=3Dkwrd>public</SPAN> DataProvider() { MakeData(); } <SPAN=20
class=3Dkwrd>private</SPAN> <SPAN class=3Dkwrd>void</SPAN> MakeData() { =
<SPAN=20
class=3Dkwrd>if</SPAN> (_myCollection.Count &gt; 0) { =
_myCollection.Clear(); }=20
<SPAN class=3Dpreproc>#if</SPAN> DEBUG <SPAN class=3Dkwrd>if</SPAN> =
(IsInDesignMode=20
|| IsInTestMode) { <SPAN class=3Dkwrd>for</SPAN> (<SPAN =
class=3Dkwrd>byte</SPAN>=20
index =3D 0; index &lt; 255; index++) { _myCollection.Add(<SPAN=20
class=3Dkwrd>new</SPAN> <SPAN class=3Dtype>Item</SPAN>(<SPAN =
class=3Dstr>"Test data=20
"</SPAN> + index, index, <SPAN class=3Dtype>Color</SPAN>.FromArgb(255, =
index, 187,=20
204))); } } <SPAN class=3Dkwrd>else</SPAN> <SPAN =
class=3Dpreproc>#endif</SPAN> {=20
<SPAN class=3Drem>// This is where you want to hook to a service, for=20
example</SPAN> <SPAN class=3Drem>// For this simple demo, let's create =
dummy=20
data</SPAN> _myCollection.Add(<SPAN class=3Dkwrd>new</SPAN> <SPAN=20
class=3Dtype>Item</SPAN>(<SPAN class=3Dstr>"Real data 1"</SPAN>, 1, =
<SPAN=20
class=3Dtype>Colors</SPAN>.Yellow)); _myCollection.Add(<SPAN =
class=3Dkwrd>new</SPAN>=20
<SPAN class=3Dtype>Item</SPAN>(<SPAN class=3Dstr>"Real data 2"</SPAN>, =
2, <SPAN=20
class=3Dtype>Colors</SPAN>.Green)); } } } </DIV></DIV></DIV>
<DIV class=3Dgslb_rsbDivFeature>
<DIV class=3Dgslb_rsbDivTitle><A id=3Ddownload></A>Download </DIV>
<P class=3Dgslb_rsbPParagraph>A <A=20
href=3D"http://www.galasoft.ch/mydotnet/articles/resources/article-200709=
1401/GalaSoftLb.Wpf.DesignAndTestMode.zip"=20
target=3D_blank>sample project</A> is available for download. It's a =
Visual Studio=20
2008 project. If you want to get a Visual Studio 2005 project instead, =
send me=20
an email. The project demonstrates the techniques used here. </P></DIV>
<DIV class=3Dgslb_rsbDivFeature>
<DIV class=3Dgslb_rsbDivTitle><A id=3Dconclusion></A>Conclusion </DIV>
<P class=3Dgslb_rsbPParagraph>I think that everyone will agree that =
having data=20
showing up in Blend will make a designer's life much easier. Using the=20
integrated "Create test data" feature is a help, but often it is not =
enough to=20
visualize a complex UI. Using XML data is a good alternative, but only =
if the=20
runtime data are also in XML form. Since the binding to an =
XmlDataProvider is=20
using a different syntax than to CLR collections, you'll have to change =
the=20
syntax in runtime mode, which is annoying. </P>
<P class=3Dgslb_rsbPParagraph>Using the same objects in design mode and =
runtime=20
mode is a great advantage. This allows in-place editing in Blend and in =
Cider,=20
and provides a test mode almost for free, allowing to submit the UI to =
special=20
conditions difficult to reproduce in real life, but which must be tested =
anyway.=20
All this speaks in favor of a design as introduced in this article. I =
hope that=20
it has made been clear enough, and will be happy to answer questions if =
you have=20
some! </P></DIV>
<TABLE class=3Dgslb_tableHistory cellSpacing=3D0>
  <TBODY>
  <TR>
    <TD class=3Dgslb_tdHistory>Date</TD>
    <TD class=3Dgslb_tdHistory>Version</TD>
    <TD class=3Dgslb_tdHistory><A id=3Dhistory></A>Description =
</TD></TR>
  <TR>
    <TD class=3Dgslb_tdHistory>14.09.2007</TD>
    <TD class=3Dgslb_tdHistory>V1.0.0</TD>
    <TD class=3Dgslb_tdHistory>First published version=20
</TD></TR></TBODY></TABLE></DIV></BODY></HTML>

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.galasoft.ch/logo/vsmallhead.gif

R0lGODlhOAA4APcAAAAAAP///1w8PP+AgKBoGKigkDy8fDw8vAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAUALAAAAAA4ADgA
QAj/AAsIHEiwoMGDCBMqXDgQAIAAEB0yJOiQAAGHACYudAixY0eMIEMCsEiypESNFDGWXMlSpMuX
EyuynNnypU2RClXSvPjQo8+fN0OiLADyJ8QBSAd0TKoUKMahCUFCbfh06kGOPqsi1ElS61SbO4OG
5DmU686aYm1uHHl2Jta0ateyxWrUZ9O6H3FaTQlX796cGf+e/FsQYwCvMUcOJkyU7uHFW2VahGzV
sNPABs12pYzSMVieQTdjLguy7eS+UjtLNn0adWrAbFmbdO33amzZomkjLny7rWOPuuXWxBsgKd6g
qnsaRWrX7t2snJP/Jg59N+PIta9v1M6danSG1gkLooU6Xrvh8NjJcqeLnvfc76SVRxydXjRjy8Dh
a1YvWD70yDS1J1d1qNXU33xjrdTXaZWJ5Ftw8a12lm70gSfhgxAmhltutGm4YWsUrvUhhxnaNiKI
IUbVG24UvmYii/491qGKrE13GVwiBhgjc0c9J+NNHm5GXXHUxZWYjUf95CORRrmoEX5KNsWUlEsi
KB6UHlVZpZNXFjXkj/CZ11d3ZP4VEAA7

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.galasoft.ch/logo/header.gif

R0lGODlhgAKvAPcAAAAAAP///1w8PP+AgKBoGKigkDy8fDw8vAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAUALAAAAACAAq8A
AAj/AAsIHEiwoMGDCBMqXMiwocOHECNKnEixosWLGDNq3Mixo8ePIEOKHEmypMmTKFOqXMmypcuX
MGPKnEmzps2bOHPq3Mmzp8+fQIMKHUq0qNGjKwEAQMq0qdOnUKNKBam06tKpWLNq3cq1K02rSo1a
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
F07d28Ad3MI93MRd3MZ93Mid3GUREAA7

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.galasoft.ch/mydotnet/articles/resources/article-2007091401/2007091401.png

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
j/Iob7v4f2ll8TyeeQIHAAAAAElFTkSuQmCC

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.galasoft.ch/mydotnet/articles/resources/article-2007091401/2007091402.png

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
/wECGGmKRIXMXAAAAABJRU5ErkJggg==

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.galasoft.ch/mydotnet/articles/resources/article-2007091401/2007091403.png

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

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.galasoft.ch/mydotnet/articles/resources/article-2007091401/2007091404.png

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

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.galasoft.ch/mydotnet/articles/resources/article-2007091401/2007091405.png

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
Sec7W1HWowAAAABJRU5ErkJggg==

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.galasoft.ch/layout/new.gslb.brown.css

BODY {
	FONT-SIZE: 80%; MARGIN: 0px 0px 2em; FONT-FAMILY: Sans-Serif; =
BACKGROUND-COLOR: #a8a18f; TEXT-ALIGN: center
}
A {
	FONT-WEIGHT: bold; COLOR: #6900b2; TEXT-DECORATION: none
}
A:visited {
	FONT-WEIGHT: bold; COLOR: #6900b2; TEXT-DECORATION: none
}
A:hover {
	FONT-WEIGHT: bold; COLOR: #6900b2; BORDER-BOTTOM: #6900b2 1px dotted
}
IMG {
	BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; BORDER-LEFT-STYLE: =
none; BORDER-BOTTOM-STYLE: none
}
#divWarning {
	BORDER-RIGHT: blue 2px solid; PADDING-RIGHT: 4px; BORDER-TOP: blue 2px =
solid; DISPLAY: block; PADDING-LEFT: 4px; PADDING-BOTTOM: 4px; MARGIN: =
16px auto auto; BORDER-LEFT: blue 2px solid; WIDTH: 400px; PADDING-TOP: =
4px; BORDER-BOTTOM: blue 2px solid; BACKGROUND-COLOR: white; TEXT-ALIGN: =
left
}
.gslb_mainButtons {
	FONT-WEIGHT: bold; FONT-SIZE: 1em; WIDTH: 8em; COLOR: #e8d1b5; =
BACKGROUND-COLOR: #a3681c
}
.gslb_mainTextFields {
	FONT-WEIGHT: bold; FONT-SIZE: 1em; WIDTH: 40em; COLOR: #a3681c; =
FONT-FAMILY: Sans-Serif; BACKGROUND-COLOR: #e8d1b5; TEXT-ALIGN: left
}
.gslb_mainDivImageTitle {
=09
}
.gslb_mainImgTitle {
	MARGIN-TOP: 0.8em; PADDING-BOTTOM: 1.5em; BORDER-BOTTOM: #a3681c 2px =
solid
}
.gslb_mainDivSummary {
	FONT-SIZE: 0.9em; MARGIN: 0.4em 0.2em; COLOR: black
}
.gslb_mainDivSummary A {
	FONT-WEIGHT: bold; COLOR: #6900b2
}
.gslb_mainLnkHome {
	BORDER-RIGHT: #a3681c 2px solid; BORDER-TOP: #a3681c 2px solid; FILTER: =
alpha(opacity=3D50); BORDER-LEFT: #a3681c 2px solid; BORDER-BOTTOM: =
#a3681c 2px solid; POSITION: absolute; BACKGROUND-COLOR: #e8d1b5; =
-moz-opacity: 0.5
}
.gslb_mainLnkHome:hover {
	BORDER-RIGHT: #6900b2 2px solid; BORDER-TOP: #6900b2 2px solid; FILTER: =
alpha(opacity=3D100); BORDER-LEFT: #6900b2 2px solid; BORDER-BOTTOM: =
#6900b2 2px solid; -moz-opacity: 1
}
.gslb_mainDivSmallBrown {
	FONT-WEIGHT: bold; FONT-SIZE: 0.9em; COLOR: #a3681c
}
.gslb_mainDivBig {
	FONT-WEIGHT: bold; FONT-SIZE: 2em; MARGIN: auto; COLOR: #a3681c; =
FONT-STYLE: italic; TEXT-ALIGN: left
}
.gslb_mainDivExplainKagi {
	MARGIN-TOP: 0.8em; FONT-WEIGHT: bold; FONT-SIZE: 0.9em; COLOR: #a3681c
}
.gslb_tableHistory {
	BORDER-RIGHT: black 1px solid; BORDER-TOP: black 1px solid; MARGIN-TOP: =
1em; BORDER-LEFT: black 1px solid; WIDTH: 100%; BORDER-BOTTOM: black 1px =
solid
}
.gslb_tdHistory {
	BORDER-RIGHT: black 1px solid; PADDING-RIGHT: 2px; BORDER-TOP: black =
1px solid; PADDING-LEFT: 2px; PADDING-BOTTOM: 2px; VERTICAL-ALIGN: top; =
BORDER-LEFT: black 1px solid; PADDING-TOP: 2px; BORDER-BOTTOM: black 1px =
solid; TEXT-ALIGN: left
}

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.galasoft.ch/layout/gslb.realsimpleblog.brown.css

.gslb_rsb {
=09
}
.gslb_rsbDivPosting {
	BORDER-RIGHT: #a3681c 1px solid; PADDING-RIGHT: 1em; BORDER-TOP: =
#a3681c 1px solid; PADDING-LEFT: 1em; FONT-SIZE: 1em; PADDING-BOTTOM: =
1em; MARGIN: auto; BORDER-LEFT: #a3681c 1px solid; PADDING-TOP: 1em; =
BORDER-BOTTOM: #a3681c 1px solid; BACKGROUND-COLOR: #e8d1b5; TEXT-ALIGN: =
justify
}
.gslb_rsbDivPostingEx {
	BORDER-RIGHT: #a3681c 1px solid; PADDING-RIGHT: 0.5em; BORDER-TOP: =
#a3681c 1px solid; PADDING-LEFT: 0.5em; FONT-SIZE: 1em; PADDING-BOTTOM: =
0em; MARGIN: 0em 0.2em; BORDER-LEFT: #a3681c 1px solid; COLOR: #a3681c; =
PADDING-TOP: 0em; BORDER-BOTTOM: #a3681c 1px solid; BACKGROUND-COLOR: =
white; TEXT-ALIGN: justify
}
.gslb_rsb A {
	FONT-WEIGHT: bold; COLOR: #6900b2; TEXT-DECORATION: none
}
.gslb_rsb A:visited {
	FONT-WEIGHT: bold; COLOR: #6900b2; TEXT-DECORATION: none
}
.gslb_rsb A:hover {
	FONT-WEIGHT: bold; COLOR: #6900b2; TEXT-DECORATION: none
}
.gslb_rsb A:hover {
	BORDER-BOTTOM: #6900b2 1px dotted
}
.gslb_rsbDivPostingTitle {
	FONT-WEIGHT: bold; FONT-SIZE: 1.5em; COLOR: #a3681c
}
.gslb_rsbDivAnnouncement {
	BORDER-RIGHT: #a3681c 2px solid; PADDING-RIGHT: 0.5em; BORDER-TOP: =
#a3681c 2px solid; PADDING-LEFT: 0.5em; FONT-WEIGHT: bold; FONT-SIZE: =
1em; MARGIN-BOTTOM: 1em; PADDING-BOTTOM: 0.5em; BORDER-LEFT: #a3681c 2px =
solid; PADDING-TOP: 0.5em; BORDER-BOTTOM: #a3681c 2px solid
}
.gslb_rsbDivDate {
	FONT-WEIGHT: bold; FONT-SIZE: 1em
}
.gslb_rsbDivFeature {
	BORDER-RIGHT: #999999 2px solid; PADDING-RIGHT: 0.8em; BORDER-TOP: =
#999999 2px solid; MARGIN-TOP: 0.5em; PADDING-LEFT: 0.8em; =
PADDING-BOTTOM: 0em; BORDER-LEFT: #999999 2px solid; PADDING-TOP: 0em; =
BORDER-BOTTOM: #999999 2px solid
}
.gslb_rsbDivFeatureEx {
	BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; BORDER-LEFT-STYLE: =
none; BORDER-BOTTOM-STYLE: none
}
.gslb_rsbDivTitle {
	MARGIN-TOP: 0.5em; FONT-WEIGHT: bold; FONT-SIZE: 1.2em; COLOR: #a3681c
}
.gslb_rsbPParagraph {
	MARGIN-TOP: 0.5em; MARGIN-BOTTOM: 0.5em
}
.gslb_rsbDivFrame {
	BORDER-RIGHT: #a3681c 2px solid; PADDING-RIGHT: 0.5em; BORDER-TOP: =
#a3681c 2px solid; MARGIN-TOP: 0.5em; PADDING-LEFT: 0.5em; FONT-SIZE: =
1em; MARGIN-BOTTOM: 0.5em; PADDING-BOTTOM: 0em; BORDER-LEFT: #a3681c 2px =
solid; PADDING-TOP: 0em; BORDER-BOTTOM: #a3681c 2px solid
}
.gslb_rsbList LI {
	MARGIN-TOP: 0.5em; FONT-SIZE: 1em; MARGIN-BOTTOM: 0.5em
}
.gslb_rsbDivImage {
	MARGIN-TOP: 0.5em; MARGIN-BOTTOM: 0.5em
}
.gslb_rsbDivImage IMG {
	MARGIN-BOTTOM: 0.4em
}
.gslb_rsbDivImage IMG {
	BORDER-RIGHT: black 0em solid; BORDER-TOP: black 0em solid; =
BORDER-LEFT: black 0em solid; BORDER-BOTTOM: black 0em solid
}
.gslb_rsbDivThumbnails IMG {
	BORDER-RIGHT: black 0em solid; BORDER-TOP: black 0em solid; =
BORDER-LEFT: black 0em solid; BORDER-BOTTOM: black 0em solid
}
.gslb_rsbDivThumbnails IMG {
	MARGIN-RIGHT: 1em
}
.gslb_rsbDivImage A {
	BORDER-RIGHT: #6900b2 2px solid; BORDER-TOP: #6900b2 2px solid; =
BORDER-LEFT: #6900b2 2px solid; BORDER-BOTTOM: #6900b2 2px solid
}
.gslb_rsbDivImage A:visited {
	BORDER-RIGHT: #6900b2 2px solid; BORDER-TOP: #6900b2 2px solid; =
BORDER-LEFT: #6900b2 2px solid; BORDER-BOTTOM: #6900b2 2px solid
}
.gslb_rsbDivThumbnails A {
	BORDER-RIGHT: #6900b2 2px solid; BORDER-TOP: #6900b2 2px solid; =
BORDER-LEFT: #6900b2 2px solid; BORDER-BOTTOM: #6900b2 2px solid
}
.gslb_rsbDivThumbnails A:visited {
	BORDER-RIGHT: #6900b2 2px solid; BORDER-TOP: #6900b2 2px solid; =
BORDER-LEFT: #6900b2 2px solid; BORDER-BOTTOM: #6900b2 2px solid
}
.gslb_rsbDivImage A:hover {
	BORDER-RIGHT: #6900b2 2px dotted; BORDER-TOP: #6900b2 2px dotted; =
BORDER-LEFT: #6900b2 2px dotted; BORDER-BOTTOM: #6900b2 2px dotted
}
.gslb_rsbDivThumbnails A:hover {
	BORDER-RIGHT: #6900b2 2px dotted; BORDER-TOP: #6900b2 2px dotted; =
BORDER-LEFT: #6900b2 2px dotted; BORDER-BOTTOM: #6900b2 2px dotted
}
.gslb_rsbDivThumbnails {
	MARGIN-BOTTOM: 0.5em; TEXT-ALIGN: left
}
.gslb_rsbSpanTextThumbnails {
	FONT-WEIGHT: bold; FONT-SIZE: 1em; COLOR: #a3681c
}
.gslb_rsbDivLegend {
	FONT-WEIGHT: bold; FONT-SIZE: 1em; COLOR: #a3681c
}
.gslb_rsbSpanTextThumbnails A {
	BORDER-RIGHT: black 0em solid; BORDER-TOP: black 0em solid; =
FONT-WEIGHT: bold; BORDER-LEFT: black 0em solid; COLOR: #6900b2; =
BORDER-BOTTOM: black 0em solid; TEXT-DECORATION: none
}
.gslb_rsbSpanTextThumbnails A:visited {
	BORDER-RIGHT: black 0em solid; BORDER-TOP: black 0em solid; =
FONT-WEIGHT: bold; BORDER-LEFT: black 0em solid; COLOR: #6900b2; =
BORDER-BOTTOM: black 0em solid; TEXT-DECORATION: none
}
.gslb_rsbDivLegend A {
	BORDER-RIGHT: black 0em solid; BORDER-TOP: black 0em solid; =
FONT-WEIGHT: bold; BORDER-LEFT: black 0em solid; COLOR: #6900b2; =
BORDER-BOTTOM: black 0em solid; TEXT-DECORATION: none
}
.gslb_rsbDivLegend A:visited {
	BORDER-RIGHT: black 0em solid; BORDER-TOP: black 0em solid; =
FONT-WEIGHT: bold; BORDER-LEFT: black 0em solid; COLOR: #6900b2; =
BORDER-BOTTOM: black 0em solid; TEXT-DECORATION: none
}
.gslb_rsbSpanTextThumbnails A:hover {
	BORDER-RIGHT: black 0em solid; BORDER-TOP: black 0em solid; =
BORDER-LEFT: black 0em solid; BORDER-BOTTOM: #6900b2 1px dotted
}
.gslb_rsbDivLegend A:hover {
	BORDER-RIGHT: black 0em solid; BORDER-TOP: black 0em solid; =
BORDER-LEFT: black 0em solid; BORDER-BOTTOM: #6900b2 1px dotted
}
.gslb_rsbDivError {
	BORDER-RIGHT: red 2px solid; PADDING-RIGHT: 0.5em; BORDER-TOP: red 2px =
solid; MARGIN-TOP: 1em; PADDING-LEFT: 0.5em; FONT-WEIGHT: bold; =
FONT-SIZE: 1em; PADDING-BOTTOM: 0.5em; BORDER-LEFT: red 2px solid; =
PADDING-TOP: 0.5em; BORDER-BOTTOM: red 2px solid
}
.gslb_rsbDivAbout {
	FONT-WEIGHT: bold; FONT-SIZE: 0.8em; TEXT-ALIGN: right
}
.gslb_rsbDivCodeSection {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0em =
0em 0.5em; PADDING-TOP: 0px
}
.gslb_rsbDivCode {
	PADDING-RIGHT: 1em; PADDING-LEFT: 1em; FONT-SIZE: 1em; MARGIN-BOTTOM: =
0.4em; PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT-FAMILY: Monospace; =
WHITE-SPACE: pre; BACKGROUND-COLOR: #f3ddff; TEXT-ALIGN: left
}
.gslb_rsbImgRssFeed {
	BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: =
0px; BORDER-RIGHT-WIDTH: 0px
}

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Location: http://www.galasoft.ch/layout/manoli.csharp.css

.gslb_rsbDivCode .rem {
	COLOR: #008000
}
.gslb_rsbDivCode .kwrd {
	COLOR: #0000ff
}
.gslb_rsbDivCode .str {
	COLOR: #a31515
}
.gslb_rsbDivCode .op {
	COLOR: #0000c0
}
.gslb_rsbDivCode .preproc {
	COLOR: #0000ff
}
.gslb_rsbDivCode .asp {
	BACKGROUND-COLOR: #ffff00
}
.gslb_rsbDivCode .html {
	COLOR: #800000
}
.gslb_rsbDivCode .attr {
	COLOR: #ff0000
}
.gslb_rsbDivCode .type {
	COLOR: #2b91af
}
.gslb_rsbDivCode .alt {
	MARGIN: 0em; WIDTH: 100%; BACKGROUND-COLOR: #f4f4f4
}
.gslb_rsbDivCode .lnum {
	COLOR: #606060
}

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.galasoft.ch/script/gslb.object.js

/* <gslb_version version=3D"V1.0.0" /> */
/* Copyright =A9 GalaSoft Laurent Bugnion 2007 */

//***********************************************************************=
******
//* gslb.Object.js
//***********************************************************************=
******
//* Project Name           : Utilities
//* Class Name             : Object
//* Target Hardware        : PC
//* Target                 : Netscape 4+, Internet explorer 4+
//* Language/Compiler      : JavaScript 1.2
//* Author                 : Laurent Bugnion
//* Created                : 20.01.2007
//***********************************************************************=
******
//* Description:
//* Set of utility functions.
//* Last Base Level: BL0001
//***********************************************************************=
******

//***********************************************************************=
******
//* Imports =
*******************************************************************
//***********************************************************************=
******

// using none

// Create namespace
if ( !window.gslb )
{
  window.gslb =3D {};
}

//***********************************************************************=
******
//* Constructor =
***************************************************************
//***********************************************************************=
******

gslb.Object =3D function()
{
}

//***********************************************************************=
******
//* Constants =
*****************************************************************
//***********************************************************************=
******

/// <summary type=3D"String">
/// This class's name.
/// </summary>
gslb.Object._NAME =3D "Object";
/// <summary type=3D"String">
/// This class's version.
/// </summary>
gslb.Object._VERSION =3D "V1.0.0";
/// <summary type=3D"String">
/// This class's date.
/// </summary>
gslb.Object._DATE =3D "20.01.2007";

//***********************************************************************=
******
//* Static methods =
************************************************************
//***********************************************************************=
******

// =
-------------------------------------------------------------------------=
---
gslb.Object.extend =3D function( Derived, Base )
{
  function Inheritance() {}
 =20
  Inheritance.prototype =3D Base.prototype;

  Derived.prototype =3D new Inheritance();
  Derived.prototype.constructor =3D Derived;
  Derived.Base =3D Base.prototype;
  Derived.Base.fnConstructor =3D Base;
}
------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.galasoft.ch/script/gslb.positionedbase.js

=EF=BB=BF/* <gslb_version version=3D"V1.0.1" /> */
/* Copyright =C2=A9 GalaSoft Laurent Bugnion 2007 */

//***********************************************************************=
******
//* gslb.positionedbase.js
//***********************************************************************=
******
//* Control name            : PositionedBase
//* Target Hardware         : PC
//* Target                  : Netscape 6+, Internet explorer 5+
//* Language/Compiler       : ECMAScript V3
//* Author                  : Laurent Bugnion (LBu)
//* Created                 : 16.01.2007
//***********************************************************************=
******
//* Description: see constructor
//* Last Base Level: BL0002
//***********************************************************************=
******

//***********************************************************************=
******
//* Imports =
*******************************************************************
//***********************************************************************=
******

// using gslb.Cookie (optional)

//***********************************************************************=
******
//* Constructor =
***************************************************************
//***********************************************************************=
******

// Create namespace
if ( !window.gslb )
{
  window.gslb =3D {};
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Base class for PositionedNode and DraggedNode. Handles common =
functionalities
/// like saving cookies.
/// </summary>
/// <param name=3D"oOptions" type=3D"Object">An Options object, =
constructed using literal notation.
/// All values are optional.
/// <br />bSaveRelocationInCookie: If true, the new position after =
relocate was called will be
/// saved in a cookie. Note: Setting this value to false doesn't delete =
a cookie if it
/// had been set previously. To delete the cookie, you must explicitly =
call the method
/// deleteCookie. Default: false.
/// <br />iCookieExpirationHours: If bSaveRelocationInCookie is true, =
this specifies the number
/// of hours during which the Node's new location will be saved in a =
cookie. If
/// iCookieExpirationHours is set to 0, the cookie will only be valid =
for the
/// current session. Default: 0.</param>
gslb.PositionedBase =3D function( nNode )
{
  if ( !nNode
    || !nNode.id
    || nNode.style =3D=3D null
    || nNode.style.left =3D=3D null
    || nNode.style.top =3D=3D null
    || nNode.offsetTop =3D=3D null
    || nNode.offsetLeft =3D=3D null )
  {
    throw "Impossible to create positioned node (base), please check the =
documentation";
  }

  =
//***********************************************************************=
****
  //* Attributes =
**************************************************************
  =
//***********************************************************************=
****

  /// <summary>
  /// The DOM node which this control modifies.
  /// </summary>
  this.m_nNode =3D nNode;
  /// <summary type=3D"String">
  /// The ID used to save cookies with the current state.
  /// </summary>
  this.m_strCookieId =3D "glsb.PositionedBase." + nNode.id;
 =20
  // Options
 =20
  /// <summary>
  /// If true, the new position after relocate was called will be
  /// saved in a cookie. Default: false.
  /// </summary>
  this.m_bSaveRelocationInCookie =3D null; // Initialize at null to =
avoid problems
                                         // when setting options the =
first time
  /// <summary>
  /// If bSaveRelocationInCookie is true, this specifies the number
  /// of hours during which the Node's new location will be saved
  /// in a cookie. Default: 1.
  /// </summary>
  this.m_iCookieExpirationHours =3D 1;
}

//***********************************************************************=
******
//* Enums =
*********************************************************************
//***********************************************************************=
******

//***********************************************************************=
******
//* Constants =
*****************************************************************
//***********************************************************************=
******

/// <summary type=3D"string">
/// This class's name.
/// </summary>
gslb.PositionedBase._NAME =3D "gslb.PositionedBase";
/// <summary type=3D"string">
/// This class's version.
/// </summary>
gslb.PositionedBase._VERSION =3D "V1.0.1";
/// <summary type=3D"string">
/// This class's date.
/// </summary>
gslb.PositionedBase._DATE =3D "31.01.2007";

//***********************************************************************=
******
//* Static attributes =
*********************************************************
//***********************************************************************=
******

//***********************************************************************=
******
//* Static methods =
************************************************************
//***********************************************************************=
******

//***********************************************************************=
******
//* Methods =
*******************************************************************
//***********************************************************************=
******

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Sets the options for this instance.
/// </summary>
/// <param name=3D"oOptions" type=3D"Object">An Options object, =
constructed using literal notation.
/// All values are optional.
/// <br />bSaveRelocationInCookie: If true, the new position after =
relocate was called will be
/// saved in a cookie. Note: Setting this value to false doesn't delete =
a cookie if it
/// had been set previously. To delete the cookie, you must explicitly =
call the method
/// deleteCookie. Default: false.
/// <br />iCookieExpirationHours: If bSaveRelocationInCookie is true, =
this specifies the number
/// of hours during which the Node's new location will be saved
/// in a cookie. Default: 0.</param>
gslb.PositionedBase.prototype.setOptions =3D function( oOptions )
{
  if ( oOptions )
  {
    if ( oOptions.iCookieExpirationHours !=3D null )
    {
      this.m_iCookieExpirationHours =3D oOptions.iCookieExpirationHours;
    }
    if ( oOptions.bSaveRelocationInCookie !=3D null )
    {
      var bCurrentSave =3D this.m_bSaveRelocationInCookie;
      this.m_bSaveRelocationInCookie =3D =
oOptions.bSaveRelocationInCookie;

      // If the option to save the cookie changes to true, save current =
position
      if ( bCurrentSave =3D=3D false // Do not use !bCurrentSave to =
avoid problems when initializing
        && oOptions.bSaveRelocationInCookie )
      {
        this.saveCookieIfNeeded();
      }
    }
  }
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Restores the saved position of the Node, according to the value in =
the cookie.
/// Note: the position wil only be restored if bSaveRelocationInCookie =
is true
/// in the options.
/// </summary>
gslb.PositionedBase.prototype.restorePosition =3D function()
{
  if ( !this.m_bSaveRelocationInCookie )
  {
    return;
  }
  if ( !gslb.Cookie )
  {
    return;
  }
 =20
  var strPosition =3D gslb.Cookie.getCookie( this.m_strCookieId );
  if ( strPosition )
  {
    var astrPosition =3D strPosition.split( ";" );
    if ( astrPosition.length =3D=3D 2 )
    {
      this.m_nNode.style.left =3D astrPosition[ 0 ];
      this.m_nNode.style.top =3D astrPosition[ 1 ];
    }
  }
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Saves the current position in a cookie. The position will only be =
saved if
/// bSaveRelocationInCookie is true in the options.
/// If iCookieExpirationHours is set to 0, the cookie will only be valid =
for the
/// current session. If the value is bigger than 0, it will be set for a =
corresponding
/// number of hours.
/// </summary>
gslb.PositionedBase.prototype.saveCookieIfNeeded =3D function()
{
  if ( !gslb.Cookie )
  {
    return;
  }

  if ( this.m_bSaveRelocationInCookie )
  {
    if ( this.m_iCookieExpirationHours >=3D 0 )
    {
      if ( !gslb.Cookie )
      {
        throw "Error in PositionedBase: gslb.Cookie not found";
      }
      var strPosition =3D "" + this.m_nNode.style.left + ";" + =
this.m_nNode.style.top;
      if ( this.m_iCookieExpirationHours > 0 )
      {
        gslb.Cookie.setCookie( this.m_strCookieId,
          strPosition,
          gslb.Cookie.getDateTimeFromNow( 0, 0, 0, =
this.m_iCookieExpirationHours, 0, 0, 0 ) );
      }
      else
      {
        gslb.Cookie.setCookie( this.m_strCookieId, strPosition );
      }
    }
  }
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Deletes the cookie with the Mode's saved position.
/// Note: Setting bSaveRelocationInCookie to false in the options =
doesn't delete a cookie if it
/// had been set previously. To delete the cookie, you must explicitly =
call the method
/// deleteCookie.
/// </summary>
gslb.PositionedBase.prototype.deleteCookie =3D function()
{
  if ( !gslb.Cookie )
  {
    return;
  }
  gslb.Cookie.deleteCookie( this.m_strCookieId );
}

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.galasoft.ch/script/gslb.csslength.js

=EF=BB=BF/* <gslb_version version=3D"V1.1.0" /> */
/* Copyright =C2=A9 GalaSoft Laurent Bugnion 2007 */

//***********************************************************************=
******
//* gslb.csslength.js
//***********************************************************************=
******
//* Object name             : CssLength
//* Target Hardware         : PC
//* Target                  : Netscape 6+, Internet explorer 5+
//* Language/Compiler       : ECMAScript V3
//* Author                  : Laurent Bugnion (LBu)
//* Created                 : 25.01.2007
//***********************************************************************=
******
//* Description: see constructor
//* Last Base Level: BL0002
//***********************************************************************=
******

//***********************************************************************=
******
//* Imports =
*******************************************************************
//***********************************************************************=
******

//***********************************************************************=
******
//* Constructor =
***************************************************************
//***********************************************************************=
******

// Create namespace
if ( !window.gslb )
{
  window.gslb =3D {};
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Utility class allowing easier handling of CSS "length" strings,
/// for example "2em" or "150px". This class extracts the unit ("em", =
"pt", "px", ...),
/// and can also convert from the unit ("em", "pt", ...) to pixels. It =
can also add
/// or substract pixels, or units ("em", "pt", ...) to the current =
value. To assign
/// the new value to a style property, you may use the "toString" =
method.
/// </summary>
/// <param name=3D"strCssString" type=3D"string">A valid CSS "length" =
string,
/// for example "2em" or "150px".</param>
/// <param name=3D"nNode" type=3D"Node">The specific DOM node to which =
the conversion
/// will apply. If null, the CSS settings for the BODY will be used, but
/// this may lead to incorrect results, for example if the font-size has
/// been set in the node's hierarchy.</param>
gslb.CssLength =3D function( strCssString, nNode )
{
  =
//***********************************************************************=
****
  //* Attributes =
**************************************************************
  =
//***********************************************************************=
****
 =20
  /// <summary type=3D"string">
  /// The unit of the CSS string (em, px...)
  /// </summary>
  this.m_strUnit =3D gslb.CssLength.getUnit( strCssString );
  /// <summary type=3D"float">
  /// The numeric value in the original unit (for example, for 0.8em, =
this attribute
  /// bears the value 0.8).
  /// </summary>
  this.m_fUnitValue =3D parseFloat( strCssString );
  /// <summary type=3D"nNode">
  /// The specific DOM node to which the conversion
  /// will apply. If null, the CSS settings for the BODY will be used, =
but
  /// this may lead to incorrect results, for example if the font-size =
has
  /// been set in the node's hierarchy.
  /// </summary>
  this.m_nNode =3D nNode;
  /// <summary type=3D"float">
  /// The factor used to convert the original unit in pixels, and back.
  /// </summary>
  this.m_fPixelPerUnitFactor =3D gslb.CssLength.getPixelPerUnitFactor( =
this.m_strUnit, this.m_nNode );
 =20
  // Post construction operations =
---------------------------------------------
 =20
  if ( isNaN( this.m_fUnitValue ) )
  {
    throw "Invalid CSS length string: " + strCssString;=20
  }
}

//***********************************************************************=
******
//* Enums =
*********************************************************************
//***********************************************************************=
******

//***********************************************************************=
******
//* Constants =
*****************************************************************
//***********************************************************************=
******

/// <summary type=3D"string">
/// This class's name.
/// </summary>
gslb.CssLength._NAME =3D "gslb.CssLength";
/// <summary type=3D"string">
/// This class's version.
/// </summary>
gslb.CssLength._VERSION =3D "V1.1.0";
/// <summary type=3D"string">
/// This class's date.
/// </summary>
gslb.CssLength._DATE =3D "04.02.2007";

//***********************************************************************=
******
//* Static attributes =
*********************************************************
//***********************************************************************=
******

//***********************************************************************=
******
//* Static methods =
************************************************************
//***********************************************************************=
******

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Calculates the factor used to convert the given CSS unit (em, pt...) =
to pixels.
/// This method makes use of the browser's own CSS engine for the =
calculation,
/// which might fail on older browsers.
/// </summary>
/// <param name=3D"strUnit" type=3D"string">The CSS unit, for example =
"em".</param>
/// <param name=3D"nNode" type=3D"Node">The specific DOM node to which =
the conversion
/// will apply. If null, the CSS settings for the BODY will be used, but
/// this may lead to incorrect results, for example if the font-size has
/// been set in the node's hierarchy.</param>
/// <returns type=3D"float">The factor allowing to convert the given CSS =
unit
/// to pixels.</returns>
gslb.CssLength.getPixelPerUnitFactor =3D function( strUnit, nNode )
{
  if ( strUnit.toLowerCase() =3D=3D "px" )
  {
    return 1;
  }
 =20
  if ( !document.createElement )
  {
    throw "Unsuitable platform";
  }

  // Create a temporary DIV. For greater precision, use a factor.
  var nDivTemp =3D document.createElement( "div" );
  nDivTemp.style.width =3D "10000" + strUnit;
  // Set the DIV to hidden to avoid unwanted visual effects.
  nDivTemp.style.visible =3D "hidden";

  if ( !document.getElementsByTagName )
  {
    throw "Unsuitable platform";
  }
 =20
  // The value is only valid if the DIV belongs to the document
 =20
  var anBody =3D document.getElementsByTagName( "body" );
 =20
  if ( !anBody
    || !anBody.length
    || !anBody[0] )
  {
    throw "Unsuitable platform";
  }

  var nParent =3D anBody[0];
 =20
  if ( nNode
    && nNode.parentNode )
  {
    // If the conversion must be applied to a
    // specific node, append to this node's parent.
    // This avoids errors if the parent's font size has
    // been set in CSS.
    nParent =3D nNode.parentNode;
  }
 =20
  if ( !nParent
    || !nParent.appendChild
    || !nParent.removeChild )
  {
    throw "Unsuitable platform";
  }
 =20
  // Even though pixelWidth is always set, if the
  // temporary DIV is not appended to the BODY, the
  // value will be invalid, except if font-size
  // is set to 100%. =20
  nParent.appendChild( nDivTemp );

  if ( nDivTemp.style.pixelWidth !=3D null )
  {
    var iPixelWidth =3D nDivTemp.style.pixelWidth;
    nParent.removeChild( nDivTemp );
    return iPixelWidth / 10000;
  }
 =20
  // pixelWidth is not available --> use clientWidth instead.
  if ( nDivTemp.clientWidth !=3D null )
  {
    var iClientWidth =3D nDivTemp.clientWidth;
    // Once the value is saved, remove the node.
    nParent.removeChild( nDivTemp );
    return iClientWidth / 10000;
  }
 =20
  throw "Unsuitable platform";
}

// =
-------------------------------------------------------------------------=
---
/// <param name=3D"strCssString" type=3D"string">A valid CSS "length" =
string,
/// for example "2em" or "150px".</param>
/// <returns type=3D"string">The unit as string, for example "em" or =
"px".</returns>
gslb.CssLength.getUnit =3D function( strCssString )
{
  var strUnit =3D null;
  strCssString =3D strCssString.toLowerCase();
  if ( strCssString.indexOf( "px" ) > 0 )
  {
    strUnit =3D "px";
  }
  if ( strCssString.indexOf( "em" ) > 0 )
  {
    strUnit =3D "em";
  }
  if ( strCssString.indexOf( "pt" ) > 0 )
  {
    strUnit =3D "pt";
  }
  if ( strUnit =3D=3D null )
  {
    // Unknown unit --> parse it
    strUnit =3D "";
    var bStop =3D false;
    var iIndex =3D strCssString.length - 1;
    while ( !bStop )
    {
      if ( strCssString.charAt( iIndex ) =3D=3D ';' )
      {
        continue;
      }
      if ( iIndex < 0
        || !isNaN( parseInt( strCssString.charAt( iIndex ) ) ) )
      {
        // Last digit of the string was met --> exit
        break;
      }
      strUnit =3D strCssString.charAt( iIndex ) + strUnit;
      iIndex--;
    }
  }
  return strUnit;
}

//***********************************************************************=
******
//* Methods =
*******************************************************************
//***********************************************************************=
******

// =
-------------------------------------------------------------------------=
---
/// <returns type=3D"int">The numeric value for this instance converted =
in pixels.</returns>
gslb.CssLength.prototype.getPixelValue =3D function()
{
  return this.getPixels( this.m_fUnitValue );
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Sets the current value to the given number of pixels.
/// </summary>
/// <param name=3D"iValue" type=3D"int">The number of pixels to set as
/// the present value.</param>
gslb.CssLength.prototype.setPixelValue =3D function( iValue )
{
  this.setUnitValue( this.getUnits( iValue ) );
}

// =
-------------------------------------------------------------------------=
---
/// <returns type=3D"float">The numeric value for this instance in =
original units
/// (according to the CSS string passed to the constructor of this =
instance).</returns>
gslb.CssLength.prototype.getUnitValue =3D function()
{
  return this.m_fUnitValue;
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Sets the current value to the given number of units (em, px, pt...).
/// </summary>
/// <param name=3D"fValue" type=3D"float">The number of units to set as
/// the present value.</param>
gslb.CssLength.prototype.setUnitValue =3D function( fValue )
{
  this.m_fUnitValue =3D fValue;
}

// =
-------------------------------------------------------------------------=
---
/// <returns type=3D"">The unit ("em", "px", ...) of this =
value.</returns>
gslb.CssLength.prototype.getUnit =3D function()
{
  return this.m_strUnit;
}

// =
-------------------------------------------------------------------------=
---
/// <returns type=3D"">A string representation of this value in original =
units
/// (according to the CSS string passed to the constructor of this =
instance).</returns>
gslb.CssLength.prototype.toString =3D function()
{
  return this.m_fUnitValue.toString() + this.m_strUnit;
}

// =
-------------------------------------------------------------------------=
---
/// <returns type=3D"string">A string representation of this value =
converted
/// to pixels.</returns>
gslb.CssLength.prototype.toStringPixels =3D function()
{
  return this.getPixelValue().toString() + "px";
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Adds a number of pixels to the present value.
/// </summary>
/// <param name=3D"iPixels" type=3D"int">The number of pixels to add to
/// the present value.</param>
gslb.CssLength.prototype.addPixels =3D function( iPixels )
{
  this.addUnits( this.getUnits( iPixels ) );
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Substracts a number of pixels from the present value.
/// </summary>
/// <param name=3D"iPixels" type=3D"int">The number of pixels to =
substract from
/// the present value.</param>
gslb.CssLength.prototype.substractPixels =3D function( iPixels )
{
  this.substractUnits( this.getUnits( iPixels ) );
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Adds a number of the original units (according to the CSS string =
passed to
/// the constructor of this instance) to the present value.
/// </summary>
/// <param name=3D"fUnits" type=3D"float">The number of units to add to
/// the present value.</param>
gslb.CssLength.prototype.addUnits =3D function( fUnits )
{
  this.m_fUnitValue +=3D fUnits;
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Substracts a number of the original units (according to the CSS =
string passed to
/// the constructor of this instance) from the present value.
/// </summary>
/// <param name=3D"fUnits" type=3D"float">The number of units to =
substract from
/// the present value.</param>
gslb.CssLength.prototype.substractUnits =3D function( fUnits )
{
  this.m_fUnitValue -=3D fUnits;
}

// Utilities =
------------------------------------------------------------------

// =
-------------------------------------------------------------------------=
---
/// <param name=3D"fUnitValue" type=3D"float">A number of units to =
convert.</param>
/// <returns type=3D"int">The number of pixels corresponding to the =
number of original units
/// (according to the CSS string passed to the constructor of this =
instance) passed
/// as parameter.</returns>
gslb.CssLength.prototype.getPixels =3D function( fUnitValue )
{
  return Math.round( fUnitValue * this.m_fPixelPerUnitFactor );
}

// =
-------------------------------------------------------------------------=
---
/// <param name=3D"iPixelValue" type=3D"int">A number of pixels to =
convert.</param>
/// <returns type=3D"float">The number of original units (according to =
the CSS string passed
/// to the constructor of this instance) corresponding to the number of =
pixels
/// passed as parameter.</returns>
gslb.CssLength.prototype.getUnits =3D function( iPixelValue )
{
  return iPixelValue / this.m_fPixelPerUnitFactor;
}

------=_NextPart_000_00D5_01C81C89.BF9995B0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.galasoft.ch/script/gslb.positionednode.js

=EF=BB=BF/* <gslb_version version=3D"V1.2.1" /> */
/* Copyright =C2=A9 GalaSoft Laurent Bugnion 2007 */

//***********************************************************************=
******
//* gslb.positionednode.js
//***********************************************************************=
******
//* Control name            : PositionedNode
//* Target                  : Netscape 6+, Internet explorer 5+
//* Language/Compiler       : ECMAScript V3
//* Author                  : Laurent Bugnion (LBu)
//* Created                 : 05.01.2007
//***********************************************************************=
******
//* Description: see constructor
//* Last Base Level: BL0006
//***********************************************************************=
******

//***********************************************************************=
******
//* Imports =
*******************************************************************
//***********************************************************************=
******

// using gslb.Object
// using gslb.Cookie (optional) (from gslb.PositionedBase)
// using gslb.PositionedBase
// using gslb.CssLength

// Create namespace
if ( !window.gslb )
{
  window.gslb =3D {};
}

if ( !gslb.Object )
{
  throw "Error in PositionedNode: gslb.Object not found";
}
if ( !gslb.PositionedBase )
{
  throw "gslb.PositionedBase not found";
}

//***********************************************************************=
******
//* Constructor =
***************************************************************
//***********************************************************************=
******

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Allows moving a DOM Node from the current position to another one at =
variable
/// speed. Once a node is positioned, if the user scrolls the window,
/// the Node will reposition itself to the same distance from the =
window's border.
/// </summary>
/// <param name=3D"nNode" type=3D"Node">The DOM node which will be =
moved.</param>
/// <param name=3D"oOptions" type=3D"Object">An Options object, =
constructed using literal notation.
/// All values are optional.
/// <br />bRepositionX: If true, the node will be repositioned along the =
X axis. Default: true.
/// <br />bRepositionY: If true, the node will be repositioned along the =
Y axis. Default: true.
/// <br />iTimerMillisecondsFast: The duration of one iteration (in =
milliseconds)
/// while the node is being moved. Default: 1 milliseconds.
/// <br />iTimerMillisecondsSlow: The duration of one iteration (in =
milliseconds)
/// while the node is standing still. Default: 100 milliseconds.
/// <br />fnRepositionX: The function to use to calculate the Node's =
speed when it is
/// moved along the X axis. See the class' documentation. Default: null.
/// <br />fnRepositionY: The function to use to calculate the Node's =
speed when it is
/// moved along the Y axis. See the class' documentation. Default: null.
/// <br />fnOnMoveStartX: A function which will be called when the Node =
starts moving
/// along the X axis. Default: null.
/// <br />fnOnMoveStartY: A function which will be called when the Node =
starts moving
/// along the Y axis. Default: null.
/// <br />fnOnMoveStart: A function which will be called when the Node =
starts moving
/// along any axis. Default: null.
/// <br />fnOnMoveEndX: A function which will be called when the Node =
stops moving
/// along the X axis. Default: null.
/// <br />fnOnMoveEndY: A function which will be called when the Node =
stops moving
/// along the Y axis. Default: null.
/// <br />fnOnMoveEnd: A function which will be called when the Node =
stops moving
/// along both axis. Default: null.
/// <br />bSaveRelocationInCookie: If true, the new position after =
relocate was called will be
/// saved in a cookie. Note: Setting this value to false doesn't delete =
a cookie if it
/// had been set previously. To delete the cookie, you must explicitly =
call the method
/// deleteCookie. Default: false.
/// <br />iCookieExpirationHours: If bSaveRelocationInCookie is true, =
this specifies the number
/// of hours during which the Node's new location will be saved
/// in a cookie. If the value is set to 0, this is a session cookie =
(non-persistent). Default: 0.</param>
gslb.PositionedNode =3D function( nNode, oOptions )
{
  =
//***********************************************************************=
****
  //* Inheritance =
*************************************************************
  =
//***********************************************************************=
****

  // The options in the base class will be set later when setOptions is =
called
  // in this constructor.
  gslb.PositionedNode.Base.fnConstructor.call( this, nNode, null );

  =
//***********************************************************************=
****
  //* Attributes =
**************************************************************
  =
//***********************************************************************=
****

  // Options

  /// <summary type=3D"bool">
  /// If true, the node will be repositioned along the X axis. Default: =
true.
  /// </summary>
  this.m_bRepositionX =3D true;
  /// <summary type=3D"bool">
  /// If true, the node will be repositioned along the Y axis. Default: =
true.
  /// </summary>
  this.m_bRepositionY =3D true;
  /// <summary type=3D"int">
  /// The duration of one iteration (in milliseconds)
  /// while the node is being moved. Default: 1.
  /// </summary>
  this.m_iTimerMillisecondsFast =3D 1;
  /// <summary type=3D"int">
  /// The duration of one iteration (in milliseconds)
  /// while the node is standing still. Default: 100.
  /// </summary>
  this.m_iTimerMillisecondsSlow =3D 100;
  /// <summary type=3D"Function">
  /// The function to use to calculate the Node's speed when it is
  /// moved along the X axis. See the class' documentation. Default: =
null.
  /// </summary>
  this.m_fnRepositionX =3D gslb.PositionedNode.getDefaultDeltaX;
  /// <summary type=3D"Function">
  /// The function to use to calculate the Node's speed when it is
  /// moved along the Y axis. See the class' documentation. Default: =
null.
  /// </summary>
  this.m_fnRepositionY =3D gslb.PositionedNode.getDefaultDeltaY;
  /// <summary type=3D"Function">
  /// A function which will be called when the Node starts moving
  /// along the X axis. Default: null.
  /// </summary>
  this.m_fnOnMoveStartX =3D null;
  /// <summary type=3D"Function">
  /// A function which will be called when the Node starts moving
  /// along the Y axis. Default: null.
  /// </summary>
  this.m_fnOnMoveStartY =3D null;
  /// <summary type=3D"Function">
  /// A function which will be called when the Node starts moving
  /// along any axis. Default: null.
  /// </summary>
  this.m_fnOnMoveStart =3D null;
  /// <summary type=3D"Function">
  /// A function which will be called when the Node stops moving
  /// along the X axis. Default: null.
  /// </summary>
  this.m_fnOnMoveEndX =3D null;
  /// <summary type=3D"Function">
  /// A function which will be called when the Node stops moving
  /// along the Y axis. Default: null.
  /// </summary>
  this.m_fnOnMoveEndY =3D null;
  /// <summary type=3D"Function">
  /// A function which will be called when the Node stops moving
  /// along both axis. Default: null.
  /// </summary>
  this.m_fnOnMoveEnd =3D null;

  // Set options =
--------------------------------------------------------------

  // Assign options
  this.setOptions( oOptions );
  // Set position according to cookie first, so that attributes are set =
correctly
  this.restorePosition();

  // Other attributes =
---------------------------------------------------------

  /// <summary type=3D"gslb.CssLength">
  /// An instance of CssLength used to convert positions along the X =
axis.
  /// For optimization, CssLength is used only if needed (non-IE =
platforms)
  /// For IE platforms, use pixelLeft and pixelTop instead (no =
conversion needed).
  /// </summary>
  this.m_oPositionX =3D null;
  if ( this.m_nNode.style.pixelLeft =3D=3D null )
  {
    if ( !gslb.CssLength )
    {
      throw "gslb.CssLength not found";
    }
    var strStyleLeft =3D nNode.style.left;
    if ( strStyleLeft.length =3D=3D 0 )
    {
      strStyleLeft =3D nNode.offsetLeft + "px";
    }   =20
    this.m_oPositionX =3D new gslb.CssLength( strStyleLeft, nNode );
  }
  /// <summary type=3D"gslb.CssLength">
  /// An instance of CssLength used to convert positions along the Y =
axis.
  /// For optimization, CssLength is used only if needed (non-IE =
platforms)
  /// For IE platforms, use pixelLeft and pixelTop instead (no =
conversion needed).
  /// </summary>
  this.m_oPositionY =3D null;
  if ( this.m_nNode.style.pixelTop =3D=3D null )
  {
    if ( !gslb.CssLength )
    {
      throw "gslb.CssLength not found";
    }
    var strStyleTop =3D nNode.style.top;
    if ( strStyleTop.length =3D=3D 0 )
    {
      strStyleTop =3D nNode.offsetTop + "px";
    }   =20
    this.m_oPositionY =3D new gslb.CssLength( strStyleTop, nNode );
  }

  /// <summary type=3D"int">
  /// The Node's position along the X axis (including scrolling) (in =
pixels).
  /// Note: When the Node is moving, this attribute doesn't contain the
  /// actual position, but rather the target position.
  /// </summary>
  this.m_iTargetX =3D ( this.m_oPositionX ? =
this.m_oPositionX.getPixelValue() : this.m_nNode.offsetLeft );
  /// <summary type=3D"int">
  /// The Node's position along the Y axis (including scrolling) (in =
pixels).
  /// Note: When the Node is moving, this attribute doesn't contain the
  /// actual position, but rather the target position.
  /// </summary>
  this.m_iTargetY =3D ( this.m_oPositionY ? =
this.m_oPositionY.getPixelValue() : this.m_nNode.offsetTop );
  /// <summary type=3D"int">
  /// The Node's current position along the X axis (including scrolling) =
(in pixels).
  /// </summary>
  this.m_iPositionX =3D this.m_iTargetX;
  /// <summary type=3D"int">
  /// The Node's current position along the Y axis (including scrolling) =
(in pixels).
  /// </summary>
  this.m_iPositionY =3D this.m_iTargetY;
  /// <summary type=3D"int">
  /// The distance between the left of the window
  /// and the left of the control (not uncluding scrolling) (in pixels).
  /// </summary>
  this.m_iRelativeTargetX =3D this.m_iTargetX;
  /// <summary type=3D"int">
  /// The distance between the top of the window
  /// and the top of the control (not uncluding scrolling) (in pixels).
  /// </summary>
  this.m_iRelativeTargetY =3D this.m_iTargetY;

  /// <summary type=3D"int">
  /// The distance by which the page is scrolled on the X axis (in =
pixels).
  /// </summary>
  this.m_iScrollX =3D gslb.PositionedNode.getScroll( "Left" );
  /// <summary type=3D"int">
  /// The distance by which the page is scrolled on the Y axis (in =
pixels).
  /// </summary>
  this.m_iScrollY =3D gslb.PositionedNode.getScroll( "Top" );

  /// <summary type=3D"bool">
  /// If true, the Node is pinned on the X axis.
  /// </summary>
  this.m_bPinX =3D false;
  /// <summary type=3D"bool">
  /// If true, the Node is pinned on the Y axis.
  /// </summary>
  this.m_bPinY =3D false;

  /// <summary type=3D"bool">
  /// If true, the Node must be relocated on the page along the X axis.
  /// If false, the Node will not move along this axis.
  /// </summary>
  this.m_bRelocateX =3D false;
  /// <summary type=3D"bool">
  /// If true, the Node must be relocated on the page along the Y axis.
  /// If false, the Node will not move along this axis.
  /// </summary>
  this.m_bRelocateY =3D false;
  /// <summary type=3D"bool">
  /// If true, the Node is currently moving along the X axis.
  /// </summary>
  this.m_bIsMovingX =3D false;
  /// <summary type=3D"bool">
  /// If true, the Node is currently moving along the Y axis.
  /// </summary>
  this.m_bIsMovingY =3D false;
  /// <summary type=3D"bool">
  /// If true, the Node has been disposed, and will not move anymore.
  /// </summary>
  this.m_bIsDisposed =3D false;
  /// <summary type=3D"int">
  /// The ID of the timer used to reposition the Node or to check its =
position.
  /// </summary>
  this.m_iTimerId =3D null;
  /// <summary type=3D"bool">
  /// If true, the "OnStart" function has been executed already. This is =
to avoid
  /// calling this function twice (X and Y axis).
  /// </summary>
  this.m_bOnMoveStartExecuted =3D false;

  // Post construction operations =
---------------------------------------------

  // Start checks
  this.checkPosition();
}

// Inheritance
gslb.Object.extend( gslb.PositionedNode, gslb.PositionedBase );

//***********************************************************************=
******
//* Enums =
*********************************************************************
//***********************************************************************=
******

//***********************************************************************=
******
//* Constants =
*****************************************************************
//***********************************************************************=
******

/// <summary type=3D"string">
/// This class's name.
/// </summary>
gslb.PositionedNode._NAME =3D "gslb.PositionedNode";
/// <summary type=3D"string">
/// This class's version.
/// </summary>
gslb.PositionedNode._VERSION =3D "V1.2.1";
/// <summary type=3D"string">
/// This class's date.
/// </summary>
gslb.PositionedNode._DATE =3D "19.02.2007";

//***********************************************************************=
******
//* Static attributes =
*********************************************************
//***********************************************************************=
******

//***********************************************************************=
******
//* Static methods =
************************************************************
//***********************************************************************=
******

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Internal method only.
/// </summary>
gslb.PositionedNode.getDefaultDeltaX =3D function( iDistanceToTarget )
{
  return gslb.PositionedNode.getDefaultDelta( iDistanceToTarget, 50, =
0.5, 1 );
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Internal method only.
/// </summary>
gslb.PositionedNode.getDefaultDeltaY =3D function( iDistanceToTarget )
{
  return gslb.PositionedNode.getDefaultDelta( iDistanceToTarget, 50, =
0.5, 1 );
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Internal method only.
/// </summary>
gslb.PositionedNode.getDefaultDelta =3D function( iDistanceToTarget, =
iThreshold, fFactor, iMinimum )
{
  var fNormalized =3D ( Math.abs( iDistanceToTarget ) / iThreshold );
  var fDelta =3D Math.pow( fNormalized, 2 ) * fFactor;

  if ( fDelta < iMinimum )
  {
    fDelta =3D iMinimum;
  }

  // Avoid overshooting
  if ( fDelta > iDistanceToTarget )
  {
    return iDistanceToTarget;
  }
  return Math.round( fDelta );
}

// Utilities =
------------------------------------------------------------------

// =
-------------------------------------------------------------------------=
---
/// <returns type=3D"int">
/// If the document is parsed as HTML, returns document.body.scrollTop =
(if available).
/// If the document is parsed as XHTML, returns =
document.documentElement.scrollTop (if available).
/// If both are not available, returns 0
/// </returns>
gslb.PositionedNode.getScroll =3D function( strDirection )
{
  return ( document.body && document.body[ "scroll" + strDirection ]
    ? document.body[ "scroll" + strDirection ]
    : ( document.documentElement && document.documentElement[ "scroll" + =
strDirection ]
      ? document.documentElement[ "scroll" + strDirection ] : 0 ) );
}

//***********************************************************************=
******
//* Methods =
*******************************************************************
//***********************************************************************=
******

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Relocates the Node to a different position on the screen using the
/// repositioning effect.
/// Note: This method doesn't do anything if bRepositionX, resp =
bRepositionY
/// are set to false in the options.
/// </summary>
/// <param name=3D"iPositionX" type=3D"int">The position along the X =
axis. Note:
/// this is the position relative to the left of the visible area, not =
taking
/// the position of the scrollbars in account. If null, no relocation is
/// done along that axis.</param>
/// <param name=3D"iPositionY" type=3D"int">The position along the Y =
axis. Note:
/// this is the position relative to the top of the visible area, not =
taking
/// the position of the scrollbars in account. If null, no relocation is
/// done along that axis.</param>
gslb.PositionedNode.prototype.relocate =3D function( iPositionX, =
iPositionY )
{
  if ( iPositionX !=3D null
    && this.m_bRepositionX )
  {
    this.m_iRelativeTargetX =3D iPositionX;
    this.m_bRelocateX =3D true;
  }

  if ( iPositionY !=3D null
    && this.m_bRepositionY )
  {
    this.m_iRelativeTargetY =3D iPositionY;
    this.m_bRelocateY =3D true;
  }
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Relocates the Node to a different position on the screen =
immediately,
/// without any effect.
/// Note: This method doesn't do anything if bRepositionX, resp =
bRepositionY
/// are set to false in the options.
/// Note 2: Since the repositioning is immediate, the methods defined in
/// fnOnMoveStartX, fnOnMoveStartY, fnOnMoveStart, fnOnMoveEndX,
/// fnOnMoveEndY and fnOnMoveEnd are *not* executed.
/// </summary>
/// <param name=3D"iPositionX" type=3D"int">The position along the X =
axis. Note:
/// this is the position relative to the left of the visible area, not =
taking
/// the position of the scrollbars in account. If null, no relocation is
/// done along that axis.</param>
/// <param name=3D"iPositionY" type=3D"int">The position along the Y =
axis. Note:
/// this is the position relative to the top of the visible area, not =
taking
/// the position of the scrollbars in account. If null, no relocation is
/// done along that axis.</param>
gslb.PositionedNode.prototype.relocateNoEffect =3D function( iPositionX, =
iPositionY )
{
  if ( iPositionX !=3D null
    && this.m_bRepositionX )
  {
    this.m_iPositionX =3D iPositionX;
    this.m_iTargetX =3D iPositionX;
    this.m_iRelativeTargetX =3D iPositionX;
    if ( this.m_oPositionX )
    {
      this.m_oPositionX.setPixelValue( iPositionX );
      this.m_nNode.style.left =3D this.m_oPositionX.toString();
    }
    else
    {
      this.m_nNode.style.pixelLeft =3D iPositionX;
    }
  }

  if ( iPositionY !=3D null
    && this.m_bRepositionY )
  {
    this.m_iPositionY =3D iPositionY;
    this.m_iTargetY =3D iPositionY;
    this.m_iRelativeTargetY =3D iPositionY;
    if ( this.m_oPositionY )
    {
      this.m_oPositionY.setPixelValue( iPositionY );
      this.m_nNode.style.top =3D this.m_oPositionY.toString();
    }
    else
    {
      this.m_nNode.style.pixelTop =3D iPositionY;
    }
  }
  this.saveCookieIfNeeded();
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Pins the Node to its current position. When pinned, the node won't =
reposition
/// itself.
/// </summary>
/// <param name=3D"bPinNode" type=3D"bool">If true, the Node is pinned. =
If false,
/// it is unpinned.</param>
gslb.PositionedNode.prototype.pin =3D function( bPinNode )
{
  this.pinX( bPinNode );
  this.pinY( bPinNode );
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Pins the Node to its current position on the X axis. When pinned, =
the node
/// won't reposition itself.
/// </summary>
/// <param name=3D"bPinNode" type=3D"bool">If true, the Node is pinned. =
If false,
/// it is unpinned.</param>
gslb.PositionedNode.prototype.pinX =3D function( bPinNode )
{
  this.m_bPinX =3D bPinNode;
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Pins the Node to its current position on the Y axis. When pinned, =
the node
/// won't reposition itself.
/// </summary>
/// <param name=3D"bPinNode" type=3D"bool">If true, the Node is pinned. =
If false,
/// it is unpinned.</param>
gslb.PositionedNode.prototype.pinY =3D function( bPinNode )
{
  this.m_bPinY =3D bPinNode;
}

// =
-------------------------------------------------------------------------=
---
/// <returns type=3D"bool">Returns true if the DHTML Node is currently
/// moving along the X axis.</param>
gslb.PositionedNode.prototype.isMovingX =3D function()
{
  return this.m_bIsMovingX;
}

// =
-------------------------------------------------------------------------=
---
/// <returns type=3D"bool">Returns true if the DHTML Node is currently
/// moving along the Y axis.</param>
gslb.PositionedNode.prototype.isMovingY =3D function()
{
  return this.m_bIsMovingY;
}

// =
-------------------------------------------------------------------------=
---
/// <returns type=3D"bool">Returns true if the DHTML Node is currently
/// moving along any axis.</param>
gslb.PositionedNode.prototype.isMoving =3D function()
{
  return this.m_bIsMovingX || this.m_bIsMovingY;
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Disposes this instance. After it has been disposed, the Node will =
not be
/// repositioned anymore. After disposing, it is recommended to set all =
references
/// to this instance to null.
/// </summary>
gslb.PositionedNode.prototype.dispose =3D function()
{
  if ( this.m_iTimerId !=3D null )
  {
    this.m_bIsDisposed =3D true;
    clearTimeout( this.m_iTimerId );
  }
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Internal method only.
/// </summary>
gslb.PositionedNode.prototype.checkPosition =3D function()
{
  if ( this.m_bIsDisposed )
  {
    return;
  }
  if ( !this.m_bPinX )
  {
    this.setPosition( "X" );
  }
  if ( !this.m_bPinY )
  {
    this.setPosition( "Y" );
  }

  var that =3D this;
  if ( this.isMoving() )
  {
    this.m_iTimerId =3D setTimeout( function() { that.checkPosition(); =
}, this.m_iTimerMillisecondsFast );
  }
  else
  {
    this.m_iTimerId =3D setTimeout( function() { that.checkPosition(); =
}, this.m_iTimerMillisecondsSlow );
  }
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Internal method only.
/// </summary>
gslb.PositionedNode.prototype.setPosition =3D function( strAxis )
{
  if ( !this[ "m_bReposition" + strAxis ] )
  {
    return false;
  }

  var strDirection =3D null;
  switch ( strAxis )
  {
    case "X":
      strDirection =3D "Left";
      break;
    case "Y":
      strDirection =3D "Top";
      break;
  }

  var iScroll =3D gslb.PositionedNode.getScroll( strDirection );

  if ( this[ "m_iScroll" + strAxis ] !=3D iScroll
    || this[ "m_bRelocate" + strAxis ] )
  {
    this[ "m_iTarget" + strAxis ] =3D this[ "m_iRelativeTarget" + =
strAxis ] + iScroll;
    this[ "m_iScroll" + strAxis ] =3D iScroll;
    this[ "m_bRelocate" + strAxis ] =3D false;
    this[ "m_bIsMoving" + strAxis ] =3D true;

    if ( this[ "m_fnOnMoveStart" + strAxis ] )
    {
      this[ "m_fnOnMoveStart" + strAxis ]();
    }
    if ( this.m_fnOnMoveStart
      && !this.m_bOnMoveStartExecuted )
    {
      this.m_fnOnMoveStart();
      this.m_bOnMoveStartExecuted =3D true;
    }
  }

  if ( this[ "m_bIsMoving" + strAxis ] )
  {
    var iDelta =3D this[ "m_fnReposition" + strAxis ]( Math.abs( this[ =
"m_iTarget" + strAxis ]
      - this[ "m_iPosition" + strAxis ] ) );

    if ( this[ "m_iTarget" + strAxis ] > this[ "m_iPosition" + strAxis ] =
)
    {
      this[ "m_iPosition" + strAxis ] +=3D iDelta;
      if ( this[ "m_oPosition" + strAxis ] )
      {
        this[ "m_oPosition" + strAxis ].addPixels( iDelta );
        this.m_nNode.style[ strDirection.toLowerCase() ] =3D this[ =
"m_oPosition" + strAxis ].toString();
      }
      else
      {
        this.m_nNode.style[ "pixel" + strDirection ] =3D this[ =
"m_iPosition" + strAxis ];
      }
    }
    else
    {
      if ( this[ "m_iTarget" + strAxis ] < this[ "m_iPosition" + strAxis =
] )
      {
        this[ "m_iPosition" + strAxis ] -=3D iDelta;
        if ( this[ "m_oPosition" + strAxis ] )
        {
          this[ "m_oPosition" + strAxis ].substractPixels( iDelta );
          this.m_nNode.style[ strDirection.toLowerCase() ] =3D this[ =
"m_oPosition" + strAxis ].toString();
        }
        else
        {
          this.m_nNode.style[ "pixel" + strDirection ] =3D this[ =
"m_iPosition" + strAxis ];
        }
      }
      else
      {
        this.saveCookieIfNeeded();
        this[ "m_bIsMoving" + strAxis ] =3D false;
        if ( this[ "m_fnOnMoveEnd" + strAxis ] )
        {
          this[ "m_fnOnMoveEnd" + strAxis ]();
        }
        if ( this.m_fnOnMoveEnd
          && !this.isMoving() )
        {
          this.m_fnOnMoveEnd();
        }
        this.m_bOnMoveStartExecuted =3D false;
      }
    }
  }
}

// =
-------------------------------------------------------------------------=
---
/// <summary>
/// Sets the options for this instance.
/// </summary>
/// <param name=3D"oOptions" type=3D"Object">An Options object, =
constructed using literal notation.
/// All values are optional.
/// <br />bRepositionX: If true, the node will be repositioned along the =
X axis. Default: true.
/// <br />bRepositionY: If true, the node will be repositioned along the =
Y axis. Default: true.
/// <br />iTimerMillisecondsFast: The duration of one iteration (in =
milliseconds)
/// while the node is being moved. Default: 1 milliseconds.
/// <br />iTimerMillisecondsSlow: The duration of one iteration (in =
milliseconds)
/// while the node is standing still. Default: 100 milliseconds.
/// <br />fnRepositionX: The function to use to calculate the Node's =
speed when it is
/// moved along the X axis. See the class' documentation.
/// <br />fnRepositionY: The function to use to calculate the Node's =
speed when it is
/// moved along the Y axis. See the class' documentation.
/// <br />fnOnMoveStartX: A function which will be called when the Node =
starts moving
/// along the X axis.
/// <br />fnOnMoveStartY: A function which will be called when the Node =
starts moving
/// along the Y axis.</param>
/// <br />fnOnMoveStart: A function which will be called when the Node =
starts moving
/// along any axis.</param>
/// <br />fnOnMoveEndX: A function which will be called when the Node =
stops moving
/// along the X axis.
/// <br />fnOnMoveEndY: A function which will be called when the Node =
stops moving
/// along the Y axis.
/// <br />fnOnMoveEnd: A function which will be called when the Node =
stops moving
/// along both axis.
/// <br />bSaveRelocationInCookie: If true, the new position after =
relocate was called will be
/// saved in a cookie. Note: Setting this value to false doesn't delete =
a cookie if it
/// had been set previously. To delete the cookie, you must explicitly =
call the method
/// deleteCookie. Default: false.
/// <br />iCookieExpirationHours: If bSaveRelocationInCookie is true, =
this specifies the number
/// of hours during which the Node's new location will be saved
/// in a cookie. If the value is set to 0, this is a session cookie =
(non-persistent). Default: 0.</param>
gslb.PositionedNode.prototype.setOptions =3D function( oOptions )
{
  if ( oOptions )
  {
    if ( oOptions.bRepositionX !=3D null )
    {
      this.m_bRepositionX =3D oOptions.bRepositionX;
    }
    if ( oOptions.bRepositionY !=3D null )
    {
      this.m_bRepositionY =3D oOptions.bRepositionY;
    }
    if ( oOptions.iTimerMillisecondsFast !=3D null )
    {
      this.m_iTimerMillisecondsFast =3D oOptions.iTimerMillisecondsFast;
    }
    if ( oOptions.iTimerMillisecondsSlow !=3D null )
    {
      this.m_iTimerMillisecondsSlow =3D oOptions.iTimerMillisecondsSlow;
    }
    if ( oOptions.fnRepositionX !=3D null )
    {
      this.m_fnRepositionX =3D oOptions.fnRepositionX;
    }
    if ( oOptions.fnRepositionY !=3D null )
    {
      this.m_fnRepositionY =3D oOptions.fnRepositionY;
    }
    if ( oOptions.fnOnMoveStartX !=3D null )
    {
      this.m_fnOnMoveStartX =3D oOptions.fnOnMoveStartX;
    }
    if ( oOptions.fnOnMoveStartY !=3D null )
    {
      this.m_fnOnMoveStartY =3D oOptions.fnOnMoveStartY;
    }
    if ( oOptions.fnOnMoveStart !=3D null )
    {
      this.m_fnOnMoveStart =3D oOptions.fnOnMoveStart;
    }
    if ( oOptions.fnOnMoveEndX !=3D null )
    {
      this.m_fnOnMoveEndX =3D oOptions.fnOnMoveEndX;
    }
    if ( oOptions.fnOnMoveEndY !=3D null )
    {
      this.m_fnOnMoveEndY =3D oOptions.fnOnMoveEndY;
    }
    if ( oOptions.fnOnMoveEnd !=3D null )
    {
      this.m_fnOnMoveEnd =3D oOptions.fnOnMoveEnd;
    }

    // Set options on base class
    gslb.PositionedNode.Base.setOptions.call( this, oOptions );
  }
}

------=_NextPart_000_00D5_01C81C89.BF9995B0--

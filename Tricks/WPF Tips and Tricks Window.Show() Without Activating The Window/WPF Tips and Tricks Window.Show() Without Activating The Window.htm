<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head id="ctl00_ctl00_Head1"><title>WPF Tips and Tricks: Window.Show() Without Activating The Window | IRhetoric: Convergence in the Simulacrum!</title>


<link title="Karsten Januszewski" type="application/rss+xml" rel="alternate" href="http://feeds.feedburner.com/irhetoric"><link rel="pingback" href="http://www.rhizohm.net//irhetoric/blog/9/pingback/default.aspx"><link href="WPF%20Tips%20and%20Tricks%20Window.Show%28%29%20Without%20Activating%20The%20Window_files/a.css" type="text/css" rel="stylesheet"><style type="text/css">.delicious-posts ul{list-style-type:none}.delicious-tag,.delicious-extended{font-size:smaller}.delicious-extended{margin:0;padding:0 0 0.25em 0}.module-list-item .delicious-posts ul{margin:0;padding:0}.module-list-item .delicious-posts h2,.module-list-item .delicious-posts li:first-child{margin-top:0}.delicious-posts img{display:inline;border:0}</style></head><body>
	<form name="aspnetForm" method="post" action="default.aspx" id="aspnetForm">
<div>
<input name="__EVENTTARGET" id="__EVENTTARGET" value="" type="hidden">
<input name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" type="hidden">
<input name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwULLTE5MTUyMzI1MzlkZEgjCLK4rDWCMakG4sKG6CMgyy5A" type="hidden">
</div>

<script type="text/javascript">
<!--
var theForm = document.forms['aspnetForm'];
if (!theForm) {
    theForm = document.aspnetForm;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
// -->
</script>


<script src="WPF%20Tips%20and%20Tricks%20Window.Show%28%29%20Without%20Activating%20The%20Window_files/WebResource.js" type="text/javascript"></script>


<script src="WPF%20Tips%20and%20Tricks%20Window.Show%28%29%20Without%20Activating%20The%20Window_files/globals.js" type="text/javascript"></script>
<script src="WPF%20Tips%20and%20Tricks%20Window.Show%28%29%20Without%20Activating%20The%20Window_files/blog.js" type="text/javascript"></script>
<script src="WPF%20Tips%20and%20Tricks%20Window.Show%28%29%20Without%20Activating%20The%20Window_files/ScriptResource_002.js" type="text/javascript"></script>
<script src="WPF%20Tips%20and%20Tricks%20Window.Show%28%29%20Without%20Activating%20The%20Window_files/ScriptResource.js" type="text/javascript"></script>
<script src="WPF%20Tips%20and%20Tricks%20Window.Show%28%29%20Without%20Activating%20The%20Window_files/jsdebug.js" type="text/javascript"></script>
		<script type="text/javascript">
//<![CDATA[
Sys.WebForms.PageRequestManager._initialize('ctl00$ctl00$Scriptmanager1', document.getElementById('aspnetForm'));
Sys.WebForms.PageRequestManager.getInstance()._updateControls([], [], [], 90);
//]]>
</script>

		<div id="container">
			<div id="header">			
				<div id="datw">
				</div>
				<h1 id="title"><a href="http://www.rhizohm.net/"><span>IRhetoric: Convergence in the Simulacrum!</span></a></h1>
				<div id="topNav">
					<div><a href="http://feeds.feedburner.com/irhetoric">Subscribe <img src="WPF%20Tips%20and%20Tricks%20Window.Show%28%29%20Without%20Activating%20The%20Window_files/rss.gif" alt="Subscribe to IRhetoric: Convergence in the Simulacrum!"></a></div><ul><li><a href="http://rhizohm.net/irhetoric">Home</a> | </li><li><a href="http://rhizohm.net/irhetoric/blog/archives/default.aspx">Archives</a> | </li><li><a href="http://rhizohm.net/irhetoric/about/default.aspx">About</a></li></ul>
				</div>
			</div>
			
				<div id="rightBar">
					<div class="contentBox">
<h3>recent posts</h3><div class="content">
<div class="recentPosts">
<ul>
<li><a href="http://rhizohm.net/irhetoric/blog/15/default.aspx" title=".NET Source Released">
.NET Source Released
</a>
</li>
<li><a href="http://rhizohm.net/irhetoric/blog/14/default.aspx" title="Joshua Allen on Marc Andreessen">
Joshua Allen on Marc Andreessen
</a>
</li>
<li><a href="http://rhizohm.net/irhetoric/blog/13/default.aspx" title="Triangulating Moonlight, Yochai Benkler and Web 2.0">
Triangulating Moonlight, Yochai Benkler and Web 2.0
</a>
</li>
<li><a href="http://rhizohm.net/irhetoric/blog/12/default.aspx" title="Why Rhizohm?">
Why Rhizohm?
</a>
</li>
<li><a href="http://rhizohm.net/irhetoric/blog/11/default.aspx" title="No Dev Tools: MSBuild, MSBee, .NET 1.1 and the Command Line">
No Dev Tools: MSBuild, MSBee, .NET 1.1 and the Command Line
</a>
</li>
</ul>
</div>
</div>
</div>

					<div class="contentBox">
					
				    <script type="text/javascript" src="WPF%20Tips%20and%20Tricks%20Window.Show%28%29%20Without%20Activating%20The%20Window_files/irhetoric.js"></script><div class="delicious-posts" id="delicious-posts-irhetoric"><h2 class="delicious-banner sidebar-title"><a href="http://del.icio.us/"><img src="WPF%20Tips%20and%20Tricks%20Window.Show%28%29%20Without%20Activating%20The%20Window_files/delicious.gif" alt="del.icio.us" height="10" width="10"></a> <a href="http://del.icio.us/irhetoric">my del.icio.us</a></h2><ul><li class="delicious-post delicious-odd"><a class="delicious-link" href="http://www.feedthecreature.com/posters.php">FEED THE CREATURE</a> </li><li class="delicious-post delicious-even"><a class="delicious-link" href="http://video.google.com/videoplay?docid=362421849901825950&amp;hl=en">Really Achieving Your Childhood Dreams</a> </li><li class="delicious-post delicious-odd"><a class="delicious-link" href="http://labs.adobe.com/wiki/index.php/Thermo">Thermo - Adobe Labs</a> </li><li class="delicious-post delicious-even"><a class="delicious-link" href="http://lab.mathieu-badimon.com/">http://lab.mathieu-badimon.com/</a> </li><li class="delicious-post delicious-odd"><a class="delicious-link" title="looks good" href="http://blog.wired.com/sterling/2007/08/geerts-new-book.html">Geert's New Book</a> </li></ul></div>
<noscript><a href="http://del.icio.us/irhetoric">my del.icio.us</a></noscript>
				    </div>
				    
					<div class="contentBox">
<h3>tags I use</h3><div class="content">
<div class="tagsIUse">
<div class="popular">
popular this month</div><div class="tags">
<a href="http://rhizohm.net/irhetoric/blog/tags/Web+2.0/default.aspx" title="Web 2.0">
Web 2.0</a> ♦ <a href="http://rhizohm.net/irhetoric/blog/tags/Rhizohm/default.aspx" title="Rhizohm">
Rhizohm</a> ♦ <a href="http://rhizohm.net/irhetoric/blog/tags/Moonlight/default.aspx" title="Moonlight">
Moonlight</a> ♦ <a href="http://rhizohm.net/irhetoric/blog/tags/Silverlight/default.aspx" title="Silverlight">
Silverlight</a> ♦ <a href="http://rhizohm.net/irhetoric/blog/tags/WPF/default.aspx" title="WPF">
WPF</a></div>
</div>
</div>
</div>
		
				    <div class="contentBox"><h3>blog archives</h3></div><div class="content"><div class="archiveYear">2007</div><div id="ctl00_ctl00_SideBarPlaceHolder_pnl2007Container" class="archiveMonths">
	<ul><li><a href="http://rhizohm.net/irhetoric/blog/archives/2007/10/default.aspx" title="October">October</a></li><li><a href="http://rhizohm.net/irhetoric/blog/archives/2007/9/default.aspx" title="September">September</a></li><li><a href="http://rhizohm.net/irhetoric/blog/archives/2007/8/default.aspx" title="August">August</a></li></ul>
</div></div>
				</div>
			
			<div id="content">
				
    <div id="leftWide">
		
<div id="post_9" class="post">
<h1 class="title">
<a href="http://rhizohm.net/irhetoric/blog/9/default.aspx">
<span>WPF Tips and Tricks: Window.Show() Without Activating The Window</span>
</a>
</h1>
<div class="tags">
 - tagged <a href="http://rhizohm.net/irhetoric/blog/tags/WPF/default.aspx" rel="tag">WPF</a></div>
<div class="content">
<p>So you want to spawn a new WPF window but you don't want it to be
activated?&nbsp; This is doable in Win32, but with WPF, it presents
some problems ... until now.&nbsp; This issue recently came up and some
folks (read: not me) on the WPF team discovered a a pretty clever
workaround.&nbsp; Basically, the workaround is to use an obscure
windows hooks that exists for Computer Based Training (CBT), which
allows or a training program to choose to ignore or allow messages to
get through to the window. </p> <p>So, the solution is to set the hook before calling the&nbsp;<strong>Show()</strong>
method on the window. The call back receives the HCBT_ACTIVATE
notification, returns 1 to ignore/prevent the operation, then unhooks
the hook. The window is shown, but does not take focus. There is no
flicker or visible degradation. </p><p>If you'd like to see this working in action, <a href="http://rhizohm.net/apps/showwindowwithoutactivating/publish.htm">check out the sample application</a>
that I've deployed via ClickOnce.&nbsp; You'll notice that the main
window will&nbsp;spawn three&nbsp;windows yet you will&nbsp;continue to
be able to type in the textbox of the main window. I've <a href="http://rhizohm.net/apps/showwindowwithoutactivating/showwindowwithoutactivating.zip">posted the source code</a> and here's the crux of the code if you are interested: </p><p>&nbsp;</p><pre class="code"><span style="color: rgb(0, 0, 255);">using</span> System;
<span style="color: rgb(0, 0, 255);">using</span> System.Collections.Generic;
<span style="color: rgb(0, 0, 255);">using</span> System.Runtime.InteropServices;
<span style="color: rgb(0, 0, 255);">using</span> System.Text;
<span style="color: rgb(0, 0, 255);">using</span> System.Threading;
<span style="color: rgb(0, 0, 255);">using</span> System.Windows;
<span style="color: rgb(0, 0, 255);">using</span> System.Windows.Controls;
<span style="color: rgb(0, 0, 255);">using</span> System.Windows.Data;
<span style="color: rgb(0, 0, 255);">using</span> System.Windows.Documents;
<span style="color: rgb(0, 0, 255);">using</span> System.Windows.Input;
<span style="color: rgb(0, 0, 255);">using</span> System.Windows.Media;
<span style="color: rgb(0, 0, 255);">using</span> System.Windows.Media.Imaging;
<span style="color: rgb(0, 0, 255);">using</span> System.Windows.Shapes;
<span style="color: rgb(0, 0, 255);">using</span> System.Windows.Threading;


<span style="color: rgb(0, 0, 255);">namespace</span> ShowWindowWithoutActivating
{
    <span style="color: rgb(128, 128, 128);">///</span><span style="color: rgb(0, 128, 0);"> </span><span style="color: rgb(128, 128, 128);">&lt;summary&gt;
</span>    <span style="color: rgb(128, 128, 128);">///</span><span style="color: rgb(0, 128, 0);"> Interaction logic for Window1.xaml
</span>    <span style="color: rgb(128, 128, 128);">///</span><span style="color: rgb(0, 128, 0);"> </span><span style="color: rgb(128, 128, 128);">&lt;/summary&gt;

</span>    <span style="color: rgb(0, 0, 255);">public</span> <span style="color: rgb(0, 0, 255);">partial</span> <span style="color: rgb(0, 0, 255);">class</span> <span style="color: rgb(43, 145, 175);">Window1</span> : System.Windows.<span style="color: rgb(43, 145, 175);">Window
</span>    {
        <span style="color: rgb(0, 0, 255);">delegate</span> <span style="color: rgb(0, 0, 255);">int</span> <span style="color: rgb(43, 145, 175);">HookProc</span>(<span style="color: rgb(0, 0, 255);">int</span> code, <span style="color: rgb(43, 145, 175);">IntPtr</span> wParam, <span style="color: rgb(43, 145, 175);">IntPtr</span> lParam);
        <span style="color: rgb(0, 0, 255);">private</span> <span style="color: rgb(43, 145, 175);">HookProc</span> myCallbackDelegate;
        <span style="color: rgb(43, 145, 175);">IntPtr</span> hook;

        <span style="color: rgb(43, 145, 175);">DispatcherTimer</span> dt = <span style="color: rgb(0, 0, 255);">new</span> <span style="color: rgb(43, 145, 175);">DispatcherTimer</span>();

        <span style="color: rgb(0, 0, 255);">int</span> counter = 0;

        <span style="color: rgb(0, 0, 255);">public</span> Window1()
        {
            InitializeComponent();
            textBox1.Focus();
            dt.Interval = <span style="color: rgb(0, 0, 255);">new</span> System.<span style="color: rgb(43, 145, 175);">TimeSpan</span>(0, 0, 3);
            dt.Tick += <span style="color: rgb(0, 0, 255);">new</span> <span style="color: rgb(43, 145, 175);">EventHandler</span>(TimerTick);
            dt.Start();

            <span style="color: rgb(0, 128, 0);">// initialize our delegate
</span>            <span style="color: rgb(0, 0, 255);">this</span>.myCallbackDelegate = <span style="color: rgb(0, 0, 255);">new</span> <span style="color: rgb(43, 145, 175);">HookProc</span>(<span style="color: rgb(0, 0, 255);">this</span>.MyCallbackFunction);

        }
        <span style="color: rgb(0, 0, 255);">public</span> <span style="color: rgb(0, 0, 255);">void</span> TimerTick(<span style="color: rgb(0, 0, 255);">object</span> sender, <span style="color: rgb(43, 145, 175);">EventArgs</span> e)
        {
            <span style="color: rgb(0, 0, 255);">if</span> (counter == 2) dt.Stop();
            counter++;

            <span style="color: rgb(43, 145, 175);">Window</span> w = <span style="color: rgb(0, 0, 255);">new</span> <span style="color: rgb(43, 145, 175);">Window</span>();
            w.Title = <span style="color: rgb(163, 21, 21);">"TestWindow"</span>;
            w.Width = 400;
            w.Height = 300;
            w.Top = 400;
            w.Left = 400;

            <span style="color: rgb(0, 128, 0);">// setup a cbt hook
</span>            hook = SetWindowsHookEx(5 <span style="color: rgb(0, 128, 0);">/* wh_cbt */</span>, <span style="color: rgb(0, 0, 255);">this</span>.myCallbackDelegate, <span style="color: rgb(43, 145, 175);">IntPtr</span>.Zero, <span style="color: rgb(43, 145, 175);">AppDomain</span>.GetCurrentThreadId());
            w.Show();
        }

        <span style="color: rgb(0, 0, 255);">private</span> <span style="color: rgb(0, 0, 255);">int</span> MyCallbackFunction(<span style="color: rgb(0, 0, 255);">int</span> code, <span style="color: rgb(43, 145, 175);">IntPtr</span> wParam, <span style="color: rgb(43, 145, 175);">IntPtr</span> lParam)
        {
            <span style="color: rgb(0, 0, 255);">switch</span> (code)
            {
                <span style="color: rgb(0, 0, 255);">case</span> 5: <span style="color: rgb(0, 128, 0);">/* HCBT_ACTVIATE */
</span>                    UnhookWindowsHookEx(hook);
                    <span style="color: rgb(0, 0, 255);">return</span> 1; <span style="color: rgb(0, 128, 0);">/* prevent windows from handling activate */
</span>            }
            <span style="color: rgb(0, 128, 0);">//return the value returned by CallNextHookEx
</span>            <span style="color: rgb(0, 0, 255);">return</span> CallNextHookEx(<span style="color: rgb(43, 145, 175);">IntPtr</span>.Zero, code, wParam, lParam);
        }

        [<span style="color: rgb(43, 145, 175);">DllImport</span>(<span style="color: rgb(163, 21, 21);">"user32.dll"</span>)]
        <span style="color: rgb(0, 0, 255);">static</span> <span style="color: rgb(0, 0, 255);">extern</span> <span style="color: rgb(0, 0, 255);">bool</span> UnhookWindowsHookEx(<span style="color: rgb(43, 145, 175);">IntPtr</span> hhk);

        [<span style="color: rgb(43, 145, 175);">DllImport</span>(<span style="color: rgb(163, 21, 21);">"user32.dll"</span>)]
        <span style="color: rgb(0, 0, 255);">static</span> <span style="color: rgb(0, 0, 255);">extern</span> <span style="color: rgb(43, 145, 175);">IntPtr</span> SetWindowsHookEx(<span style="color: rgb(0, 0, 255);">int</span> code, <span style="color: rgb(43, 145, 175);">HookProc</span> func, <span style="color: rgb(43, 145, 175);">IntPtr</span> hInstance, <span style="color: rgb(0, 0, 255);">int</span> threadID);

        [<span style="color: rgb(43, 145, 175);">DllImport</span>(<span style="color: rgb(163, 21, 21);">"user32.dll"</span>)]
        <span style="color: rgb(0, 0, 255);">static</span> <span style="color: rgb(0, 0, 255);">extern</span> <span style="color: rgb(0, 0, 255);">int</span> CallNextHookEx(<span style="color: rgb(43, 145, 175);">IntPtr</span> hhk, <span style="color: rgb(0, 0, 255);">int</span> nCode, <span style="color: rgb(43, 145, 175);">IntPtr</span> wParam, <span style="color: rgb(43, 145, 175);">IntPtr</span> lParam);

    }
}</pre><a href="http://11011.net/software/vspaste"></a></div>
<div class="info">
posted on Aug 22nd, 2007
 | <a href="http://rhizohm.net/irhetoric/blog/9/default.aspx">Permalink</a>
 | <a href="http://rhizohm.net/irhetoric/blog/9/default.aspx#comments">Comments (0)</a>
</div>
</div>
<div id="comment_area">
<div id="commentListContainer"><div class="comments"><a name="comments"></a><h3>Comments</h3><p>No comments yet.</p></div></div><div id="postcomment"><h2>Leave a comment</h2><div id="commentInfo" class="info"></div><p><input class="input standard" id="txtName" type="text"><label for="txtName"> Name (required)</label></p><p><input class="input standard" id="txtEmail" type="text"><label for="txtEmail"> E-mail (required)</label></p><p><input class="input standard" id="txtUrl" type="text"><label for="txtUrl"> Website</label></p><p><textarea id="txtBody" rows="10" class="input textarea"></textarea></p><p><input id="chkRemember" type="checkbox"><label for="chkRemember"> Remember me</label></p><p><input id="btnAdd" onclick="addComment();" value="Submit Comment" type="button"></p></div></div>

<!--
<rdf:RDF
 xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
 xmlns:dc="http://purl.org/dc/elements/1.1/"
 xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
 rdf:about="http://www.rhizohm.net//irhetoric/blog/9/default.aspx"
 dc:identifier="http://www.rhizohm.net//irhetoric/blog/9/default.aspx"
 dc:title="WPF Tips and Tricks: Window.Show() Without Activating The Window"
 trackback:ping="http://www.rhizohm.net//irhetoric/blog/9/trackback/default.aspx" />
</rdf:RDF>
-->
<img src="WPF%20Tips%20and%20Tricks%20Window.Show%28%29%20Without%20Activating%20The%20Window_files/default.gif" border="0">
	</div>

			</div> 
			<div id="footer">
<h3><a href="http://www.rhizohm.net/">IRhetoric: Convergence in the Simulacrum!</a></h3><div class="reduced">Unless otherwise specified, all of this content is made available under the <a href="http://creativecommons.org/licenses/by/2.5/"> Creative Commons License</a></div></div>

		</div>
	

<script type="text/javascript">
<!--
initComments();g_appPath = '/irhetoric';g_themePath = g_appPath + '/App_Themes/a/';ceID = '9';Sys.Application.initialize();
// -->
</script>
</form>
</body></html>
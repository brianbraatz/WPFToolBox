<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0064)http://blogs.msdn.com/johngossman/archive/2005/10/08/478683.aspx -->
<HTML><HEAD><TITLE>Tales from the Smart Client : Introduction to Model/View/ViewModel pattern for building WPF apps</TITLE>
<META 
content="Model/View/ViewModel is a variation of Model/View/Controller (MVC) that is tailored for modern UI development platforms where the View is the responsibility of a designer rather than a classic developer. The designer is generally a more graphical, artistic" 
name=description>
<META content="MSHTML 6.00.2900.3199" name=GENERATOR><LINK 
href="http://blogs.msdn.com/johngossman/pingback.aspx" rel=pingback><LINK 
media=print 
href="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/print.css" 
type=text/css rel=stylesheet><LINK media=screen 
href="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/Common.css" 
type=text/css rel=stylesheet><LINK media=screen 
href="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/Blog.css" 
type=text/css rel=stylesheet><LINK media=print 
href="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/common_print.css" 
type=text/css rel=stylesheet><LINK media=print 
href="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/blog_print.css" 
type=text/css rel=stylesheet><LINK href="/favicon.ico" type=image/ico 
rel="shortcut icon"><LINK title="Tales from the Smart Client (RSS 2.0)" 
href="http://blogs.msdn.com/johngossman/rss.xml" type=application/rss+xml 
rel=alternate><LINK title="Tales from the Smart Client (Atom 1.0)" 
href="http://blogs.msdn.com/johngossman/atom.xml" type=application/atom+xml 
rel=alternate><LINK 
title="Introduction to Model/View/ViewModel pattern for building WPF apps Comment RSS (RSS 2.0)" 
href="http://blogs.msdn.com/johngossman/commentrss.aspx?PostID=478683" 
type=application/rss+xml rel=alternate>
<META http-equiv=Content-Type content="text/html; charset=UTF-8">
<SCRIPT 
src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/global.js" 
type=text/javascript></SCRIPT>

<STYLE type=text/css>BODY {
	FONT-SIZE: 84%
}
</STYLE>

<SCRIPT language=JavaScript>var doImage=doImage;var TType=TType;
function mhHover(tbl,idx,cls){var t,d;if(document.getElementById)t=document.getElementById(tbl);else t=document.all(tbl);if(t==null)return;if(t.getElementsByTagName)d=t.getElementsByTagName("TD");else d=t.all.tags("TD");if(d==null)return;if(d.length<=idx)return;d[idx].className=cls;}

</SCRIPT>

<SCRIPT language=javascript 
src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/minmax.js" 
type=text/javascript></SCRIPT>
</HEAD>
<BODY>
<FORM id=aspnetForm name=aspnetForm 
action=/johngossman/archive/2005/10/08/478683.aspx method=post>
<DIV><INPUT id=__VIEWSTATE type=hidden 
value=/wEPDwUKLTMyNjg0MDc1MWRk4kqgif0qb+BsXqBU64DM+rPSfXA= name=__VIEWSTATE> 
</DIV>
<SCRIPT language=javascript 
src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/Telligent_Modal.js" 
type=text/javascript></SCRIPT>

<SCRIPT language=javascript type=text/javascript>
// <![CDATA[
Telligent_Modal.Configure('/utility/loading.htm',['CommonModal'],['CommonModalTitle'],['CommonModalClose'],['CommonModalContent'],['CommonModalFooter'],['CommonModalResize'],['CommonModalMask'],100);
// ]]>
</SCRIPT>

<DIV id=AllContent>
<DIV id=CommonHeader>
<DIV id=msviMasthead>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="100%">
      <TABLE height=22 cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD id=msviRegionIdGraphic bgColor=#ffffff></TD>
          <TD width="100%" bgColor=#3568cc><IMG title="" height=22 alt=* 
            src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/topGradient.jpg" 
            width=250></TD></TR></TBODY></TABLE></TD>
    <TD id=msviGlobalToolbar noWrap align=left bgColor=#3568cc height=22>
      <TABLE cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=gt0 onmouseover="mhHover('msviGlobalToolbar', 0, 'gt1')" 
          onmouseout="mhHover('msviGlobalToolbar', 0, 'gt0')" noWrap><A 
            style="FONT-SIZE: 95%" 
            href="http://www.microsoft.com/">Microsoft.com Home</A></TD>
          <TD class=gtsep>|</TD>
          <TD class=gt0 onmouseover="mhHover('msviGlobalToolbar', 2, 'gt1')" 
          onmouseout="mhHover('msviGlobalToolbar', 2, 'gt0')" noWrap><A 
            style="FONT-SIZE: 95%" 
            href="http://www.microsoft.com/library/toolbar/3.0/sitemap/en-us.mspx">Site 
            Map</A></TD></TR></TBODY></TABLE></TD></TR>
  <TR vAlign=top>
    <TD width="100%">
      <TABLE height=42 cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR vAlign=top>
          <TD id=msviBrandBanner bgColor=#ffffff><A 
            href="http://msdn.microsoft.com/"><IMG title="" height=42 alt=MSDN 
            src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/msdn_masthead_ltr.gif" 
            width=225 border=0></A></TD>
          <TD width="100%" bgColor=#6799ff><IMG title="" height=42 alt=* 
            src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/topGradient2.jpg" 
            width=250></TD></TR></TBODY></TABLE></TD>
    <TD id=msviGlobalSearch bgColor=#6799ff>
      <DIV id=msviNoSearch></DIV></TD></TR></TBODY></TABLE>
<DIV id=msviLocalToolbar>
<TABLE height=19 cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD id=msviHomePageLink noWrap width=177><A 
      href="http://msdn.microsoft.com/">MSDN Home</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 2, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 2, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/developercenters/">Developer 
Centers</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 4, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 4, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/flash">MSDN Flash</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 6, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 6, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/subscriptions/">Subscribers</A></TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 8, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 8, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 10, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 10, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 12, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 12, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 14, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 14, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 16, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 16, 'lt0')" noWrap>&nbsp;</TD>
    <TD width="100%"></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<TABLE dir=ltr cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR vAlign=top>
    <TD id=CommonLeftColumn 
    style="BORDER-RIGHT: #999999 1px solid; OVERFLOW-X: hidden" width=181 
    bgColor=#f1f1f1 height="100%">
      <DIV class=mnpMenuTop id=mnpMenuTop>
      <DIV class=mnpInherit>
      <DIV class=CommonSidebarArea>
      <DIV class=CommonSidebarContent><A 
      href="http://blogs.msdn.com/default.aspx">Blogs Home</A> </DIV></DIV>
      <DIV class=CommonSidebarArea>
      <DIV class=CommonSidebarContent><A 
      id=ctl00___ctl00___ctl00_ctl00_AggWelcome___Login 
      href="http://blogs.msdn.com/login.aspx?ReturnUrl=%2fjohngossman%2farchive%2f2005%2f10%2f08%2f478683.aspx">Sign 
      in</A> | <A id=ctl00___ctl00___ctl00_ctl00_AggWelcome___Register 
      href="http://blogs.msdn.com/user/CreateUser.aspx?ReturnUrl=/johngossman/archive/2005/10/08/478683.aspx">Join</A> 
      </DIV></DIV>
      <DIV class=CommonSidebarArea>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A href="http://blogs.msdn.com/search/">Search</A> 
        <LI><A href="http://blogs.msdn.com/MainFeed.aspx?Type=AllBlogs">RSS</A> 
        <LI><A href="http://blogs.msdn.com/Opml.aspx">OPML</A> 
      </LI></UL></DIV></DIV></DIV></DIV>
      <DIV class=mnpAds 
      style="BACKGROUND: #f1f1f1; PADDING-BOTTOM: 20px; WIDTH: 181px; HEIGHT: 100%"></DIV></TD>
    <TD width="100%">
      <TABLE style="TABLE-LAYOUT: fixed" cellSpacing=0 cellPadding=0 
      width="100%" border=0>
        <TBODY>
        <TR>
          <TD width="100%">
            <DIV class=clsDocBody id=pageContainer>
            <DIV class=CommonContentArea>
            <H2 class=CommonTitle><A class=headermaintitle 
            id=ctl00___ctl00___ctl00_ctl00_bcr_bth___BlogTitle 
            href="http://blogs.msdn.com/johngossman/default.aspx">Tales from the 
            Smart Client</A></H2>
            <DIV class=CommonContent>John Gossman's observations on Avalon 
            development</DIV>
            <DIV class=CommonContent>
            <STYLE>.DoNotDisplay {
	DISPLAY: none
}
</STYLE>

            <DIV class=BlogPostArea>
            <H4 class=BlogPostHeader>Introduction to Model/View/ViewModel 
            pattern for building WPF apps </H4>
            <DIV class=BlogPostContent>
            <P>Model/View/ViewModel is a variation of Model/View/Controller 
            (MVC) that is tailored for modern UI development platforms where the 
            View is the responsibility of a designer rather than a classic 
            developer.&nbsp; The designer is generally a more graphical, 
            artistic focused person, and does less classic coding than a 
            traditional developer..&nbsp; The design is almost always done in a 
            declarative form like HTML or XAML, and very often using a WYSIWYG 
            tool such as Dreamweaver, Flash or Sparkle.&nbsp; In short, the UI 
            part of the application is being developed using different tools, 
            languages and by a different person than is the business logic or 
            data backend.&nbsp; Model/View/ViewModel is thus&nbsp; a refinement 
            of MVC that evolves it from its Smalltalk origins where the entire 
            application was built using one environment and language, into the 
            very familiar modern environment of Web and now Avalon 
            development.</P>
            <P>Model/View/ViewModel also relies on one more thing:&nbsp; a 
            general mechanism for data binding.&nbsp;&nbsp; More on that 
            later.</P>
            <P>The Model is defined as in MVC; it is the data or business logic, 
            completely UI independent, that stores the state and does the 
            processing of the problem domain.&nbsp; The Model is written in code 
            or is represented by pure data encoded in relational tables or 
            XML.&nbsp; </P>
            <P>The View in Model/View/ViewModel&nbsp;consists of the&nbsp;visual 
            elements, the buttons, windows,&nbsp;graphics and more complex 
            controls of a GUI.&nbsp; It encodes the keyboard shortcuts and the 
            controls themselves manage the interaction with the&nbsp;input 
            devices that is&nbsp;the responsibility of Controller in MVC (what 
            exactly happened to Controller in modern GUI development is a long 
            digression...I tend to think it just faded into the 
            background.&nbsp; It is still there, but we don't have to think 
            about it as much as we did in 1979).&nbsp; The View is almost always 
            defined declaratively, very often with a tool.&nbsp; By the nature 
            of these tools and declarative languages some view state that MVC 
            encodes in its View classes is not easy to represent.&nbsp; For 
            example, the UI may have multiple modes of interaction such as "view 
            mode" and "edit mode" that change the behavior of the controls or 
            the look of the visuals, but these modes can't always be expressed 
            in XAML (though triggers are a great start).&nbsp; We will solve 
            this problem later.</P>
            <P>At this point data binding comes into play.&nbsp; In simple 
            examples, the View is data bound directly to the Model.&nbsp; Parts 
            of the Model are simply displayed in the view by one-way data 
            binding.&nbsp; Other parts of the model can be edited by directly 
            binding controls two-way to the data.&nbsp; For example, a boolean 
            in the Model can be data bound to a CheckBox, or a string field to a 
            TextBox.</P>
            <P>In practice however, only a small subset of application UI can be 
            data bound directly to the Model, especially if the Model is a 
            pre-existing class or data schema over which the application 
            developer has no control.&nbsp; The Model is very likely to have a 
            data types that cannot be mapped directly to controls.&nbsp; The UI 
            may want to perform complex operations that must be implemented in 
            code which doesn't make sense in our strict definition of the View 
            but are too specific to be included in the Model (or didn't come 
            with the pre-existing model).&nbsp; Finally we need a place to put 
            view state such as selection or modes.</P>
            <P>The ViewModel is responsible for these tasks.&nbsp; The term 
            means "Model of a View", and can be thought of as abstraction of the 
            view, but it also provides&nbsp;a specialization of the Model that 
            the View can use for data-binding.&nbsp; In this latter role the 
            ViewModel contains data-transformers that convert Model types into 
            View types, and it contains Commands the View can use to interact 
            with the Model.&nbsp; </P>
            <P>I will develop these ideas, and describe in particular how to 
            bind the View to Commands on the ViewModel in later posts.&nbsp; But 
            the quickest way to clarify this pattern is to provide some 
            examples:</P>
            <P>&nbsp;</P>
            <P>&nbsp;</P>
            <P><IMG src=""></P>
            <P>&nbsp;</P>
            <P>The above picture shows three editing panels in the Sparkle 
            UI.&nbsp; Each has been developed using the Model/View/ViewModel 
            pattern.&nbsp;&nbsp; The simplest is the Library Panel at the 
            top.&nbsp; The Model is a list of assemblies (each an instance of 
            System.Reflection.Assembly), and associated with each list of 
            assemblies is a list of controls.&nbsp; The View is one of our Panel 
            chrome controls and a series of Styles and DataTemplates that expose 
            the assembly list in a ComboBox and the list of controls&nbsp;in a 
            ListBox.&nbsp; We data bind the caption of the ComboBox directly to 
            the name of the Assembly and the items of the listbox take their 
            text from the name of the Control.&nbsp;&nbsp;The ViewModel&nbsp;has 
            as state the currently selected Assembly and exposes Commands for 
            inserting a control into the scene.&nbsp;&nbsp; Selection is one of 
            the most common components of a ViewModel.&nbsp; But since controls 
            have selection, you may wonder why selection isn't left in the View 
            instead.&nbsp; This is done because often many controls in the view 
            need to coordinate based on a single selection.&nbsp; It is easier 
            to bind to a single representation of selection in the ViewModel 
            than coordinate all the different controls in the view.&nbsp; In the 
            Library, the selected Assembly determines what is selected by the 
            ComboBox and also what list data is displayed by the ListBox.&nbsp; 
            Additionally, the designer could decide to switch to using a ListBox 
            for the assemblies and a ComboBox for the control list without 
            copying over selection coordination logic from his original 
view.</P>
            <P>The Appearance panel has as its Model the selected shapes or 
            controls in Sparkle's editing area.&nbsp; The View has a ListBox 
            that displays the interesting properties on the selection (basically 
            all the Pen and Brush properties), buttons that determine whether 
            the Brush or Pen is solid, gradient etc. and a color spectrum for 
            editing color components.&nbsp; The ViewModel includes what property 
            is selected, what gradient stop is selected when editing a gradient, 
            data converters for mapping colors to text values and to positions 
            in the color spectrum, and commands for changing the Pens and 
            Brushes being edited.&nbsp; In this case the Model was given to us 
            by Avalon, the View could easily be changed to something radically 
            different, and the ViewModel provides an abstract representation for 
            the reusable parts of this UI.</P>
            <P>The final example is our Project panel.&nbsp; Here the Model is 
            an MSBuild Project...again a Model class that was 
            pre-existing.&nbsp; The View is a tree control, scrolling area, and 
            contains context menus.&nbsp; The ViewModel adapts MSBuild concepts 
            that were designed without Avalon in mind (and work perfectly fine 
            from the command line) so we can data bind to them, and again 
            contains selection and commands.&nbsp; </P>
            <P>Once you've grokked the Model/View/ViewModel pattern any UI 
            problem is quickly stated in its terms.&nbsp; In fact, the entire 
            Sparkle UI is defined using the pattern.&nbsp; The "selected shapes 
            or controls&nbsp;in the editing area" that is the Model for the 
            Appearance panel is itself a ViewModel concept from our Scene 
            editor.&nbsp; The layout of Panels inside Sparkle has a Model 
            consisting of a list of all registered panels, a View made up of a 
            Grid with splitters that position the views, and a ViewModel that 
            includes what panels are currently visible and what logical 
            containers they are in (editing area, right, left, bottom 
trays).</P>
            <P>More later...</P></DIV>
            <DIV class=BlogPostFooter>Published Saturday, October 08, 2005 6:51 
            PM by <A 
            id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___AuthorLink 
            href="http://blogs.msdn.com/user/Profile.aspx?UserID=4026">JohnGossman</A> 

            <DIV><SPAN 
            id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___InlineTagEditorPanel></SPAN><INPUT 
            id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___InlineTagEditorPanel_State 
            type=hidden value=nochange 
            name=ctl00$_$ctl00$_$ctl00$ctl00$bcr$ctl00$_$Entry$_$InlineTagEditorPanel></DIV></DIV></DIV>
            <DIV id=comments>
            <H3>Comments </H3>
            <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
              <TBODY>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl01_NameLink 
                  title=nar>nar</A> said:</H4>
                  <DIV class=CommentText>What's that collapsable panel that you 
                  use as a container for your editing panels there? Is it 
                  included with WPF? <BR></DIV>
                  <DIV class=CommentFooter>October 11, 2005 9:57 AM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="CommentOwner CommentAvatar"><IMG 
                  src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="CommentOwner  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl02_NameLink 
                  title=JohnGossman 
                  href="http://blogs.msdn.com/johngossman">JohnGossman</A> 
                  said:</H4>
                  <DIV class=CommentText>The panel is custom. I don't know if 
                  WPF will contain something similar by the time we release. 
                  <BR><BR></DIV>
                  <DIV class=CommentFooter>October 11, 2005 10:55 AM 
</DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl03_NameLink 
                  title="Chris Ortman" 
                  href="http://www.codeprairie.net/blogs/chrisortman" 
                  rel=nofollow>Chris Ortman</A> said:</H4>
                  <DIV class=CommentText>I really like this pattern, it seems 
                  very logical and extensible. I'm definately looking forward to 
                  the power of WPF...but sigh we won't have it generally 
                  available for sometime yet. I was wondering if you had ever 
                  tried to implement this same pattern using winforms 
                  databinding? I have attempted it, but ended up getting stuck 
                  when it came to representing hierchial data and needing to 
                  deep bind ie bind to something like Customer.Name.First. 
</DIV>
                  <DIV class=CommentFooter>October 11, 2005 3:47 PM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl04_NameLink 
                  title="Some Guy">Some Guy</A> said:</H4>
                  <DIV class=CommentText>What is it with you Microsoft people? 
                  "The Controller has faded"? WHAT PLANET ARE YOU ON? If I ever 
                  imagined that you might understand object-oriented programming 
                  one of these years, that hope is gone. <BR><BR>Take a couple 
                  of months, study Apple's Cocoa framework, learn how they 
                  implemented bindings, and save your company and all of your 
                  developers man-years of wasted effort. <BR><BR>The key 
                  concepts you need to understand are MVC, Messaging, the 
                  Target-Action pattern, the Notification pattern, and the 
                  Delegation pattern. The key implementations you need to 
                  understand are Key-Value Coding, Key-Value Observing, and 
                  Keypaths. <BR></DIV>
                  <DIV class=CommentFooter>October 12, 2005 4:41 AM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl05_NameLink 
                  title="Mike Scott">Mike Scott</A> said:</H4>
                  <DIV class=CommentText>Some Guy: this is just a terminology 
                  mismatch. What John calls a ViewModel would be called a 
                  view-controller in Cocoa. Check out the Cocoa Design Patterns 
                  Guide p 34(<A 
                  href="http://developer.apple.com/documentation/Cocoa/Conceptual/CocoaDesignPatterns/CocoaDesignPatterns.pdf" 
                  target=_new 
                  rel=nofollow>http://developer.apple.com/documentation/Cocoa/Conceptual/CocoaDesignPatterns/CocoaDesignPatterns.pdf</A>): 
                  <BR><BR>"The controller layer frequently contains many lines 
                  of code. To make this quantity of code more manageable, it is 
                  sometimes useful to subdivide the controller layer further 
                  into “model-controllers” and “view-controllers”. <BR><BR>A 
                  model-controller is a controller that concerns itself mostly 
                  with the model layer. It “owns” the model; its primary 
                  responsibilities are to manage the model and communicate with 
                  any view-controller <BR>objects. Action methods that apply to 
                  the model as a whole will typically be implemented in a 
                  model-controller. The document architecture provides a number 
                  of these methods for you; for example, NSDocument 
                  automatically handles action methods related to saving files. 
                  <BR><BR>A view-controller is a controller that concerns itself 
                  mostly with the viewlayer. It “owns” the interface (the 
                  views); its primary responsibilities are to manage the 
                  interface and communicate with the <BR>model-controller. 
                  Action methods concerned with data displayed in a view will 
                  typically be <BR>implemented in a view-controller."</DIV>
                  <DIV class=CommentFooter>October 24, 2005 7:46 AM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl06_NameLink 
                  title=TrackBack href="http://www.orbifold.net/default/?p=550" 
                  rel=nofollow>The Orbifold»Blog Archive » WPF patterns : MVC, 
                  MVP or MVVM or…?</A> said:</H4>
                  <DIV class=CommentText>
                  <P>PingBack from <A 
                  href="http://www.orbifold.net/default/?p=550" target=_new 
                  rel=nofollow>http://www.orbifold.net/default/?p=550</A></P></DIV>
                  <DIV class=CommentFooter>December 12, 2006 6:00 AM 
</DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl07_NameLink 
                  title=TrackBack 
                  href="http://drwpf.com/Blog/Default.aspx?tabid=36&amp;EntryID=9" 
                  rel=nofollow>Ask Dr. WPF</A> said:</H4>
                  <DIV class=CommentText>
                  <P>Dear Dr. WPF, I am about to begin leading a rather large 
                  WPF project. I’ve worked on plenty of development efforts 
                  involving Windows Forms projects and even a few Win32 
                  projects, but this ...</P></DIV>
                  <DIV class=CommentFooter>September 30, 2007 4:49 AM 
              </DIV></TD></TR></TBODY></TABLE></DIV><EM>New Comments to this post 
            are disabled</EM> </DIV></DIV></DIV></TD></TR></TBODY></TABLE></TD>
    <TD id=CommonRightColumn style="FONT-SIZE: 100%">
      <DIV class=CommonSidebar>
      <DIV id=BlogLinksSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>This Blog</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___home 
        href="http://blogs.msdn.com/johngossman/default.aspx">Home</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___Contactlink1 
        href="http://blogs.msdn.com/johngossman/contact.aspx">Email</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___LinkListLink1 
        href="http://blogs.msdn.com/johngossman/linklist.aspx">Links</A> 
      </LI></UL></DIV></DIV></DIV>
      <DIV id=TasksSideBar></DIV>
      <DIV id=SubscriptionsSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Syndication</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___bs___rss 
        href="http://blogs.msdn.com/johngossman/rss.xml">RSS 2.0</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___bs___atom 
        href="http://blogs.msdn.com/johngossman/atom.xml">Atom 1.0</A> 
      </LI></UL></DIV></DIV></DIV>
      <DIV id=RecentPostsSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Recent Posts</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl00_Link 
        href="http://blogs.msdn.com/johngossman/archive/2007/05/05/new-role.aspx">New 
        role</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl01_Link 
        href="http://blogs.msdn.com/johngossman/archive/2006/11/04/the-source-for-information-about-wpf-performance.aspx">The 
        source for information about WPF performance</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl02_Link 
        href="http://blogs.msdn.com/johngossman/archive/2006/10/06/More-on-basic-performance.aspx">More 
        on basic performance</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl03_Link 
        href="http://blogs.msdn.com/johngossman/archive/2006/09/05/741797.aspx">Stories 
        from the Perf lab: Part I</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl04_Link 
        href="http://blogs.msdn.com/johngossman/archive/2006/08/21/711452.aspx">Snoop: 
        An essential tool for debugging and perf work with WPF</A> 
      </LI></UL></DIV></DIV></DIV>
      <DIV id=TagSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Tags</H4>
      <DIV class=CommonSidebarContent>
      <DIV class=CommonSidebarTagCloud>No tags have been created or used 
      yet.</DIV></DIV></DIV></DIV>
      <DIV id=NewsSideBar></DIV>
      <DIV id=ArchiveSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Archives</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A href="http://blogs.msdn.com/johngossman/archive/2007/05.aspx">May 
        2007 (1)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2006/11.aspx">November 
        2006 (1)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2006/10.aspx">October 
        2006 (1)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2006/09.aspx">September 
        2006 (1)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2006/08.aspx">August 
        2006 (1)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2006/04.aspx">April 2006 
        (2)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2006/03.aspx">March 2006 
        (5)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2006/02.aspx">February 
        2006 (6)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2006/01.aspx">January 
        2006 (2)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2005/10.aspx">October 
        2005 (16)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2005/09.aspx">September 
        2005 (7)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2005/08.aspx">August 
        2005 (4)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2005/07.aspx">July 2005 
        (3)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2005/06.aspx">June 2005 
        (2)</A> 
        <LI><A href="http://blogs.msdn.com/johngossman/archive/2005/05.aspx">May 
        2005 (11)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2005/04.aspx">April 2005 
        (8)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2005/03.aspx">March 2005 
        (11)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2005/02.aspx">February 
        2005 (4)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2005/01.aspx">January 
        2005 (20)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2004/10.aspx">October 
        2004 (12)</A> 
        <LI><A 
        href="http://blogs.msdn.com/johngossman/archive/2004/09.aspx">September 
        2004 (7)</A> </LI></UL></DIV></DIV></DIV></DIV></TD></TR></TBODY></TABLE><!--NOINDEX_START-->
<DIV id=CommonFooter><BR style="OVERFLOW: hidden; LINE-HEIGHT: 1px" clear=all>
<TABLE id=msviFooter cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR vAlign=bottom>
    <TD id=msviFooter2>
      <DIV id=msviLocalFooter><NOBR><A 
      href="http://go.microsoft.com/?linkid=317027">Manage Your Profile</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/isapi/gomscom.asp?target=/legal/" 
      target=_parent>Legal</A> |</NOBR><WBR><NOBR><A 
      href="http://register.microsoft.com/contactus30/contactus.asp?domain=msdn" 
      target=_parent>Contact Us</A> |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/flash/" target=_parent>MSDN Flash 
      Newsletter</A></NOBR></DIV>
      <DIV id=msviGlobalFooter><SPAN>©2005 Microsoft Corporation. All rights 
      reserved.&nbsp;</SPAN><NOBR><A 
      href="http://www.microsoft.com/info/cpyright.mspx">Terms of Use</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/library/toolbar/3.0/trademarks/en-us.mspx">Trademarks</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://www.microsoft.com/info/privacy.mspx">Privacy 
      Statement</A></NOBR></DIV></TD>
    <TD width=105 bgColor=#669aff><IMG title="" height=29 alt=Microsoft 
      src="Tales from the Smart Client  Introduction to Model-View-ViewModel pattern for building WPF apps_files/bottomMSFTLogo.jpg" 
      width=105 border=0></TD></TR></TBODY></TABLE></DIV></DIV><!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://blogs.msdn.com/johngossman/archive/2005/10/08/478683.aspx"
dc:identifier="http://blogs.msdn.com/johngossman/archive/2005/10/08/478683.aspx"
dc:title="Introduction to Model/View/ViewModel pattern for building WPF apps"
trackback:ping="http://blogs.msdn.com/johngossman/trackback.aspx?PostID=478683" />
</rdf:RDF>
--></FORM></BODY></HTML>

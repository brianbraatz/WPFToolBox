<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0079)http://blogs.msdn.com/dancre/archive/2006/09/17/dm-v-vm-part-8-view-models.aspx -->
<HTML><HEAD><TITLE>Dan Crevier's Blog : DM-V-VM part 8: View Models</TITLE>
<META content=DM-V-VM name=keywords>
<META 
content="Ok, time to wrap this up :-) Now, we'll finally build what I'm calling a view model for managing a portfolio of stocks (building on the StockModel example from previous posts). A view model is a class that will be used as the DataContext for a data template" 
name=description>
<META content="MSHTML 6.00.2900.3199" name=GENERATOR><LINK 
href="http://blogs.msdn.com/dancre/pingback.aspx" rel=pingback><LINK media=print 
href="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/print.css" 
type=text/css rel=stylesheet><LINK media=screen 
href="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/Common.css" 
type=text/css rel=stylesheet><LINK media=screen 
href="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/Blog.css" 
type=text/css rel=stylesheet><LINK media=print 
href="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/common_print.css" 
type=text/css rel=stylesheet><LINK media=print 
href="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/blog_print.css" 
type=text/css rel=stylesheet><LINK href="/favicon.ico" type=image/ico 
rel="shortcut icon"><LINK title="Dan Crevier's Blog (RSS 2.0)" 
href="http://blogs.msdn.com/dancre/rss.xml" type=application/rss+xml 
rel=alternate><LINK title="Dan Crevier's Blog (Atom 1.0)" 
href="http://blogs.msdn.com/dancre/atom.xml" type=application/atom+xml 
rel=alternate><LINK title="DM-V-VM part 8: View Models Comment RSS (RSS 2.0)" 
href="http://blogs.msdn.com/dancre/commentrss.aspx?PostID=760104" 
type=application/rss+xml rel=alternate>
<META http-equiv=Content-Type content="text/html; charset=UTF-8">
<SCRIPT src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/global.js" 
type=text/javascript></SCRIPT>

<STYLE type=text/css>BODY {
	FONT-SIZE: 84%
}
</STYLE>

<SCRIPT language=JavaScript>var doImage=doImage;var TType=TType;
function mhHover(tbl,idx,cls){var t,d;if(document.getElementById)t=document.getElementById(tbl);else t=document.all(tbl);if(t==null)return;if(t.getElementsByTagName)d=t.getElementsByTagName("TD");else d=t.all.tags("TD");if(d==null)return;if(d.length<=idx)return;d[idx].className=cls;}

</SCRIPT>

<SCRIPT language=javascript 
src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/minmax.js" 
type=text/javascript></SCRIPT>
</HEAD>
<BODY>
<FORM id=aspnetForm name=aspnetForm 
action=/dancre/archive/2006/09/17/dm-v-vm-part-8-view-models.aspx method=post>
<DIV><INPUT id=__VIEWSTATE type=hidden 
value=/wEPDwUKLTMyNjg0MDc1MWRk4kqgif0qb+BsXqBU64DM+rPSfXA= name=__VIEWSTATE> 
</DIV>
<SCRIPT language=javascript 
src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/Telligent_Modal.js" 
type=text/javascript></SCRIPT>

<SCRIPT language=javascript type=text/javascript>
// <![CDATA[
Telligent_Modal.Configure('/utility/loading.htm',['CommonModal'],['CommonModalTitle'],['CommonModalClose'],['CommonModalContent'],['CommonModalFooter'],['CommonModalResize'],['CommonModalMask'],100);
// ]]>
</SCRIPT>

<DIV id=AllContent>
<DIV id=CommonHeader>
<DIV id=msviMasthead>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="100%">
      <TABLE height=22 cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD id=msviRegionIdGraphic bgColor=#ffffff></TD>
          <TD width="100%" bgColor=#3568cc><IMG title="" height=22 alt=* 
            src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/topGradient.jpg" 
            width=250></TD></TR></TBODY></TABLE></TD>
    <TD id=msviGlobalToolbar noWrap align=left bgColor=#3568cc height=22>
      <TABLE cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=gt0 onmouseover="mhHover('msviGlobalToolbar', 0, 'gt1')" 
          onmouseout="mhHover('msviGlobalToolbar', 0, 'gt0')" noWrap><A 
            style="FONT-SIZE: 95%" 
            href="http://www.microsoft.com/">Microsoft.com Home</A></TD>
          <TD class=gtsep>|</TD>
          <TD class=gt0 onmouseover="mhHover('msviGlobalToolbar', 2, 'gt1')" 
          onmouseout="mhHover('msviGlobalToolbar', 2, 'gt0')" noWrap><A 
            style="FONT-SIZE: 95%" 
            href="http://www.microsoft.com/library/toolbar/3.0/sitemap/en-us.mspx">Site 
            Map</A></TD></TR></TBODY></TABLE></TD></TR>
  <TR vAlign=top>
    <TD width="100%">
      <TABLE height=42 cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR vAlign=top>
          <TD id=msviBrandBanner bgColor=#ffffff><A 
            href="http://msdn.microsoft.com/"><IMG title="" height=42 alt=MSDN 
            src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/msdn_masthead_ltr.gif" 
            width=225 border=0></A></TD>
          <TD width="100%" bgColor=#6799ff><IMG title="" height=42 alt=* 
            src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/topGradient2.jpg" 
            width=250></TD></TR></TBODY></TABLE></TD>
    <TD id=msviGlobalSearch bgColor=#6799ff>
      <DIV id=msviNoSearch></DIV></TD></TR></TBODY></TABLE>
<DIV id=msviLocalToolbar>
<TABLE height=19 cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD id=msviHomePageLink noWrap width=177><A 
      href="http://msdn.microsoft.com/">MSDN Home</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 2, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 2, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/developercenters/">Developer 
Centers</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 4, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 4, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/flash">MSDN Flash</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 6, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 6, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/subscriptions/">Subscribers</A></TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 8, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 8, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 10, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 10, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 12, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 12, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 14, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 14, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 16, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 16, 'lt0')" noWrap>&nbsp;</TD>
    <TD width="100%"></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<TABLE dir=ltr cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR vAlign=top>
    <TD id=CommonLeftColumn 
    style="BORDER-RIGHT: #999999 1px solid; OVERFLOW-X: hidden" width=181 
    bgColor=#f1f1f1 height="100%">
      <DIV class=mnpMenuTop id=mnpMenuTop>
      <DIV class=mnpInherit>
      <DIV class=CommonSidebarArea>
      <DIV class=CommonSidebarContent><A 
      href="http://blogs.msdn.com/default.aspx">Blogs Home</A> </DIV></DIV>
      <DIV class=CommonSidebarArea>
      <DIV class=CommonSidebarContent><A 
      id=ctl00___ctl00___ctl00_ctl00_AggWelcome___Login 
      href="http://blogs.msdn.com/login.aspx?ReturnUrl=%2fdancre%2farchive%2f2006%2f09%2f17%2fdm-v-vm-part-8-view-models.aspx">Sign 
      in</A> | <A id=ctl00___ctl00___ctl00_ctl00_AggWelcome___Register 
      href="http://blogs.msdn.com/user/CreateUser.aspx?ReturnUrl=/dancre/archive/2006/09/17/dm-v-vm-part-8-view-models.aspx">Join</A> 
      </DIV></DIV>
      <DIV class=CommonSidebarArea>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A href="http://blogs.msdn.com/search/">Search</A> 
        <LI><A href="http://blogs.msdn.com/MainFeed.aspx?Type=AllBlogs">RSS</A> 
        <LI><A href="http://blogs.msdn.com/Opml.aspx">OPML</A> 
      </LI></UL></DIV></DIV></DIV></DIV>
      <DIV class=mnpAds 
      style="BACKGROUND: #f1f1f1; PADDING-BOTTOM: 20px; WIDTH: 181px; HEIGHT: 100%"></DIV></TD>
    <TD width="100%">
      <TABLE style="TABLE-LAYOUT: fixed" cellSpacing=0 cellPadding=0 
      width="100%" border=0>
        <TBODY>
        <TR>
          <TD width="100%">
            <DIV class=clsDocBody id=pageContainer>
            <DIV class=CommonContentArea>
            <H2 class=CommonTitle><A class=headermaintitle 
            id=ctl00___ctl00___ctl00_ctl00_bcr_bth___BlogTitle 
            href="http://blogs.msdn.com/dancre/default.aspx">Dan Crevier's 
            Blog</A></H2>
            <DIV class=CommonContent>In search of a better name...</DIV>
            <DIV class=CommonContent>
            <STYLE>.DoNotDisplay {
	DISPLAY: none
}
</STYLE>

            <DIV class=BlogPostArea>
            <H4 class=BlogPostHeader>DM-V-VM part 8: View Models </H4>
            <DIV class=BlogPostContent>
            <P>Ok, time to wrap this up :-)</P>
            <P>Now, we'll finally build what I'm calling a view model for 
            managing a portfolio of stocks (building on the StockModel example 
            from previous posts). A view model is a class that will be used as 
            the DataContext for a data template that will be used to provide the 
            UI for the model. Ideally, there is no code behind required for the 
            UI. In practice, some glue code is often required, but in this 
            example, I won't need any.</P>
            <P>First, let's come up with the model. Unlike the data model, there 
            is no base class we'll use here. We just need to provide properties, 
            events, etc. that the UI can bind to. In this example, none of our 
            properties will ever change value, so we don't need to implement 
            INotifyPropertyChanged, but often you will need to. Our UI is going 
            to be pretty simple. We'll provide a list of StockModels for the UI 
            to bind to and provide CommandModels to add and remove stocks. Let's 
            start with the constructor where we set up some fields and some 
            accessors:</P>
            <DIV 
            style="FONT-SIZE: 9pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: consolas">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">public</SPAN> PortfolioViewModel(<SPAN 
            style="COLOR: teal">IStockQuoteProvider</SPAN> quoteProvider)</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; _quoteProvider = quoteProvider;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; _stockModels = <SPAN 
            style="COLOR: blue">new</SPAN> <SPAN 
            style="COLOR: teal">ObservableCollection</SPAN>&lt;<SPAN 
            style="COLOR: teal">StockModel</SPAN>&gt;();</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; _stockModels.Add(<SPAN 
            style="COLOR: blue">new</SPAN> <SPAN 
            style="COLOR: teal">StockModel</SPAN>(<SPAN 
            style="COLOR: maroon">"MSFT"</SPAN>, _quoteProvider));</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; _addCommand = <SPAN 
            style="COLOR: blue">new</SPAN> <SPAN 
            style="COLOR: teal">AddCommand</SPAN>(<SPAN 
            style="COLOR: blue">this</SPAN>);</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; _removeCommand = <SPAN 
            style="COLOR: blue">new</SPAN> <SPAN 
            style="COLOR: teal">RemoveCommand</SPAN>(<SPAN 
            style="COLOR: blue">this</SPAN>);</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: teal">ObservableCollection</SPAN>&lt;<SPAN 
            style="COLOR: teal">StockModel</SPAN>&gt; Stocks</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">get</SPAN> { <SPAN 
            style="COLOR: blue">return</SPAN> _stockModels; }</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: teal">CommandModel</SPAN> AddCommandModel</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">get</SPAN> { <SPAN 
            style="COLOR: blue">return</SPAN> _addCommand; }</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: teal">CommandModel</SPAN> RemoveCommandModel</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">get</SPAN> { <SPAN 
            style="COLOR: blue">return</SPAN> _removeCommand; }</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            <SPAN style="COLOR: blue">private</SPAN> <SPAN 
            style="COLOR: teal">ObservableCollection</SPAN>&lt;<SPAN 
            style="COLOR: teal">StockModel</SPAN>&gt; _stockModels;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">private</SPAN> <SPAN 
            style="COLOR: teal">CommandModel</SPAN> _addCommand;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">private</SPAN> <SPAN 
            style="COLOR: teal">CommandModel</SPAN> _removeCommand;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">private</SPAN> <SPAN 
            style="COLOR: teal">IStockQuoteProvider</SPAN> 
            _quoteProvider;</P></DIV>
            <P>&nbsp;The quote provider lets us pass in any quote provider and 
            makes it really easy to unit test the class.&nbsp;We populate the 
            stock list with MSFT, but a real implementation may read it from 
            some saved settings or something.</P>
            <P>Next, let's define&nbsp;AddCommand. It will take the stock to add 
            as its parameter:</P>
            <DIV 
            style="FONT-SIZE: 9pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: consolas">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">private</SPAN> <SPAN 
            style="COLOR: blue">class</SPAN> <SPAN 
            style="COLOR: teal">AddCommand</SPAN> : <SPAN 
            style="COLOR: teal">CommandModel</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> 
            AddCommand(<SPAN style="COLOR: teal">PortfolioViewModel</SPAN> 
            viewModel)</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _viewModel = viewModel;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: blue">override</SPAN> <SPAN 
            style="COLOR: blue">void</SPAN> OnQueryEnabled(<SPAN 
            style="COLOR: blue">object</SPAN> sender, <SPAN 
            style="COLOR: teal">CanExecuteRoutedEventArgs</SPAN> e)</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">string</SPAN> symbol = e.Parameter <SPAN 
            style="COLOR: blue">as</SPAN> <SPAN 
            style="COLOR: blue">string</SPAN>;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; e.CanExecute = (!<SPAN 
            style="COLOR: blue">string</SPAN>.IsNullOrEmpty(symbol));</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; e.Handled = <SPAN 
            style="COLOR: blue">true</SPAN>;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: blue">override</SPAN> <SPAN 
            style="COLOR: blue">void</SPAN> OnExecute(<SPAN 
            style="COLOR: blue">object</SPAN> sender, <SPAN 
            style="COLOR: teal">ExecutedRoutedEventArgs</SPAN> e)</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">string</SPAN> symbol = e.Parameter <SPAN 
            style="COLOR: blue">as</SPAN> <SPAN 
            style="COLOR: blue">string</SPAN>;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            _viewModel._stockModels.Add(<SPAN style="COLOR: blue">new</SPAN> 
            <SPAN style="COLOR: teal">StockModel</SPAN>(symbol, 
            _viewModel._quoteProvider));&nbsp;&nbsp;&nbsp; </P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">private</SPAN> <SPAN 
            style="COLOR: teal">PortfolioViewModel</SPAN> _viewModel;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            }</P></DIV>
            <P>And,&nbsp;RemoveCommand, which will take a StockModel as its 
            parameter:</P>
            <DIV 
            style="FONT-SIZE: 9pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: consolas">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">private</SPAN> <SPAN 
            style="COLOR: blue">class</SPAN> <SPAN 
            style="COLOR: teal">RemoveCommand</SPAN> : <SPAN 
            style="COLOR: teal">CommandModel</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> 
            RemoveCommand(<SPAN style="COLOR: teal">PortfolioViewModel</SPAN> 
            viewModel)</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _viewModel = viewModel;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: blue">override</SPAN> <SPAN 
            style="COLOR: blue">void</SPAN> OnQueryEnabled(<SPAN 
            style="COLOR: blue">object</SPAN> sender, <SPAN 
            style="COLOR: teal">CanExecuteRoutedEventArgs</SPAN> e)</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; e.CanExecute = e.Parameter 
            <SPAN style="COLOR: blue">is</SPAN> <SPAN 
            style="COLOR: teal">StockModel</SPAN>;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; e.Handled = <SPAN 
            style="COLOR: blue">true</SPAN>;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: blue">override</SPAN> <SPAN 
            style="COLOR: blue">void</SPAN> OnExecute(<SPAN 
            style="COLOR: blue">object</SPAN> sender, <SPAN 
            style="COLOR: teal">ExecutedRoutedEventArgs</SPAN> e)</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            _viewModel._stockModels.Remove(e.Parameter <SPAN 
            style="COLOR: blue">as</SPAN> <SPAN 
            style="COLOR: teal">StockModel</SPAN>);</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">private</SPAN> <SPAN 
            style="COLOR: teal">PortfolioViewModel</SPAN> _viewModel;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            }</P></DIV>
            <P>&nbsp;Now, how do we use this? Well, if we define a data template 
            for the PortfolioViewModel, then we can put a PortfolioViewModel in 
            any ContentControl. We could even have a list of them in an 
            ItemsControl! We can put the data template in App.xaml and it can be 
            used anywhere in the application. Here's an ugly, but functional 
            template on top of the view model:</P>
            <DIV 
            style="FONT-SIZE: 9pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: consolas">
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &lt;</SPAN><SPAN style="COLOR: maroon">DataTemplate</SPAN><SPAN 
            style="COLOR: blue"> </SPAN><SPAN 
            style="COLOR: red">DataType</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{x:Type 
            local:PortfolioViewModel}</SPAN>"<SPAN 
            style="COLOR: blue">&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp; &lt;</SPAN><SPAN style="COLOR: maroon">DockPanel</SPAN><SPAN 
            style="COLOR: blue"> </SPAN><SPAN 
            style="COLOR: red">LastChildFill</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">True</SPAN>"<SPAN 
            style="COLOR: blue">&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &lt;</SPAN><SPAN 
            style="COLOR: maroon">TextBlock</SPAN><SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">DockPanel.Dock</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">Top</SPAN>"<SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">TextAlignment</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">Center</SPAN>"<SPAN 
            style="COLOR: blue">&gt;</SPAN>Portfolio View<SPAN 
            style="COLOR: blue">&lt;/</SPAN><SPAN 
            style="COLOR: maroon">TextBlock</SPAN><SPAN 
            style="COLOR: blue">&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &lt;</SPAN><SPAN 
            style="COLOR: maroon">StackPanel</SPAN><SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">DockPanel.Dock</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">Top</SPAN>"<SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">Orientation</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">Horizontal</SPAN>"<SPAN 
            style="COLOR: blue">&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp; &lt;</SPAN><SPAN 
            style="COLOR: maroon">TextBox</SPAN><SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">Name</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">AddSymbol</SPAN>"<SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">Width</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">100</SPAN>"<SPAN style="COLOR: blue"> 
            /&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp; &lt;</SPAN><SPAN 
            style="COLOR: maroon">Button</SPAN><SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">Command</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding 
            AddCommandModel.Command}</SPAN>"</P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 
            </SPAN><SPAN style="COLOR: red">CommandParameter</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding 
            Path=Text,ElementName=AddSymbol}</SPAN>"</P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 
            </SPAN><SPAN 
            style="COLOR: red">local:CreateCommandBinding.Command</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding 
            AddCommandModel}</SPAN>"</P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 
            &gt;</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; Add</P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/</SPAN><SPAN 
            style="COLOR: maroon">Button</SPAN><SPAN 
            style="COLOR: blue">&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp; &lt;</SPAN><SPAN 
            style="COLOR: maroon">Button</SPAN><SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">Margin</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">50,0,0,0</SPAN>"</P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 
            </SPAN><SPAN style="COLOR: red">Command</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding 
            RemoveCommandModel.Command}</SPAN>"</P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 
            </SPAN><SPAN style="COLOR: red">CommandParameter</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding 
            Path=SelectedItem,ElementName=StockList}</SPAN>"</P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 
            </SPAN><SPAN 
            style="COLOR: red">local:CreateCommandBinding.Command</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding 
            RemoveCommandModel}</SPAN>"</P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 
            &gt;</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; Remove</P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp; &lt;/</SPAN><SPAN 
            style="COLOR: maroon">Button</SPAN><SPAN 
            style="COLOR: blue">&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &lt;/</SPAN><SPAN 
            style="COLOR: maroon">StackPanel</SPAN><SPAN 
            style="COLOR: blue">&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &lt;</SPAN><SPAN 
            style="COLOR: maroon">ListBox</SPAN><SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">Name</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">StockList</SPAN>"<SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">ItemsSource</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding 
            Stocks}</SPAN>"<SPAN style="COLOR: blue"> /&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp; &lt;/</SPAN><SPAN style="COLOR: maroon">DockPanel</SPAN><SPAN 
            style="COLOR: blue">&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &lt;/</SPAN><SPAN style="COLOR: maroon">DataTemplate</SPAN><SPAN 
            style="COLOR: blue">&gt;</SPAN></P></DIV>
            <P>&nbsp;The add button functionality is much like the way we dealt 
            with commands in part 7. The remove button's command parameter is 
            bound to the selected item in the list box - pretty cool, huh? It 
            will be disabled if nothing is selected and use the selected 
            StockModel if one is selected. The ListBox is bound to the list of 
            StockModels. To make each item display correctly, we need a data 
            template for StockModels. Here's a simple implementation:</P>
            <DIV 
            style="FONT-SIZE: 9pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: consolas">
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &lt;</SPAN><SPAN style="COLOR: maroon">DataTemplate</SPAN><SPAN 
            style="COLOR: blue"> </SPAN><SPAN 
            style="COLOR: red">DataType</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{x:Type 
            local:StockModel}</SPAN>"<SPAN style="COLOR: blue">&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp; &lt;</SPAN><SPAN style="COLOR: maroon">StackPanel</SPAN><SPAN 
            style="COLOR: blue"> </SPAN><SPAN 
            style="COLOR: red">Orientation</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">Horizontal</SPAN>"<SPAN style="COLOR: blue"> 
            </SPAN><SPAN 
            style="COLOR: red">local:ActivateModel.Model</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">{Binding}</SPAN>"<SPAN 
            style="COLOR: blue">&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &lt;</SPAN><SPAN 
            style="COLOR: maroon">TextBlock</SPAN><SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">Text</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding 
            Symbol}</SPAN>"<SPAN style="COLOR: blue"> </SPAN><SPAN 
            style="COLOR: red">Width</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">100</SPAN>"<SPAN 
            style="COLOR: blue">/&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &lt;</SPAN><SPAN 
            style="COLOR: maroon">TextBlock</SPAN><SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">Text</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN style="COLOR: blue">{Binding 
            Quote}</SPAN>"<SPAN style="COLOR: blue"> /&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp; &lt;/</SPAN><SPAN 
            style="COLOR: maroon">StackPanel</SPAN><SPAN 
            style="COLOR: blue">&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &lt;/</SPAN><SPAN style="COLOR: maroon">DataTemplate</SPAN><SPAN 
            style="COLOR: blue">&gt;</SPAN></P></DIV>
            <P>Now, we need to put a Portfolio view into our window. We can do 
            so by using the following XAML:</P>
            <DIV 
            style="FONT-SIZE: 9pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: consolas">
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&lt;</SPAN><SPAN 
            style="COLOR: maroon">Window</SPAN><SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">x:Class</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">ModelSample.Window1</SPAN>"</P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            </SPAN><SPAN style="COLOR: red">xmlns</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">http://schemas.microsoft.com/winfx/2006/xaml/presentation</SPAN>"</P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            </SPAN><SPAN style="COLOR: red">xmlns:x</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">http://schemas.microsoft.com/winfx/2006/xaml</SPAN>"</P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            </SPAN><SPAN style="COLOR: red">Title</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">ModelSample</SPAN>"<SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">Height</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">300</SPAN>"<SPAN style="COLOR: blue"> 
            </SPAN><SPAN style="COLOR: red">Width</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">300</SPAN>"</P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &lt;</SPAN><SPAN style="COLOR: maroon">Grid</SPAN><SPAN 
            style="COLOR: blue">&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &nbsp; &lt;</SPAN><SPAN 
            style="COLOR: maroon">ContentControl</SPAN><SPAN 
            style="COLOR: blue"> </SPAN><SPAN 
            style="COLOR: red">x:Name</SPAN><SPAN 
            style="COLOR: blue">=</SPAN>"<SPAN 
            style="COLOR: blue">_content</SPAN>"<SPAN style="COLOR: blue"> 
            /&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&nbsp;&nbsp;&nbsp; 
            &lt;/</SPAN><SPAN style="COLOR: maroon">Grid</SPAN><SPAN 
            style="COLOR: blue">&gt;</SPAN></P>
            <P style="MARGIN: 0px"><SPAN style="COLOR: blue">&lt;/</SPAN><SPAN 
            style="COLOR: maroon">Window</SPAN><SPAN 
            style="COLOR: blue">&gt;</SPAN></P></DIV>
            <P>and, the following code behind:</P>
            <DIV 
            style="FONT-SIZE: 9pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: consolas">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: blue">partial</SPAN> <SPAN 
            style="COLOR: blue">class</SPAN> <SPAN 
            style="COLOR: teal">Window1</SPAN> : <SPAN 
            style="COLOR: teal">Window</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">public</SPAN> Window1()</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; InitializeComponent();</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; _content.Content = <SPAN 
            style="COLOR: blue">new</SPAN> <SPAN 
            style="COLOR: teal">PortfolioViewModel</SPAN>(<SPAN 
            style="COLOR: blue">new</SPAN> <SPAN 
            style="COLOR: teal">MockQuoteProvider</SPAN>());</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px" mce_keep="true">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; }</P></DIV>
            <P>The end result looks something like:</P>
            <P><A 
            href="http://www.boingo.org/images/DMMVMpart8ViewModels_111E3/screenshot1.png" 
            mce_href="http://www.boingo.org/images/DMMVMpart8ViewModels_111E3/screenshot1.png" 
            atomicselection="true"><IMG 
            style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
            height=240 
            src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/screenshot.png" 
            width=240 border=0 
            mce_src="http://www.boingo.org/images/DMMVMpart8ViewModels_111E3/screenshot.png"></A> 
            </P>
            <P>Ok, it's not very pretty, but the visuals are all in Xaml and a 
            designer can use Expression or the raw HTML to improve the look. 
            Meanwhile, the behavior is all in PortfolioViewModel, which is 
            easily unit testable because it doesn't depend on any UI.</P>
            <P>This example is slightly idealized. I was able to use the 
            attached property tricks to completely eliminate the code behind, 
            but that's not always possible. Sometimes you are left with some 
            glue code that may or may not be easily unit testable. And, I've 
            found in practice that deisgners often need behavior tweaks to 
            implement the UI they want. For example, they may need events to 
            trigger animations. But, I hope I've given the general idea in this 
            series of posts.</P>
            <P>I'm including a sample project with demonstrates this all. 
            Unfortunately, I never got around to updating the unit tests after 
            adding the activation stuff to the DataModel class, so there are no 
            unit tests. If there is enough interest, I'll add unit tests. I hope 
            it's easy to see how they would be written.</P></DIV>
            <DIV class=BlogPostFooter>Published Sunday, September 17, 2006 8:01 
            PM by <A 
            id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___AuthorLink 
            href="http://blogs.msdn.com/user/Profile.aspx?UserID=3401">dancre</A> 

            <DIV><SPAN 
            id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___InlineTagEditorPanel>Filed 
            under: <A 
            href="http://blogs.msdn.com/dancre/archive/tags/DM-V-VM/default.aspx" 
            rel=tag>DM-V-VM</A></SPAN><INPUT 
            id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___InlineTagEditorPanel_State 
            type=hidden value=nochange 
            name=ctl00$_$ctl00$_$ctl00$ctl00$bcr$ctl00$_$Entry$_$InlineTagEditorPanel></DIV><BR><B>Attachment(s): 
            </B><A 
            id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___Attachment___DownLoadLink 
            href="http://blogs.msdn.com/dancre/attachment/760104.ashx">ModelSample.zip</A> 
            </DIV></DIV>
            <DIV id=comments>
            <H3>Comments </H3>
            <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
              <TBODY>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl01_NameLink 
                  title=Michael>Michael</A> said:</H4>
                  <DIV class=CommentText>Great posts Dan! Thanks a lot. I've 
                  been waiting for the wrap up since Friday and enjoed it 
                  greatly. <BR><BR>It would be interesting to see how one can 
                  retrofit your ideas into 2.0 based apps. Like CAB/SCSF based. 
                  Any comments on that?</DIV>
                  <DIV class=CommentFooter>September 18, 2006 2:37 AM 
              </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="CommentOwner CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="CommentOwner  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl02_NameLink 
                  title=dancre href="http://blogs.msdn.com/dancre">dancre</A> 
                  said:</H4>
                  <DIV class=CommentText>Unfortunately, I don't know much about 
                  CAB/SCSF. Maybe someone else can comment.</DIV>
                  <DIV class=CommentFooter>September 18, 2006 11:36 AM 
              </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl03_NameLink 
                  title=Paul>Paul</A> said:</H4>
                  <DIV class=CommentText>Dan, <BR><BR>Thanks a lot for DM-M-VM 
                  XXX series! </DIV>
                  <DIV class=CommentFooter>September 19, 2006 1:46 AM 
              </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl04_NameLink 
                  title=AleXFlint>AleXFlint</A> said:</H4>
                  <DIV class=CommentText>Thank you Dan for this great series! I 
                  like it very much! I actually use some ideas of your concepts 
                  for 3D. What im currently looking for is activating / 
                  deactivating for DataModels, which are databined to 3D models. 
                  It's a little bit complicated, because none of 3D classes 
                  expose any events like "Loaded" or "Unloaded" like 
                  FrameworkElements do. I saw you also use 3D in Max. What were 
                  your tactics with 3D &amp; DM-M-VM pattern? </DIV>
                  <DIV class=CommentFooter>October 2, 2006 5:24 AM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="CommentOwner CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="CommentOwner  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl05_NameLink 
                  title=dancre href="http://blogs.msdn.com/dancre">dancre</A> 
                  said:</H4>
                  <DIV class=CommentText>
                  <P>In Max, the models were displayed in VisualBrushes. We had 
                  to set the visual brushes as logical children of the 2D view 
                  that hosts the 3D view and when we did that, we got loaded and 
                  unloaded events. If you aren't using visual brushes, you could 
                  do something like add an interface that your models implement 
                  and have the 2D view that hosts the 3D look for models with 
                  that interface in its loaded/unloaded handlers.</P></DIV>
                  <DIV class=CommentFooter>October 2, 2006 4:08 PM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl06_NameLink 
                  title=TrackBack 
                  href="http://blogs.msdn.com/dancre/archive/2006/10/11/datamodel-view-viewmodel-pattern-series.aspx" 
                  rel=nofollow>Dan Crevier's Blog</A> said:</H4>
                  <DIV class=CommentText>
                  <P>I thought I should add a post with the full list of posts 
                  in the D-V-VM pattern. They are: 
                  DataModel-View-ViewModel</P></DIV>
                  <DIV class=CommentFooter>October 11, 2006 10:00 PM 
              </DIV></TD></TR></TBODY></TABLE></DIV><EM>New Comments to this post 
            are disabled</EM> </DIV></DIV></DIV></TD></TR></TBODY></TABLE></TD>
    <TD id=CommonRightColumn style="FONT-SIZE: 100%">
      <DIV class=CommonSidebar>
      <DIV id=BlogLinksSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>This Blog</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___home 
        href="http://blogs.msdn.com/dancre/default.aspx">Home</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___Contactlink1 
        href="http://blogs.msdn.com/dancre/contact.aspx">Email</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___LinkListLink1 
        href="http://blogs.msdn.com/dancre/linklist.aspx">Links</A> 
      </LI></UL></DIV></DIV></DIV>
      <DIV id=TasksSideBar></DIV>
      <DIV id=SubscriptionsSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Syndication</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___bs___rss 
        href="http://blogs.msdn.com/dancre/rss.xml">RSS 2.0</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___bs___atom 
        href="http://blogs.msdn.com/dancre/atom.xml">Atom 1.0</A> 
      </LI></UL></DIV></DIV></DIV>
      <DIV id=RecentPostsSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Recent Posts</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl00_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/10/11/more-skydrive-goodness.aspx">More 
        SkyDrive goodness</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl01_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/08/22/frustrating-error-using-remote-desktop.aspx">Frustrating 
        error using Remote Desktop</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl02_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/08/21/tafiti.aspx">Tafiti</A> 

        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl03_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/08/09/windows-live-skydrive-spaces-integration.aspx">Windows 
        Live SkyDrive/Spaces integration</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl04_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/08/09/windows-live-folders-is-now-windows-live-skydrive.aspx">Windows 
        Live Folders is now Windows Live SkyDrive!</A> 
</LI></UL></DIV></DIV></DIV>
      <DIV id=TagSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Tags</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarTagCloud>
        <LI class=CommonTag3><A 
        href="http://blogs.msdn.com/dancre/archive/tags/ASP.NET/default.aspx" 
        rel=tag>ASP.NET</A> 
        <LI class=CommonTag6><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Debugging/default.aspx" 
        rel=tag>Debugging</A> 
        <LI class=CommonTag1><A 
        href="http://blogs.msdn.com/dancre/archive/tags/DM-V-VM/default.aspx" 
        rel=tag>DM-V-VM</A> 
        <LI class=CommonTag1><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Max/default.aspx" 
        rel=tag>Max</A> 
        <LI class=CommonTag6><A 
        href="http://blogs.msdn.com/dancre/archive/tags/PageModel/default.aspx" 
        rel=tag>PageModel</A> 
        <LI class=CommonTag4><A 
        href="http://blogs.msdn.com/dancre/archive/tags/PanelLayoutAnimator/default.aspx" 
        rel=tag>PanelLayoutAnimator</A> 
        <LI class=CommonTag2><A 
        href="http://blogs.msdn.com/dancre/archive/tags/pdc2005/default.aspx" 
        rel=tag>pdc2005</A> 
        <LI class=CommonTag4><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Tips+_2600_amp_3B00_+Tricks/default.aspx" 
        rel=tag>Tips &amp; Tricks</A> 
        <LI class=CommonTag2><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Utilities/default.aspx" 
        rel=tag>Utilities</A> 
        <LI class=CommonTag3><A 
        href="http://blogs.msdn.com/dancre/archive/tags/VirtualizingTilePanel/default.aspx" 
        rel=tag>VirtualizingTilePanel</A> 
        <LI class=CommonTag6><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Vista/default.aspx" 
        rel=tag>Vista</A> 
        <LI class=CommonTag6><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Web+Perf/default.aspx" 
        rel=tag>Web Perf</A> </LI></UL></DIV></DIV></DIV>
      <DIV id=NewsSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>News</H4>
      <DIV class=CommonSidebarContent>The posts on this weblog are provided "AS 
      IS" with no warranties, and confer no rights. The opinions expressed 
      herein are my own personal opinions and do not represent my employer's 
      view in any way. </DIV></DIV></DIV>
      <DIV id=ArchiveSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Archives</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/10.aspx">October 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/08.aspx">August 
        2007 (4)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/07.aspx">July 
        2007 (4)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/06.aspx">June 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/03.aspx">March 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/02.aspx">February 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/01.aspx">January 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/12.aspx">December 
        2006 (6)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/11.aspx">November 
        2006 (2)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/10.aspx">October 
        2006 (3)</A> 
        <LI><A 
        href="http://blogs.msdn.com/dancre/archive/2006/09.aspx">September 2006 
        (8)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/08.aspx">August 
        2006 (7)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/07.aspx">July 
        2006 (6)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/03.aspx">March 
        2006 (6)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/02.aspx">February 
        2006 (11)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/01.aspx">January 
        2006 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/12.aspx">December 
        2005 (2)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/11.aspx">November 
        2005 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/10.aspx">October 
        2005 (3)</A> 
        <LI><A 
        href="http://blogs.msdn.com/dancre/archive/2005/09.aspx">September 2005 
        (7)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/06.aspx">June 
        2005 (6)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/05.aspx">May 2005 
        (11)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/04.aspx">April 
        2005 (3)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/02.aspx">February 
        2005 (3)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/01.aspx">January 
        2005 (3)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/12.aspx">December 
        2004 (15)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/11.aspx">November 
        2004 (4)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/10.aspx">October 
        2004 (10)</A> 
        <LI><A 
        href="http://blogs.msdn.com/dancre/archive/2004/09.aspx">September 2004 
        (8)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/08.aspx">August 
        2004 (8)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/07.aspx">July 
        2004 (5)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/06.aspx">June 
        2004 (5)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/05.aspx">May 2004 
        (13)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/04.aspx">April 
        2004 (15)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/03.aspx">March 
        2004 (18)</A> </LI></UL></DIV></DIV></DIV></DIV></TD></TR></TBODY></TABLE><!--NOINDEX_START-->
<DIV id=CommonFooter><BR style="OVERFLOW: hidden; LINE-HEIGHT: 1px" clear=all>
<TABLE id=msviFooter cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR vAlign=bottom>
    <TD id=msviFooter2>
      <DIV id=msviLocalFooter><NOBR><A 
      href="http://go.microsoft.com/?linkid=317027">Manage Your Profile</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/isapi/gomscom.asp?target=/legal/" 
      target=_parent>Legal</A> |</NOBR><WBR><NOBR><A 
      href="http://register.microsoft.com/contactus30/contactus.asp?domain=msdn" 
      target=_parent>Contact Us</A> |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/flash/" target=_parent>MSDN Flash 
      Newsletter</A></NOBR></DIV>
      <DIV id=msviGlobalFooter><SPAN>©2005 Microsoft Corporation. All rights 
      reserved.&nbsp;</SPAN><NOBR><A 
      href="http://www.microsoft.com/info/cpyright.mspx">Terms of Use</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/library/toolbar/3.0/trademarks/en-us.mspx">Trademarks</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://www.microsoft.com/info/privacy.mspx">Privacy 
      Statement</A></NOBR></DIV></TD>
    <TD width=105 bgColor=#669aff><IMG title="" height=29 alt=Microsoft 
      src="Dan Crevier's Blog  DM-V-VM part 8 View Models_files/bottomMSFTLogo.jpg" 
      width=105 border=0></TD></TR></TBODY></TABLE></DIV></DIV><!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://blogs.msdn.com/dancre/archive/2006/09/17/dm-v-vm-part-8-view-models.aspx"
dc:identifier="http://blogs.msdn.com/dancre/archive/2006/09/17/dm-v-vm-part-8-view-models.aspx"
dc:title="DM-V-VM part 8: View Models"
trackback:ping="http://blogs.msdn.com/dancre/trackback.aspx?PostID=760104" />
</rdf:RDF>
--></FORM></BODY></HTML>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0059)http://blogs.msdn.com/dancre/archive/2006/07/23/676300.aspx -->
<HTML><HEAD><TITLE>Dan Crevier's Blog : DataModel-View-ViewModel pattern: 2</TITLE>
<META content=DM-V-VM name=keywords>
<META 
content="In part 1 , I gave an overview of a pattern we use in the UI development of Max . In this post, I plan to talk about DataModels. In part 1, I wrote: DataModel DataModel is responsible for exposing data in a way that is easily consumable by WPF. All of" 
name=description>
<META content="MSHTML 6.00.2900.3199" name=GENERATOR><LINK 
href="http://blogs.msdn.com/dancre/pingback.aspx" rel=pingback><LINK media=print 
href="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/print.css" 
type=text/css rel=stylesheet><LINK media=screen 
href="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/Common.css" 
type=text/css rel=stylesheet><LINK media=screen 
href="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/Blog.css" 
type=text/css rel=stylesheet><LINK media=print 
href="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/common_print.css" 
type=text/css rel=stylesheet><LINK media=print 
href="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/blog_print.css" 
type=text/css rel=stylesheet><LINK href="/favicon.ico" type=image/ico 
rel="shortcut icon"><LINK title="Dan Crevier's Blog (RSS 2.0)" 
href="http://blogs.msdn.com/dancre/rss.xml" type=application/rss+xml 
rel=alternate><LINK title="Dan Crevier's Blog (Atom 1.0)" 
href="http://blogs.msdn.com/dancre/atom.xml" type=application/atom+xml 
rel=alternate><LINK 
title="DataModel-View-ViewModel pattern: 2 Comment RSS (RSS 2.0)" 
href="http://blogs.msdn.com/dancre/commentrss.aspx?PostID=676300" 
type=application/rss+xml rel=alternate>
<META http-equiv=Content-Type content="text/html; charset=UTF-8">
<SCRIPT 
src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/global.js" 
type=text/javascript></SCRIPT>

<STYLE type=text/css>BODY {
	FONT-SIZE: 84%
}
</STYLE>

<SCRIPT language=JavaScript>var doImage=doImage;var TType=TType;
function mhHover(tbl,idx,cls){var t,d;if(document.getElementById)t=document.getElementById(tbl);else t=document.all(tbl);if(t==null)return;if(t.getElementsByTagName)d=t.getElementsByTagName("TD");else d=t.all.tags("TD");if(d==null)return;if(d.length<=idx)return;d[idx].className=cls;}

</SCRIPT>

<SCRIPT language=javascript 
src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/minmax.js" 
type=text/javascript></SCRIPT>
</HEAD>
<BODY>
<FORM id=aspnetForm name=aspnetForm 
action=/dancre/archive/2006/07/23/676300.aspx method=post>
<DIV><INPUT id=__VIEWSTATE type=hidden 
value=/wEPDwUKLTMyNjg0MDc1MWRk4kqgif0qb+BsXqBU64DM+rPSfXA= name=__VIEWSTATE> 
</DIV>
<SCRIPT language=javascript 
src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/Telligent_Modal.js" 
type=text/javascript></SCRIPT>

<SCRIPT language=javascript type=text/javascript>
// <![CDATA[
Telligent_Modal.Configure('/utility/loading.htm',['CommonModal'],['CommonModalTitle'],['CommonModalClose'],['CommonModalContent'],['CommonModalFooter'],['CommonModalResize'],['CommonModalMask'],100);
// ]]>
</SCRIPT>

<DIV id=AllContent>
<DIV id=CommonHeader>
<DIV id=msviMasthead>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="100%">
      <TABLE height=22 cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD id=msviRegionIdGraphic bgColor=#ffffff></TD>
          <TD width="100%" bgColor=#3568cc><IMG title="" height=22 alt=* 
            src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/topGradient.jpg" 
            width=250></TD></TR></TBODY></TABLE></TD>
    <TD id=msviGlobalToolbar noWrap align=left bgColor=#3568cc height=22>
      <TABLE cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=gt0 onmouseover="mhHover('msviGlobalToolbar', 0, 'gt1')" 
          onmouseout="mhHover('msviGlobalToolbar', 0, 'gt0')" noWrap><A 
            style="FONT-SIZE: 95%" 
            href="http://www.microsoft.com/">Microsoft.com Home</A></TD>
          <TD class=gtsep>|</TD>
          <TD class=gt0 onmouseover="mhHover('msviGlobalToolbar', 2, 'gt1')" 
          onmouseout="mhHover('msviGlobalToolbar', 2, 'gt0')" noWrap><A 
            style="FONT-SIZE: 95%" 
            href="http://www.microsoft.com/library/toolbar/3.0/sitemap/en-us.mspx">Site 
            Map</A></TD></TR></TBODY></TABLE></TD></TR>
  <TR vAlign=top>
    <TD width="100%">
      <TABLE height=42 cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR vAlign=top>
          <TD id=msviBrandBanner bgColor=#ffffff><A 
            href="http://msdn.microsoft.com/"><IMG title="" height=42 alt=MSDN 
            src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/msdn_masthead_ltr.gif" 
            width=225 border=0></A></TD>
          <TD width="100%" bgColor=#6799ff><IMG title="" height=42 alt=* 
            src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/topGradient2.jpg" 
            width=250></TD></TR></TBODY></TABLE></TD>
    <TD id=msviGlobalSearch bgColor=#6799ff>
      <DIV id=msviNoSearch></DIV></TD></TR></TBODY></TABLE>
<DIV id=msviLocalToolbar>
<TABLE height=19 cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD id=msviHomePageLink noWrap width=177><A 
      href="http://msdn.microsoft.com/">MSDN Home</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 2, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 2, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/developercenters/">Developer 
Centers</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 4, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 4, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/flash">MSDN Flash</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 6, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 6, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/subscriptions/">Subscribers</A></TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 8, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 8, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 10, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 10, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 12, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 12, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 14, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 14, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 16, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 16, 'lt0')" noWrap>&nbsp;</TD>
    <TD width="100%"></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<TABLE dir=ltr cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR vAlign=top>
    <TD id=CommonLeftColumn 
    style="BORDER-RIGHT: #999999 1px solid; OVERFLOW-X: hidden" width=181 
    bgColor=#f1f1f1 height="100%">
      <DIV class=mnpMenuTop id=mnpMenuTop>
      <DIV class=mnpInherit>
      <DIV class=CommonSidebarArea>
      <DIV class=CommonSidebarContent><A 
      href="http://blogs.msdn.com/default.aspx">Blogs Home</A> </DIV></DIV>
      <DIV class=CommonSidebarArea>
      <DIV class=CommonSidebarContent><A 
      id=ctl00___ctl00___ctl00_ctl00_AggWelcome___Login 
      href="http://blogs.msdn.com/login.aspx?ReturnUrl=%2fdancre%2farchive%2f2006%2f07%2f23%2f676300.aspx">Sign 
      in</A> | <A id=ctl00___ctl00___ctl00_ctl00_AggWelcome___Register 
      href="http://blogs.msdn.com/user/CreateUser.aspx?ReturnUrl=/dancre/archive/2006/07/23/676300.aspx">Join</A> 
      </DIV></DIV>
      <DIV class=CommonSidebarArea>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A href="http://blogs.msdn.com/search/">Search</A> 
        <LI><A href="http://blogs.msdn.com/MainFeed.aspx?Type=AllBlogs">RSS</A> 
        <LI><A href="http://blogs.msdn.com/Opml.aspx">OPML</A> 
      </LI></UL></DIV></DIV></DIV></DIV>
      <DIV class=mnpAds 
      style="BACKGROUND: #f1f1f1; PADDING-BOTTOM: 20px; WIDTH: 181px; HEIGHT: 100%"></DIV></TD>
    <TD width="100%">
      <TABLE style="TABLE-LAYOUT: fixed" cellSpacing=0 cellPadding=0 
      width="100%" border=0>
        <TBODY>
        <TR>
          <TD width="100%">
            <DIV class=clsDocBody id=pageContainer>
            <DIV class=CommonContentArea>
            <H2 class=CommonTitle><A class=headermaintitle 
            id=ctl00___ctl00___ctl00_ctl00_bcr_bth___BlogTitle 
            href="http://blogs.msdn.com/dancre/default.aspx">Dan Crevier's 
            Blog</A></H2>
            <DIV class=CommonContent>In search of a better name...</DIV>
            <DIV class=CommonContent>
            <STYLE>.DoNotDisplay {
	DISPLAY: none
}
</STYLE>

            <DIV class=BlogPostArea>
            <H4 class=BlogPostHeader>DataModel-View-ViewModel pattern: 2 </H4>
            <DIV class=BlogPostContent>
            <P>In <A 
            href="http://blogs.msdn.com/dancre/archive/2006/07/23/676272.aspx">part 
            1</A>, I gave an overview of a pattern we use in the UI development 
            of <A href="http://www.microsoft.com/max/">Max</A>. In this post, I 
            plan to talk about DataModels. In part&nbsp;1, I wrote:</P>
            <BLOCKQUOTE>
              <P><STRONG>DataModel</STRONG></P>
              <P>DataModel is responsible for exposing data in a way that is 
              easily consumable by WPF. All of its public APIs must be called on 
              the UI thread only. It must implement INotifyPropertyChanged 
              and/or INotifyCollectionChanged as appropriate. When data is 
              expensive to fetch, it abstracts away the expensive operations, 
              never blocking the UI thread (that is evil!). It also keeps the 
              data "live".&nbsp;These sorts of classes are fairly 
              straightforward to unit test.</P></BLOCKQUOTE>
            <P>I want to talk a bit about the threading model. Making all public 
            APIs single threaded on a DataModel may seem like overkill. It's 
            certainly possible to make some methods thread safe. And, you might 
            know that WPF data binding will actually handle property changed 
            events from other threads. But, in my experience, making the APIs of 
            DataModel single thread significantly simplifies the models and 
            eliminates many possible bugs. The rules become very simple. Of 
            course, DataModels usually need to do operations on background 
            threads, but they can use the Dispatcher to dispatch the results 
            back to the UI thread.</P>
            <P>Let's go through a possible DataModel base class. I will use it 
            in the sample moving forward.</P>
            <P>First, the defition and constructor:</P>
            <DIV 
            style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: Courier New">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: blue">class</SPAN> <SPAN 
            style="COLOR: teal">DataModel</SPAN> : <SPAN 
            style="COLOR: teal">INotifyPropertyChanged</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">public</SPAN> DataModel()</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; _dispatcher = <SPAN 
            style="COLOR: teal">Dispatcher</SPAN>.CurrentDispatcher;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            }</P></DIV>
            <P>We grab the current Dispatcher in the constructor. We now have it 
            available for any background operations that need to be dispatch 
            results to the UI thread.</P>
            <P>Now, here's the definition of the possible states of the 
            model:</P>
            <DIV 
            style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: Courier New">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: blue">enum</SPAN> <SPAN 
            style="COLOR: teal">ModelState</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; Fectching,&nbsp; <SPAN style="COLOR: green">// 
            The model is fetching data</SPAN></P>
            <P 
            style="MARGIN: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            Invalid,&nbsp;&nbsp;&nbsp;&nbsp;<SPAN style="COLOR: green">// The 
            model is in an invalid state</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; Active&nbsp;&nbsp;&nbsp; &nbsp; <SPAN 
            style="COLOR: green">// The model has fetched its data</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            }</P></DIV>
            <P>I think these are pretty self explanatory. Basically, the model 
            will be in a fetching state if it's fetching data asynchronously. 
            Otherwise, it will be in the invalid or activate state. The state is 
            made available through the following property:</P>
            <DIV 
            style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: Courier New">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: teal">ModelState</SPAN> State</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">get</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; VerifyCalledOnUIThread();</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">return</SPAN> _state;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">set</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; VerifyCalledOnUIThread();</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">if</SPAN> (<SPAN 
            style="COLOR: blue">value</SPAN> != _state)</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _state = 
            <SPAN style="COLOR: blue">value</SPAN>;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            SendPropertyChanged(<SPAN style="COLOR: maroon">"State"</SPAN>);</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px"></P></DIV>
            <P>This is the basic pattern we'll use for most model properties. 
            When getting the value, we verify that we're on the UI thread and 
            just return the cached value. When setting the property, we also 
            verify that we're on the UI thread. And, if the value changed, we 
            send the event that it changed. Let me fill in a couple of the 
            utility functions now. The first is VerifyCalledOnUIThread():</P>
            <DIV 
            style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: Courier New">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; [<SPAN 
            style="COLOR: teal">Conditional</SPAN>(<SPAN 
            style="COLOR: maroon">"Debug"</SPAN>)]</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">protected</SPAN> <SPAN 
            style="COLOR: blue">void</SPAN> VerifyCalledOnUIThread()</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: teal">Debug</SPAN>.Assert(<SPAN 
            style="COLOR: teal">Dispatcher</SPAN>.CurrentDispatcher == <SPAN 
            style="COLOR: blue">this</SPAN>.Dispatcher,</P>
            <P 
            style="MARGIN: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            <SPAN style="COLOR: maroon">"Call must be made on UI 
            thread."</SPAN>);</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            }</P></DIV>
            <P>Basically, we make sure that we're on the right thread by 
            checking the current dispatcher. The Conditional attribute makes it 
            so this code isn't executed in retail bits. Sprinkling asserts in 
            the code like this makes it easy to catch these violations early. 
            Otherwise, you might end up tracing down hard to reproduce race 
            conditions.</P>
            <P>Next, here's our NotifyPropertyChanged event. We define our own 
            add/remove handlers so we can verify that things are called on the 
            UI thread. If handlers were added/removed from another thread, we'd 
            run into threading issues.</P>
            <DIV 
            style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: Courier New">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: blue">event</SPAN> <SPAN 
            style="COLOR: teal">PropertyChangedEventHandler</SPAN> 
            PropertyChanged</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">add</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; VerifyCalledOnUIThread();</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _propertyChangedEvent += <SPAN 
            style="COLOR: blue">value</SPAN>;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">remove</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; VerifyCalledOnUIThread();</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _propertyChangedEvent -= <SPAN 
            style="COLOR: blue">value</SPAN>;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            }</P></DIV>
            <P>And, SendPropertyChanged is a helper function that notifies 
            listeners that the named property changed:</P>
            <DIV 
            style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: Courier New">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">protected</SPAN> <SPAN 
            style="COLOR: blue">void</SPAN> SendPropertyChanged(<SPAN 
            style="COLOR: blue">string</SPAN> propertyName)</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; VerifyCalledOnUIThread();</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">if</SPAN> 
            (_propertyChangedEvent != <SPAN style="COLOR: blue">null</SPAN>)</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _propertyChangedEvent(<SPAN 
            style="COLOR: blue">this</SPAN>, <SPAN 
            style="COLOR: blue">new</SPAN> <SPAN 
            style="COLOR: teal">PropertyChangedEventArgs</SPAN>(propertyName));</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            }</P></DIV>
            <P>That just leaves the fields:</P>
            <DIV 
            style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: Courier New">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">private</SPAN> <SPAN 
            style="COLOR: teal">ModelState</SPAN> _state;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">private</SPAN> <SPAN 
            style="COLOR: teal">Dispatcher</SPAN> _dispatcher;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">private</SPAN> <SPAN 
            style="COLOR: teal">PropertyChangedEventHandler</SPAN> 
            _propertyChangedEvent;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; }</P></DIV>
            <P>I'll be using this base class in my sample moving forward. If 
            anyone's interested, I could make the source code available, but 
            it's all here and I plan to make the full version with comments 
            available when I get further along in the sample.</P>
            <P>This class is missing one major feature that I plan to talk more 
            about later. But, I think I need a disclaimer here in case anyone 
            starts any of their own code based on this. As mentioned above, one 
            of the roles of a DataModel is to keep its data "live". This can 
            lead to memory leaks. To keep data live, the model will need to 
            register for change notifications from some other source, or maybe 
            set up a timer. This will keep the DataModel object alive. If 
            there's a DataTemplate pointing to the DataModel with data binding 
            set up, it will have registered for property changed notifications 
            from the DataModel, so the DataModel will be keeping the UI in the 
            DataTemplate alive, even after it's been unloaded from the UI. The 
            solution we use is to have a reference counted activate/deactivate 
            pattern in our DataModel classes where a model is only live while 
            active. We activate the model when the UI pointing to it is Loaded, 
            and deactivate when Unloaded. I'll blog about this more in the 
            future...</P></DIV>
            <DIV class=BlogPostFooter>Published Sunday, July 23, 2006 8:51 PM by 
            <A id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___AuthorLink 
            href="http://blogs.msdn.com/user/Profile.aspx?UserID=3401">dancre</A> 

            <DIV><SPAN 
            id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___InlineTagEditorPanel>Filed 
            under: <A 
            href="http://blogs.msdn.com/dancre/archive/tags/DM-V-VM/default.aspx" 
            rel=tag>DM-V-VM</A></SPAN><INPUT 
            id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___InlineTagEditorPanel_State 
            type=hidden value=nochange 
            name=ctl00$_$ctl00$_$ctl00$ctl00$bcr$ctl00$_$Entry$_$InlineTagEditorPanel></DIV></DIV></DIV>
            <DIV id=comments>
            <H3>Comments </H3>
            <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
              <TBODY>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl01_NameLink 
                  title=TrackBack 
                  href="http://blogs.msdn.com/dancre/archive/2006/07/23/676272.aspx" 
                  rel=nofollow>Dan Crevier's Blog : DataModel-View-ViewModel 
                  pattern: 1</A> said:</H4>
                  <DIV class=CommentText>PingBack from <A 
                  href="http://blogs.msdn.com/dancre/archive/2006/07/23/676272.aspx" 
                  target=_new 
                  rel=nofollow>http://blogs.msdn.com/dancre/archive/2006/07/23/676272.aspx</A></DIV>
                  <DIV class=CommentFooter>July 23, 2006 11:52 PM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl02_NameLink 
                  title=TrackBack 
                  href="http://blogs.msdn.com/okoboji/archive/2006/07/25/678403.aspx" 
                  rel=nofollow>Okoboji: a lake, a mythical university, Kevin 
                  Moore's blog</A> said:</H4>
                  <DIV class=CommentText>Control Licensing in Cider (WPF 
                  designer for VS) James provides some great information on 
                  supporting...</DIV>
                  <DIV class=CommentFooter>July 25, 2006 8:50 PM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl03_NameLink 
                  title=Ed href="http://www.ejball.com/EdAtWork/" 
                  rel=nofollow>Ed</A> said:</H4>
                  <DIV class=CommentText>Just wanted to let you know that you've 
                  got at least one reader on the edge of his seat. These posts 
                  are extremely valuable. Eagerly waiting for the next 
                  one...</DIV>
                  <DIV class=CommentFooter>July 26, 2006 4:51 PM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl04_NameLink 
                  title=TrackBack 
                  href="http://blogs.msdn.com/dancre/archive/2006/07/26/679851.aspx" 
                  rel=nofollow>Dan Crevier's Blog</A> said:</H4>
                  <DIV class=CommentText>In part 2, I showed a base class for 
                  DataModels. In this post, I will describe a sample 
                  implementation....</DIV>
                  <DIV class=CommentFooter>July 27, 2006 1:01 AM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl05_NameLink 
                  title="John Kemp">John Kemp</A> said:</H4>
                  <DIV class=CommentText>This series of articles is great. I was 
                  attempting to try it out but I cannot seem to find the 
                  Dispatcher namespace. I have searched the .net 2.0 assemblies 
                  to no avail. I do not have the .net 3.0 previews installed. Is 
                  the Dispatcher a new class? Thanks for the great work. 
                  <BR><BR>John</DIV>
                  <DIV class=CommentFooter>July 28, 2006 9:52 AM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="CommentOwner CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="CommentOwner  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl06_NameLink 
                  title=dancre href="http://blogs.mdsn.com/dancre">dancre</A> 
                  said:</H4>
                  <DIV class=CommentText>Glad you've found the posts useful! 
                  Dispatcher is something new in .Net 3.0 (aka WinFX) and is 
                  heavily used by WPF (aka Avalon).</DIV>
                  <DIV class=CommentFooter>July 28, 2006 12:37 PM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl07_NameLink 
                  title="John Kemp">John Kemp</A> said:</H4>
                  <DIV class=CommentText>Is there a comperable class in the 2.0 
                  framework? I'm trying to retrofit this concept back into some 
                  code. I thought the BackgroundWorker may work but it only 
                  allows one to run at a time. Maybe you could recommend some 
                  reading or ideas on this. <BR>Thanks!</DIV>
                  <DIV class=CommentFooter>July 28, 2006 4:13 PM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="CommentOwner CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="CommentOwner  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl08_NameLink 
                  title=dancre href="http://blogs.msdn.com/dancre">dancre</A> 
                  said:</H4>
                  <DIV class=CommentText>Is this for a WinForms application? If 
                  so, you might use a custom window message instead of the 
                  dispatcher. It's fundamentally the same thing, although it's 
                  wrapped in a nice API with Dispatcher.</DIV>
                  <DIV class=CommentFooter>July 30, 2006 11:35 PM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl09_NameLink 
                  title=TrackBack 
                  href="http://blogs.sqlxml.org/bryantlikes/archive/2006/09/27/WPF-Patterns.aspx" 
                  rel=nofollow>Bryant Likes's Blog</A> said:</H4>
                  <DIV class=CommentText>If you're doing WPF development, you 
                  really need to check out Dan Crevier 's series on 
                  DataModel-View-ViewModel.</DIV>
                  <DIV class=CommentFooter>September 27, 2006 4:31 PM 
              </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl10_NameLink 
                  title=TrackBack 
                  href="http://blogs.msdn.com/dancre/archive/2006/10/11/datamodel-view-viewmodel-pattern-series.aspx" 
                  rel=nofollow>Dan Crevier's Blog</A> said:</H4>
                  <DIV class=CommentText>
                  <P>I thought I should add a post with the full list of posts 
                  in the D-V-VM pattern. They are: 
                  DataModel-View-ViewModel</P></DIV>
                  <DIV class=CommentFooter>October 11, 2006 10:00 PM 
</DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl11_NameLink 
                  title="John Schroedl">John Schroedl</A> said:</H4>
                  <DIV class=CommentText>
                  <P>Picky picky, but should this: </P>
                  <P>Debug.Assert(Dispatcher.CurrentDispatcher == 
                  this.Dispatcher</P>
                  <P>reference this._dispatcher instead of this.Dispatcher? 
                  &nbsp;(I'm working through the entries now so this may be 
                  correct in the final version). Sorry.</P>
                  <P>John</P></DIV>
                  <DIV class=CommentFooter>October 15, 2006 8:21 PM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="CommentOwner CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="CommentOwner  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl12_NameLink 
                  title=dancre href="http://blogs.msdn.com/">dancre</A> 
                  said:</H4>
                  <DIV class=CommentText>
                  <P>You are right, I forgot to include the Dispatcher property 
                  code above. Once you add a Dispatcher property with a get that 
                  returns _dispatcher, then either works.</P></DIV>
                  <DIV class=CommentFooter>October 16, 2006 12:27 PM 
</DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl13_NameLink 
                  title=TrackBack 
                  href="http://blogs.msdn.com/dancre/archive/2006/07/26/dm-v-vm-part-3-a-sample-datamodel.aspx" 
                  rel=nofollow>Dan Crevier's Blog</A> said:</H4>
                  <DIV class=CommentText>
                  <P>In part 2 , I showed a base class for DataModels. In this 
                  post, I will describe a sample implementation.</P></DIV>
                  <DIV class=CommentFooter>January 6, 2007 11:39 PM 
              </DIV></TD></TR></TBODY></TABLE></DIV><EM>New Comments to this post 
            are disabled</EM> </DIV></DIV></DIV></TD></TR></TBODY></TABLE></TD>
    <TD id=CommonRightColumn style="FONT-SIZE: 100%">
      <DIV class=CommonSidebar>
      <DIV id=BlogLinksSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>This Blog</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___home 
        href="http://blogs.msdn.com/dancre/default.aspx">Home</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___Contactlink1 
        href="http://blogs.msdn.com/dancre/contact.aspx">Email</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___LinkListLink1 
        href="http://blogs.msdn.com/dancre/linklist.aspx">Links</A> 
      </LI></UL></DIV></DIV></DIV>
      <DIV id=TasksSideBar></DIV>
      <DIV id=SubscriptionsSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Syndication</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___bs___rss 
        href="http://blogs.msdn.com/dancre/rss.xml">RSS 2.0</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___bs___atom 
        href="http://blogs.msdn.com/dancre/atom.xml">Atom 1.0</A> 
      </LI></UL></DIV></DIV></DIV>
      <DIV id=RecentPostsSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Recent Posts</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl00_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/10/11/more-skydrive-goodness.aspx">More 
        SkyDrive goodness</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl01_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/08/22/frustrating-error-using-remote-desktop.aspx">Frustrating 
        error using Remote Desktop</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl02_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/08/21/tafiti.aspx">Tafiti</A> 

        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl03_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/08/09/windows-live-skydrive-spaces-integration.aspx">Windows 
        Live SkyDrive/Spaces integration</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl04_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/08/09/windows-live-folders-is-now-windows-live-skydrive.aspx">Windows 
        Live Folders is now Windows Live SkyDrive!</A> 
</LI></UL></DIV></DIV></DIV>
      <DIV id=TagSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Tags</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarTagCloud>
        <LI class=CommonTag3><A 
        href="http://blogs.msdn.com/dancre/archive/tags/ASP.NET/default.aspx" 
        rel=tag>ASP.NET</A> 
        <LI class=CommonTag6><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Debugging/default.aspx" 
        rel=tag>Debugging</A> 
        <LI class=CommonTag1><A 
        href="http://blogs.msdn.com/dancre/archive/tags/DM-V-VM/default.aspx" 
        rel=tag>DM-V-VM</A> 
        <LI class=CommonTag1><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Max/default.aspx" 
        rel=tag>Max</A> 
        <LI class=CommonTag6><A 
        href="http://blogs.msdn.com/dancre/archive/tags/PageModel/default.aspx" 
        rel=tag>PageModel</A> 
        <LI class=CommonTag4><A 
        href="http://blogs.msdn.com/dancre/archive/tags/PanelLayoutAnimator/default.aspx" 
        rel=tag>PanelLayoutAnimator</A> 
        <LI class=CommonTag2><A 
        href="http://blogs.msdn.com/dancre/archive/tags/pdc2005/default.aspx" 
        rel=tag>pdc2005</A> 
        <LI class=CommonTag4><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Tips+_2600_amp_3B00_+Tricks/default.aspx" 
        rel=tag>Tips &amp; Tricks</A> 
        <LI class=CommonTag2><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Utilities/default.aspx" 
        rel=tag>Utilities</A> 
        <LI class=CommonTag3><A 
        href="http://blogs.msdn.com/dancre/archive/tags/VirtualizingTilePanel/default.aspx" 
        rel=tag>VirtualizingTilePanel</A> 
        <LI class=CommonTag6><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Vista/default.aspx" 
        rel=tag>Vista</A> 
        <LI class=CommonTag6><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Web+Perf/default.aspx" 
        rel=tag>Web Perf</A> </LI></UL></DIV></DIV></DIV>
      <DIV id=NewsSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>News</H4>
      <DIV class=CommonSidebarContent>The posts on this weblog are provided "AS 
      IS" with no warranties, and confer no rights. The opinions expressed 
      herein are my own personal opinions and do not represent my employer's 
      view in any way. </DIV></DIV></DIV>
      <DIV id=ArchiveSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Archives</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/10.aspx">October 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/08.aspx">August 
        2007 (4)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/07.aspx">July 
        2007 (4)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/06.aspx">June 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/03.aspx">March 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/02.aspx">February 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/01.aspx">January 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/12.aspx">December 
        2006 (6)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/11.aspx">November 
        2006 (2)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/10.aspx">October 
        2006 (3)</A> 
        <LI><A 
        href="http://blogs.msdn.com/dancre/archive/2006/09.aspx">September 2006 
        (8)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/08.aspx">August 
        2006 (7)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/07.aspx">July 
        2006 (6)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/03.aspx">March 
        2006 (6)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/02.aspx">February 
        2006 (11)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/01.aspx">January 
        2006 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/12.aspx">December 
        2005 (2)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/11.aspx">November 
        2005 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/10.aspx">October 
        2005 (3)</A> 
        <LI><A 
        href="http://blogs.msdn.com/dancre/archive/2005/09.aspx">September 2005 
        (7)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/06.aspx">June 
        2005 (6)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/05.aspx">May 2005 
        (11)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/04.aspx">April 
        2005 (3)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/02.aspx">February 
        2005 (3)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/01.aspx">January 
        2005 (3)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/12.aspx">December 
        2004 (15)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/11.aspx">November 
        2004 (4)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/10.aspx">October 
        2004 (10)</A> 
        <LI><A 
        href="http://blogs.msdn.com/dancre/archive/2004/09.aspx">September 2004 
        (8)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/08.aspx">August 
        2004 (8)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/07.aspx">July 
        2004 (5)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/06.aspx">June 
        2004 (5)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/05.aspx">May 2004 
        (13)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/04.aspx">April 
        2004 (15)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/03.aspx">March 
        2004 (18)</A> </LI></UL></DIV></DIV></DIV></DIV></TD></TR></TBODY></TABLE><!--NOINDEX_START-->
<DIV id=CommonFooter><BR style="OVERFLOW: hidden; LINE-HEIGHT: 1px" clear=all>
<TABLE id=msviFooter cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR vAlign=bottom>
    <TD id=msviFooter2>
      <DIV id=msviLocalFooter><NOBR><A 
      href="http://go.microsoft.com/?linkid=317027">Manage Your Profile</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/isapi/gomscom.asp?target=/legal/" 
      target=_parent>Legal</A> |</NOBR><WBR><NOBR><A 
      href="http://register.microsoft.com/contactus30/contactus.asp?domain=msdn" 
      target=_parent>Contact Us</A> |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/flash/" target=_parent>MSDN Flash 
      Newsletter</A></NOBR></DIV>
      <DIV id=msviGlobalFooter><SPAN>©2005 Microsoft Corporation. All rights 
      reserved.&nbsp;</SPAN><NOBR><A 
      href="http://www.microsoft.com/info/cpyright.mspx">Terms of Use</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/library/toolbar/3.0/trademarks/en-us.mspx">Trademarks</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://www.microsoft.com/info/privacy.mspx">Privacy 
      Statement</A></NOBR></DIV></TD>
    <TD width=105 bgColor=#669aff><IMG title="" height=29 alt=Microsoft 
      src="Dan Crevier's Blog  DataModel-View-ViewModel pattern 2_files/bottomMSFTLogo.jpg" 
      width=105 border=0></TD></TR></TBODY></TABLE></DIV></DIV><!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://blogs.msdn.com/dancre/archive/2006/07/23/datamodel-view-viewmodel-pattern-2.aspx"
dc:identifier="http://blogs.msdn.com/dancre/archive/2006/07/23/datamodel-view-viewmodel-pattern-2.aspx"
dc:title="DataModel-View-ViewModel pattern: 2"
trackback:ping="http://blogs.msdn.com/dancre/trackback.aspx?PostID=676300" />
</rdf:RDF>
--></FORM></BODY></HTML>

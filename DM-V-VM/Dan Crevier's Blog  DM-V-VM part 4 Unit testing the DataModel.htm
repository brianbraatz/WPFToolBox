<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0059)http://blogs.msdn.com/dancre/archive/2006/07/26/679870.aspx -->
<HTML><HEAD><TITLE>Dan Crevier's Blog : DM-V-VM part 4: Unit testing the DataModel</TITLE>
<META content=DM-V-VM name=keywords>
<META 
content="In part 3 , I showed code for StockModel, a DataModel for stocks. On the Max team, we are big believers in extensive unit testing of our code. It took some time to learn the best way to test some of the WPF related stuff. In this post, I intend to demonstrate" 
name=description>
<META content="MSHTML 6.00.2900.3199" name=GENERATOR><LINK 
href="http://blogs.msdn.com/dancre/pingback.aspx" rel=pingback><LINK media=print 
href="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/print.css" 
type=text/css rel=stylesheet><LINK media=screen 
href="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/Common.css" 
type=text/css rel=stylesheet><LINK media=screen 
href="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/Blog.css" 
type=text/css rel=stylesheet><LINK media=print 
href="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/common_print.css" 
type=text/css rel=stylesheet><LINK media=print 
href="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/blog_print.css" 
type=text/css rel=stylesheet><LINK href="/favicon.ico" type=image/ico 
rel="shortcut icon"><LINK title="Dan Crevier's Blog (RSS 2.0)" 
href="http://blogs.msdn.com/dancre/rss.xml" type=application/rss+xml 
rel=alternate><LINK title="Dan Crevier's Blog (Atom 1.0)" 
href="http://blogs.msdn.com/dancre/atom.xml" type=application/atom+xml 
rel=alternate><LINK 
title="DM-V-VM part 4: Unit testing the DataModel Comment RSS (RSS 2.0)" 
href="http://blogs.msdn.com/dancre/commentrss.aspx?PostID=679870" 
type=application/rss+xml rel=alternate>
<META http-equiv=Content-Type content="text/html; charset=UTF-8">
<SCRIPT 
src="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/global.js" 
type=text/javascript></SCRIPT>

<STYLE type=text/css>BODY {
	FONT-SIZE: 84%
}
</STYLE>

<SCRIPT language=JavaScript>var doImage=doImage;var TType=TType;
function mhHover(tbl,idx,cls){var t,d;if(document.getElementById)t=document.getElementById(tbl);else t=document.all(tbl);if(t==null)return;if(t.getElementsByTagName)d=t.getElementsByTagName("TD");else d=t.all.tags("TD");if(d==null)return;if(d.length<=idx)return;d[idx].className=cls;}

</SCRIPT>

<SCRIPT language=javascript 
src="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/minmax.js" 
type=text/javascript></SCRIPT>
</HEAD>
<BODY>
<FORM id=aspnetForm name=aspnetForm 
action=/dancre/archive/2006/07/26/679870.aspx method=post>
<DIV><INPUT id=__VIEWSTATE type=hidden 
value=/wEPDwUKLTMyNjg0MDc1MWRk4kqgif0qb+BsXqBU64DM+rPSfXA= name=__VIEWSTATE> 
</DIV>
<SCRIPT language=javascript 
src="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/Telligent_Modal.js" 
type=text/javascript></SCRIPT>

<SCRIPT language=javascript type=text/javascript>
// <![CDATA[
Telligent_Modal.Configure('/utility/loading.htm',['CommonModal'],['CommonModalTitle'],['CommonModalClose'],['CommonModalContent'],['CommonModalFooter'],['CommonModalResize'],['CommonModalMask'],100);
// ]]>
</SCRIPT>

<DIV id=AllContent>
<DIV id=CommonHeader>
<DIV id=msviMasthead>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="100%">
      <TABLE height=22 cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD id=msviRegionIdGraphic bgColor=#ffffff></TD>
          <TD width="100%" bgColor=#3568cc><IMG title="" height=22 alt=* 
            src="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/topGradient.jpg" 
            width=250></TD></TR></TBODY></TABLE></TD>
    <TD id=msviGlobalToolbar noWrap align=left bgColor=#3568cc height=22>
      <TABLE cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=gt0 onmouseover="mhHover('msviGlobalToolbar', 0, 'gt1')" 
          onmouseout="mhHover('msviGlobalToolbar', 0, 'gt0')" noWrap><A 
            style="FONT-SIZE: 95%" 
            href="http://www.microsoft.com/">Microsoft.com Home</A></TD>
          <TD class=gtsep>|</TD>
          <TD class=gt0 onmouseover="mhHover('msviGlobalToolbar', 2, 'gt1')" 
          onmouseout="mhHover('msviGlobalToolbar', 2, 'gt0')" noWrap><A 
            style="FONT-SIZE: 95%" 
            href="http://www.microsoft.com/library/toolbar/3.0/sitemap/en-us.mspx">Site 
            Map</A></TD></TR></TBODY></TABLE></TD></TR>
  <TR vAlign=top>
    <TD width="100%">
      <TABLE height=42 cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR vAlign=top>
          <TD id=msviBrandBanner bgColor=#ffffff><A 
            href="http://msdn.microsoft.com/"><IMG title="" height=42 alt=MSDN 
            src="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/msdn_masthead_ltr.gif" 
            width=225 border=0></A></TD>
          <TD width="100%" bgColor=#6799ff><IMG title="" height=42 alt=* 
            src="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/topGradient2.jpg" 
            width=250></TD></TR></TBODY></TABLE></TD>
    <TD id=msviGlobalSearch bgColor=#6799ff>
      <DIV id=msviNoSearch></DIV></TD></TR></TBODY></TABLE>
<DIV id=msviLocalToolbar>
<TABLE height=19 cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD id=msviHomePageLink noWrap width=177><A 
      href="http://msdn.microsoft.com/">MSDN Home</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 2, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 2, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/developercenters/">Developer 
Centers</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 4, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 4, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/flash">MSDN Flash</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 6, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 6, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/subscriptions/">Subscribers</A></TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 8, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 8, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 10, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 10, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 12, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 12, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 14, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 14, 'lt0')" noWrap>&nbsp;</TD>
    <TD></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 16, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 16, 'lt0')" noWrap>&nbsp;</TD>
    <TD width="100%"></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<TABLE dir=ltr cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR vAlign=top>
    <TD id=CommonLeftColumn 
    style="BORDER-RIGHT: #999999 1px solid; OVERFLOW-X: hidden" width=181 
    bgColor=#f1f1f1 height="100%">
      <DIV class=mnpMenuTop id=mnpMenuTop>
      <DIV class=mnpInherit>
      <DIV class=CommonSidebarArea>
      <DIV class=CommonSidebarContent><A 
      href="http://blogs.msdn.com/default.aspx">Blogs Home</A> </DIV></DIV>
      <DIV class=CommonSidebarArea>
      <DIV class=CommonSidebarContent><A 
      id=ctl00___ctl00___ctl00_ctl00_AggWelcome___Login 
      href="http://blogs.msdn.com/login.aspx?ReturnUrl=%2fdancre%2farchive%2f2006%2f07%2f26%2f679870.aspx">Sign 
      in</A> | <A id=ctl00___ctl00___ctl00_ctl00_AggWelcome___Register 
      href="http://blogs.msdn.com/user/CreateUser.aspx?ReturnUrl=/dancre/archive/2006/07/26/679870.aspx">Join</A> 
      </DIV></DIV>
      <DIV class=CommonSidebarArea>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A href="http://blogs.msdn.com/search/">Search</A> 
        <LI><A href="http://blogs.msdn.com/MainFeed.aspx?Type=AllBlogs">RSS</A> 
        <LI><A href="http://blogs.msdn.com/Opml.aspx">OPML</A> 
      </LI></UL></DIV></DIV></DIV></DIV>
      <DIV class=mnpAds 
      style="BACKGROUND: #f1f1f1; PADDING-BOTTOM: 20px; WIDTH: 181px; HEIGHT: 100%"></DIV></TD>
    <TD width="100%">
      <TABLE style="TABLE-LAYOUT: fixed" cellSpacing=0 cellPadding=0 
      width="100%" border=0>
        <TBODY>
        <TR>
          <TD width="100%">
            <DIV class=clsDocBody id=pageContainer>
            <DIV class=CommonContentArea>
            <H2 class=CommonTitle><A class=headermaintitle 
            id=ctl00___ctl00___ctl00_ctl00_bcr_bth___BlogTitle 
            href="http://blogs.msdn.com/dancre/default.aspx">Dan Crevier's 
            Blog</A></H2>
            <DIV class=CommonContent>In search of a better name...</DIV>
            <DIV class=CommonContent>
            <STYLE>.DoNotDisplay {
	DISPLAY: none
}
</STYLE>

            <DIV class=BlogPostArea>
            <H4 class=BlogPostHeader>DM-V-VM part 4: Unit testing the DataModel 
            </H4>
            <DIV class=BlogPostContent>
            <P>In <A 
            href="http://blogs.msdn.com/dancre/archive/2006/07/26/679851.aspx">part 
            3</A>, I showed code for StockModel, a DataModel for stocks. On the 
            Max team, we are big believers in extensive unit testing of our 
            code. It took some time to learn the best way to test some of the 
            WPF related stuff. In this post, I intend to demonstrate how to unit 
            test code that involves a Dispatcher.</P>
            <P>We use the unit testing framework built into at least certain 
            flavors of VS 2005, but I think other frameworks like NUnit are 
            pretty similar.</P>
            <P>The first thing we'll define inside our class is a mock 
            IStockQuoteProvider that returns a known value and tracks what 
            symbol it was called with:</P>
            <DIV 
            style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: courier new">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; [<SPAN 
            style="COLOR: teal">TestClass</SPAN>]</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: blue">class</SPAN> <SPAN 
            style="COLOR: teal">StockModelTests</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: gray">///</SPAN><SPAN style="COLOR: green"> 
            </SPAN><SPAN style="COLOR: gray">&lt;summary&gt;</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: gray">///</SPAN><SPAN style="COLOR: green"> 
            IStockQuoteProvider that returns 100</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: gray">///</SPAN><SPAN style="COLOR: green"> 
            </SPAN><SPAN style="COLOR: gray">&lt;/summary&gt;</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">private</SPAN> <SPAN 
            style="COLOR: blue">class</SPAN> <SPAN 
            style="COLOR: teal">TestQuoteProvider</SPAN> : <SPAN 
            style="COLOR: teal">IStockQuoteProvider</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: blue">bool</SPAN> TryGetQuote(<SPAN 
            style="COLOR: blue">string</SPAN> symbol, <SPAN 
            style="COLOR: blue">out</SPAN> <SPAN 
            style="COLOR: blue">double</SPAN> quote)</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _lastSymbol = symbol;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; quote = 100.0;</P>
            <P style="MARGIN: 0px">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">return</SPAN> <SPAN 
            style="COLOR: blue">true</SPAN>;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: blue">string</SPAN> LastSymbol</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; { <SPAN style="COLOR: blue">get</SPAN> { <SPAN 
            style="COLOR: blue">return</SPAN> _lastSymbol; } }</P>
            <P style="MARGIN: 0px">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">private</SPAN> <SPAN 
            style="COLOR: blue">string</SPAN> _lastSymbol = <SPAN 
            style="COLOR: maroon">""</SPAN>;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            }</P></DIV>
            <P>Now, I'll walk through the test method a piece at a time. First, 
            we'll create a StockModel and check the initial state:</P>
            <DIV 
            style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: courier new">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; [<SPAN 
            style="COLOR: teal">TestMethod</SPAN>]</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">public</SPAN> <SPAN 
            style="COLOR: blue">void</SPAN> 
TestStockModelProviderGetsValue()</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: teal">TestQuoteProvider</SPAN> testQuoteProvider = 
            <SPAN style="COLOR: blue">new</SPAN> <SPAN 
            style="COLOR: teal">TestQuoteProvider</SPAN>();</P>
            <P style="MARGIN: 0px">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: teal">StockModel</SPAN> 
            stockModel = <SPAN style="COLOR: blue">new</SPAN> <SPAN 
            style="COLOR: teal">StockModel</SPAN>(<SPAN 
            style="COLOR: maroon">"MSFT"</SPAN>, testQuoteProvider);</P>
            <P style="MARGIN: 0px">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: green">// Verify the initial 
            model state</SPAN></P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: teal">Assert</SPAN>.AreEqual(<SPAN 
            style="COLOR: maroon">"MSFT"</SPAN>, stockModel.Symbol);</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: teal">Assert</SPAN>.AreEqual(0.0, 
            stockModel.Quote);</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: teal">Assert</SPAN>.AreEqual(<SPAN 
            style="COLOR: teal">DataModel</SPAN>.<SPAN 
            style="COLOR: teal">ModelState</SPAN>.Fectching, 
            stockModel.State);</P>
            <P style="MARGIN: 0px">&nbsp;</P></DIV>
            <P>At this point, the StockModel has queued the work item to fetch 
            the state, and it may have even executed it. It may seem like 
            there's a race condition here where the quote would be updated, but 
            there isn't. The background work item uses Dispatcher.BeginInvoke to 
            change the state and/or quote. All this does is put something in the 
            dispatcher queue. But, that won't get executed because the 
            dispatcher isn't processing messages.</P>
            <P>The way we'll get the get the dispatcher to run is with a 
            DispatcherFrame. The basics of the DispatcherFrame is that when you 
            call Dispatcher.PushFrame(), it will process messages in the 
            dispatcher until DispatcherFrame.Cotinue is set to false. At that 
            point Dispatcher.PushFrame() will return.</P>
            <P>What we'll do is add a property changed handler that sets 
            DispatcherFrame.Continue false when the model's state changes from 
            fetching. I like to use an anonymous delegate for this because I 
            find it readable and it gives easy access to the local variables we 
            need.</P>
            <DIV 
            style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: courier new">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN style="COLOR: teal">DispatcherFrame</SPAN> 
            frame = <SPAN style="COLOR: blue">new</SPAN> <SPAN 
            style="COLOR: teal">DispatcherFrame</SPAN>();</P>
            <P style="MARGIN: 0px">&nbsp;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: teal">PropertyChangedEventHandler</SPAN> 
            waitForModelHandler = <SPAN style="COLOR: blue">new</SPAN> <SPAN 
            style="COLOR: teal">PropertyChangedEventHandler</SPAN>(</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">delegate</SPAN>(<SPAN 
            style="COLOR: blue">object</SPAN> sender, <SPAN 
            style="COLOR: teal">PropertyChangedEventArgs</SPAN> e)</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: blue">if</SPAN> (e.PropertyName == <SPAN 
            style="COLOR: maroon">"State"</SPAN> &amp;&amp; stockModel.State 
            !=</P>
            <P 
            style="MARGIN: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            <SPAN style="COLOR: teal">DataModel</SPAN>.<SPAN 
            style="COLOR: teal">ModelState</SPAN>.Fectching)</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; frame.Continue = <SPAN 
            style="COLOR: blue">false</SPAN>;</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; });</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; stockModel.PropertyChanged += 
            waitForModelHandler;</P>
            <P style="MARGIN: 0px">&nbsp;</P></DIV>
            <DIV 
            style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: courier new">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: teal">Dispatcher</SPAN>.PushFrame(frame);</P></DIV>
            <P>When Dispatcher.PushFrame returns, it means that we've hit the 
            property changed handler and the model is up to date. Now, we can 
            verify the final state:</P>
            <DIV 
            style="FONT-SIZE: 10pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: courier new">
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: teal">Assert</SPAN>.AreEqual(<SPAN 
            style="COLOR: teal">DataModel</SPAN>.<SPAN 
            style="COLOR: teal">ModelState</SPAN>.Active, stockModel.State);</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: teal">Assert</SPAN>.AreEqual(100.0, 
            stockModel.Quote);</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
            &nbsp;&nbsp;&nbsp; <SPAN 
            style="COLOR: teal">Assert</SPAN>.AreEqual(<SPAN 
            style="COLOR: maroon">"MSFT"</SPAN>, 
            testQuoteProvider.LastSymbol);</P>
            <P style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; }</P></DIV>
            <P>That's the test. This has tested the code path where the provider 
            returns a quote. Another test is to use an IStockQuoteProvider that 
            returns false and makes sure the state is set to invalid. I'm not 
            including that code in this post because it's pretty obvious from 
            the code above, but I'll include it in the full sample at the 
            end.</P>
            <P>I want to point out a couple of limitations with this 
            approach...</P>
            <P>The first is that if the property changed handler isn't called 
            because of a bug in the code, the test will just hang. One solution 
            to this is to use a DispatcherTimer that sets a failure flag and 
            sets frame.Continue to false. If the failure flag is set when 
            PushFrame returns, it means the property changed handler wasn't hit. 
            If it was hit, you just need to reset the DispatcherTimer.</P>
            <P>Another limitation is that if you have a bunch of tests run in a 
            row using this approach, it's possible that things left in the 
            dispatcher in one test will cause failures in a future test. This 
            can be solved by running the test on its own thread with a private 
            dispatcher.</P>
            <P>Solving these limitations is left as an exercise for the reader 
            :-) If you have questions, let me know.</P></DIV>
            <DIV class=BlogPostFooter>Published Wednesday, July 26, 2006 10:27 
            PM by <A 
            id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___AuthorLink 
            href="http://blogs.msdn.com/user/Profile.aspx?UserID=3401">dancre</A> 

            <DIV><SPAN 
            id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___InlineTagEditorPanel>Filed 
            under: <A 
            href="http://blogs.msdn.com/dancre/archive/tags/DM-V-VM/default.aspx" 
            rel=tag>DM-V-VM</A></SPAN><INPUT 
            id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Entry___InlineTagEditorPanel_State 
            type=hidden value=nochange 
            name=ctl00$_$ctl00$_$ctl00$ctl00$bcr$ctl00$_$Entry$_$InlineTagEditorPanel></DIV></DIV></DIV>
            <DIV id=comments>
            <H3>Comments </H3>
            <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
              <TBODY>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/avatar.jpg" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl01_NameLink 
                  title=Ivolved 
                  href="http://mbrownchicago.spaces.live.com/">Ivolved</A> 
                  said:</H4>
                  <DIV class=CommentText>Providing a link to the next part in 
                  the series <A 
                  href="http://blogs.msdn.com/dancre/archive/2006/08/05/689542.aspx" 
                  target=_new 
                  rel=nofollow>http://blogs.msdn.com/dancre/archive/2006/08/05/689542.aspx</A></DIV>
                  <DIV class=CommentFooter>August 31, 2006 10:53 AM </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl02_NameLink 
                  title=TrackBack 
                  href="http://blogs.sqlxml.org/bryantlikes/archive/2006/09/27/WPF-Patterns.aspx" 
                  rel=nofollow>Bryant Likes's Blog</A> said:</H4>
                  <DIV class=CommentText>If you're doing WPF development, you 
                  really need to check out Dan Crevier 's series on 
                  DataModel-View-ViewModel.</DIV>
                  <DIV class=CommentFooter>September 27, 2006 4:31 PM 
              </DIV></TD></TR>
              <TR vAlign=top>
                <TD class="Comment CommentAvatar"><IMG 
                  src="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/anonymous.gif" 
                  border=1>&nbsp; </TD>
                <TD class="Comment  CommentContent" width="100%">
                  <H4 class=CommentTitle><A 
                  id=ctl00___ctl00___ctl00_ctl00_bcr_ctl00___Comments___Comments_ctl03_NameLink 
                  title=TrackBack 
                  href="http://blogs.msdn.com/dancre/archive/2006/10/11/datamodel-view-viewmodel-pattern-series.aspx" 
                  rel=nofollow>Dan Crevier's Blog</A> said:</H4>
                  <DIV class=CommentText>
                  <P>I thought I should add a post with the full list of posts 
                  in the D-V-VM pattern. They are: 
                  DataModel-View-ViewModel</P></DIV>
                  <DIV class=CommentFooter>October 11, 2006 10:00 PM 
              </DIV></TD></TR></TBODY></TABLE></DIV><EM>New Comments to this post 
            are disabled</EM> </DIV></DIV></DIV></TD></TR></TBODY></TABLE></TD>
    <TD id=CommonRightColumn style="FONT-SIZE: 100%">
      <DIV class=CommonSidebar>
      <DIV id=BlogLinksSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>This Blog</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___home 
        href="http://blogs.msdn.com/dancre/default.aspx">Home</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___Contactlink1 
        href="http://blogs.msdn.com/dancre/contact.aspx">Email</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___wl___LinkListLink1 
        href="http://blogs.msdn.com/dancre/linklist.aspx">Links</A> 
      </LI></UL></DIV></DIV></DIV>
      <DIV id=TasksSideBar></DIV>
      <DIV id=SubscriptionsSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Syndication</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___bs___rss 
        href="http://blogs.msdn.com/dancre/rss.xml">RSS 2.0</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___bs___atom 
        href="http://blogs.msdn.com/dancre/atom.xml">Atom 1.0</A> 
      </LI></UL></DIV></DIV></DIV>
      <DIV id=RecentPostsSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Recent Posts</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl00_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/10/11/more-skydrive-goodness.aspx">More 
        SkyDrive goodness</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl01_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/08/22/frustrating-error-using-remote-desktop.aspx">Frustrating 
        error using Remote Desktop</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl02_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/08/21/tafiti.aspx">Tafiti</A> 

        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl03_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/08/09/windows-live-skydrive-spaces-integration.aspx">Windows 
        Live SkyDrive/Spaces integration</A> 
        <LI><A id=ctl00___ctl00___ctl00_ctl00_rcr_bsb___rp___PostList_ctl04_Link 
        href="http://blogs.msdn.com/dancre/archive/2007/08/09/windows-live-folders-is-now-windows-live-skydrive.aspx">Windows 
        Live Folders is now Windows Live SkyDrive!</A> 
</LI></UL></DIV></DIV></DIV>
      <DIV id=TagSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Tags</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarTagCloud>
        <LI class=CommonTag3><A 
        href="http://blogs.msdn.com/dancre/archive/tags/ASP.NET/default.aspx" 
        rel=tag>ASP.NET</A> 
        <LI class=CommonTag6><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Debugging/default.aspx" 
        rel=tag>Debugging</A> 
        <LI class=CommonTag1><A 
        href="http://blogs.msdn.com/dancre/archive/tags/DM-V-VM/default.aspx" 
        rel=tag>DM-V-VM</A> 
        <LI class=CommonTag1><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Max/default.aspx" 
        rel=tag>Max</A> 
        <LI class=CommonTag6><A 
        href="http://blogs.msdn.com/dancre/archive/tags/PageModel/default.aspx" 
        rel=tag>PageModel</A> 
        <LI class=CommonTag4><A 
        href="http://blogs.msdn.com/dancre/archive/tags/PanelLayoutAnimator/default.aspx" 
        rel=tag>PanelLayoutAnimator</A> 
        <LI class=CommonTag2><A 
        href="http://blogs.msdn.com/dancre/archive/tags/pdc2005/default.aspx" 
        rel=tag>pdc2005</A> 
        <LI class=CommonTag4><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Tips+_2600_amp_3B00_+Tricks/default.aspx" 
        rel=tag>Tips &amp; Tricks</A> 
        <LI class=CommonTag2><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Utilities/default.aspx" 
        rel=tag>Utilities</A> 
        <LI class=CommonTag3><A 
        href="http://blogs.msdn.com/dancre/archive/tags/VirtualizingTilePanel/default.aspx" 
        rel=tag>VirtualizingTilePanel</A> 
        <LI class=CommonTag6><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Vista/default.aspx" 
        rel=tag>Vista</A> 
        <LI class=CommonTag6><A 
        href="http://blogs.msdn.com/dancre/archive/tags/Web+Perf/default.aspx" 
        rel=tag>Web Perf</A> </LI></UL></DIV></DIV></DIV>
      <DIV id=NewsSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>News</H4>
      <DIV class=CommonSidebarContent>The posts on this weblog are provided "AS 
      IS" with no warranties, and confer no rights. The opinions expressed 
      herein are my own personal opinions and do not represent my employer's 
      view in any way. </DIV></DIV></DIV>
      <DIV id=ArchiveSideBar>
      <DIV class=CommonSidebarArea>
      <H4 class=CommonSidebarHeader>Archives</H4>
      <DIV class=CommonSidebarContent>
      <UL class=CommonSidebarList>
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/10.aspx">October 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/08.aspx">August 
        2007 (4)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/07.aspx">July 
        2007 (4)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/06.aspx">June 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/03.aspx">March 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/02.aspx">February 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2007/01.aspx">January 
        2007 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/12.aspx">December 
        2006 (6)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/11.aspx">November 
        2006 (2)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/10.aspx">October 
        2006 (3)</A> 
        <LI><A 
        href="http://blogs.msdn.com/dancre/archive/2006/09.aspx">September 2006 
        (8)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/08.aspx">August 
        2006 (7)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/07.aspx">July 
        2006 (6)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/03.aspx">March 
        2006 (6)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/02.aspx">February 
        2006 (11)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2006/01.aspx">January 
        2006 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/12.aspx">December 
        2005 (2)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/11.aspx">November 
        2005 (1)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/10.aspx">October 
        2005 (3)</A> 
        <LI><A 
        href="http://blogs.msdn.com/dancre/archive/2005/09.aspx">September 2005 
        (7)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/06.aspx">June 
        2005 (6)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/05.aspx">May 2005 
        (11)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/04.aspx">April 
        2005 (3)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/02.aspx">February 
        2005 (3)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2005/01.aspx">January 
        2005 (3)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/12.aspx">December 
        2004 (15)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/11.aspx">November 
        2004 (4)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/10.aspx">October 
        2004 (10)</A> 
        <LI><A 
        href="http://blogs.msdn.com/dancre/archive/2004/09.aspx">September 2004 
        (8)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/08.aspx">August 
        2004 (8)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/07.aspx">July 
        2004 (5)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/06.aspx">June 
        2004 (5)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/05.aspx">May 2004 
        (13)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/04.aspx">April 
        2004 (15)</A> 
        <LI><A href="http://blogs.msdn.com/dancre/archive/2004/03.aspx">March 
        2004 (18)</A> </LI></UL></DIV></DIV></DIV></DIV></TD></TR></TBODY></TABLE><!--NOINDEX_START-->
<DIV id=CommonFooter><BR style="OVERFLOW: hidden; LINE-HEIGHT: 1px" clear=all>
<TABLE id=msviFooter cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR vAlign=bottom>
    <TD id=msviFooter2>
      <DIV id=msviLocalFooter><NOBR><A 
      href="http://go.microsoft.com/?linkid=317027">Manage Your Profile</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/isapi/gomscom.asp?target=/legal/" 
      target=_parent>Legal</A> |</NOBR><WBR><NOBR><A 
      href="http://register.microsoft.com/contactus30/contactus.asp?domain=msdn" 
      target=_parent>Contact Us</A> |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/flash/" target=_parent>MSDN Flash 
      Newsletter</A></NOBR></DIV>
      <DIV id=msviGlobalFooter><SPAN>©2005 Microsoft Corporation. All rights 
      reserved.&nbsp;</SPAN><NOBR><A 
      href="http://www.microsoft.com/info/cpyright.mspx">Terms of Use</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/library/toolbar/3.0/trademarks/en-us.mspx">Trademarks</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://www.microsoft.com/info/privacy.mspx">Privacy 
      Statement</A></NOBR></DIV></TD>
    <TD width=105 bgColor=#669aff><IMG title="" height=29 alt=Microsoft 
      src="Dan Crevier's Blog  DM-V-VM part 4 Unit testing the DataModel_files/bottomMSFTLogo.jpg" 
      width=105 border=0></TD></TR></TBODY></TABLE></DIV></DIV><!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://blogs.msdn.com/dancre/archive/2006/07/26/dm-v-vm-part-4-unit-testing-the-datamodel.aspx"
dc:identifier="http://blogs.msdn.com/dancre/archive/2006/07/26/dm-v-vm-part-4-unit-testing-the-datamodel.aspx"
dc:title="DM-V-VM part 4: Unit testing the DataModel"
trackback:ping="http://blogs.msdn.com/dancre/trackback.aspx?PostID=679870" />
</rdf:RDF>
--></FORM></BODY></HTML>

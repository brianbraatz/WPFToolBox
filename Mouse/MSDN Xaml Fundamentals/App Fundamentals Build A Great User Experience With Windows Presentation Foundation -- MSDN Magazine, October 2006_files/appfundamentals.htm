
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<html>
	<head>
	<TITLE id="pagetitle">App Fundamentals: Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006</TITLE>
	<META NAME="Description" CONTENT="The Windows Presentation Foundation application model distinguishes
between standalone and browser applications and between menu driven and hyperlink driven navigation, resulting in  a more satisfying experience for your users.  " />
	<META HTTP-EQUIV="PICS-Label" CONTENT='(PICS-1.1 "http://www.rsac.org/ratingsv01.html" l comment "RSACi North America Server" by "inet@microsoft.com" r (n 0 s 0 v 0 l 0))'>
	<META NAME="MS.LOCALE" CONTENT="en-us" />
	<META name="save" content="history">
		
	<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=UTF-8">
<META NAME="Robots" CONTENT="all" >
<link type='text/css' rel='Stylesheet' href='/library/mnp/2/aspx/css.aspx?locale=en-us&amp;name=QuickSearch&amp;name=Menu&amp;static=Page' />
<script type='text/javascript' language='Javascript' src='/mnp_utility.mspx/menujs?mnpshell=%2fmsdnmag%2fissues%2f06%2f10%2fconfig_issue.xml&amp;clicktrax=False'></script>
<script type='text/javascript' language='Javascript' src='/msdnmag/js/msdnmag.js'></script>
<script type='text/javascript' language='Javascript' src='/library/mnp/2/aspx/js.aspx?&amp;name=Menu'></script>
<link type='text/css' rel='Stylesheet' href='/msdnmag/css/mag.css' />
<link rel='stylesheet' type='text/css' href='/library/toolbar/3.0/css.aspx?c=/msdnmag/issues/06/10/config_issue.xml' /><script language='JavaScript'>var doImage=doImage;var TType=TType;
function mhHover(tbl,idx,cls){var t,d;if(document.getElementById)t=document.getElementById(tbl);else t=document.all(tbl);if(t==null)return;if(t.getElementsByTagName)d=t.getElementsByTagName("TD");else d=t.all.tags("TD");if(d==null)return;if(d.length<=idx)return;d[idx].className=cls;}
function footerjs(doc){if(doImage==null){var tt=TType==null?"PV":TType;doc.write('<layer visibility="hide"><div style="display:none"><img src="http://c.microsoft.com/trans_pixel.asp?source=msdn&TYPE=' + tt + '&p=msdnmag_issues_06_10_appfundamentals&URI=%2fmsdnmag%2fissues%2f06%2f10%2fappfundamentals%2fDefault.aspx&GUID=1F4FC18C-F71E-47FB-8FC9-612F8EE59C61&r=http%3a%2f%2fwww.google.com%2fsearch%3fhl%3den%26q%3dxaml%2b%2b%2bnavigationwindow" width=0 height=0 hspace=0 vspace=0 border=0 /></div></layer>');}}</script><script language='JavaScript' src='/library/svy/broker.js'></script>
	</head>
	<body TOPMARGIN="0" LEFTMARGIN="0">
		
		<!--NOINDEX_START--><script language="Javascript">
				if (self.name == "MNPMainFrame") top.location.href = self.location.href;
			</script><div id="msviMasthead"><table cellpadding="0" cellspacing="0" width="100%" border="0"><tr><td width="100%"><table cellpadding="0" cellspacing="0" width="100%" height="22" border="0"><tr><td id="msviRegionIdGraphic" bgcolor="#FFFFFF"></td><td id="msviRegionGradient1" width="50%" style="filter:progid:DXImageTransform.Microsoft.Gradient(startColorStr='#FFFFFF', endColorStr='#98B2E6', gradientType='1')"></td><td id="msviRegionGradient2" width="50%" style="filter:progid:DXImageTransform.Microsoft.Gradient(startColorStr='#98B2E6', endColorStr='#3568CC', gradientType='1')"></td></tr></table></td><td id="msviGlobalToolbar" bgcolor="#3568CC" height="22" nowrap="" dir="ltr" align="left"><table cellpadding="0" cellspacing="0" border="0"><tr><td class="gt0" nowrap="nowrap" onmouseover="mhHover('msviGlobalToolbar', 0, 'gt1')" onmouseout="mhHover('msviGlobalToolbar', 0, 'gt0')"><a href="http://www.microsoft.com">Microsoft.com Home</a></td><td class="gtsep">|</td><td class="gt0" nowrap="nowrap" onmouseover="mhHover('msviGlobalToolbar', 2, 'gt1')" onmouseout="mhHover('msviGlobalToolbar', 2, 'gt0')"><a href="/library/toolbar/3.0/sitemap/en-us.mspx">Site Map</a></td></tr></table></td></tr><tr valign="top"><td width="100%"><table cellpadding="0" cellspacing="0" width="100%" height="42" border="0" style="height: expression(parentElement.offsetHeight)"><tr valign="top"><td id="msviBrandBanner" bgcolor="FFFFFF"><a href="http://msdn.microsoft.com"><img src="/library/toolbar/3.0/images/banners/msdn_masthead_ltr.gif" width="225" height="42" alt="MSDN" title="" border="0" /></a></td><td width="100%" style="filter:progid:DXImageTransform.Microsoft.Gradient(startColorStr='#FFFFFF', endColorStr='#6799FF', gradientType='1')"></td></tr></table></td><td id="msviGlobalSearch" bgcolor="#6799FF">Search Microsoft.com for:<br /><form id="msviSearchForm" action="/library/toolbar/3.0/search.aspx"><input type="hidden" name="View" value="en-us" /><input type="hidden" name="charset" value="iso-8859-1" /><nobr><div style="height: 18px"><input name="qu" id="msviSearchBox" maxlength="255" /><input id="msviGoButton" type="submit" value="Go" /></div></nobr></form></td></tr></table><div id="msviLocalToolbar"><table cellpadding="0" cellspacing="0" width="100%" height="19" border="0"><tr><td nowrap="nowrap" id="msviHomePageLink"><a href="/default.aspx">MSDN Home</a></td><td><span class="ltsep">|</span></td><td class="lt0" nowrap="nowrap" onmouseover="mhHover('msviLocalToolbar', 2, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 2, 'lt0')"><a href="/developercenters/">Developer Centers</a></td><td><span class="ltsep">|</span></td><td class="lt0" nowrap="nowrap" onmouseover="mhHover('msviLocalToolbar', 4, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 4, 'lt0')"><a href="/library/default.asp">Library</a></td><td><span class="ltsep">|</span></td><td class="lt0" nowrap="nowrap" onmouseover="mhHover('msviLocalToolbar', 6, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 6, 'lt0')"><a href="/downloads/">Downloads</a></td><td><span class="ltsep">|</span></td><td class="lt0" nowrap="nowrap" onmouseover="mhHover('msviLocalToolbar', 8, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 8, 'lt0')"><a href="/howtobuy/">How to Buy</a></td><td><span class="ltsep">|</span></td><td class="lt0" nowrap="nowrap" onmouseover="mhHover('msviLocalToolbar', 10, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 10, 'lt0')"><a href="/subscriptions/">Subscribers</a></td><td><span class="ltsep">|</span></td><td class="lt0" nowrap="nowrap" onmouseover="mhHover('msviLocalToolbar', 12, 'lt1')" onmouseout="mhHover('msviLocalToolbar', 12, 'lt0')"><a href="/worldwide.aspx">Worldwide</a></td><td width="100%"></td></tr></table></div></div>
			<table cellpadding="0" cellspacing="0" border="0" width="100%" dir="LTR">
				<tr valign="top">
		<td height="100%" style="overflow-x: hidden" width="181"><table cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td class="mnpQuickSearch" style="background: #CCCCCC; color: #000000" dir="LTR"><form style="margin: 0px" action="/msdn-online/shared/components/mscomsearch30.aspx"><nobr><font color="#000000">Search for</font><br><input class="mnpSearchBox" type="text" id="qu" name="qu" maxlength="255" style="width: 165px"><br><table cellpadding="0" cellspacing="0" border="0" width="100%" style="margin-top: 2px"><tr><td width="100%" class="mnpQuickSearch" style="padding: 0px"><select class="mnpSearchScopes" style="width: 137px" name="SearchScope"><option value="1">MSDN and KB</option><option value="2">MSDN Library</option><option value="3">Code and Downloads</option><option value="7" selected="">MSDN Magazine</option><option value="5">Knowledge Base (KB)</option></select></td><td><input class="mnpSearchButton" type="submit" value="Go"><br></td></tr></table><a href="http://search.microsoft.com/search/search.aspx?View=msdn&amp;st=a" style="color: #000000" onmouseover="style.color='#0033CC';" onmouseout="style.color='#000000';">Advanced Search</a></nobr></form></td></tr></table><div id="mnpMenuTop" class="mnpMenuTop" style="overflow-x: hidden; width: 181px" url="/msdnmag/issues/06/10/AppFundamentals/default.aspx" dir="LTR" parent="/msdnmag/issues/06/10/default.aspx"><div class="mnpInherit"><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/default.aspx">MSDN Magazine Home</a></div><div class="mnpMenuBorder" style="width: 180px"></div><div class="mnpMenuRow" style="border-color: #999999; width: 176px; overflow-x: hidden" menu="m6cf1299b23714106b822694b32418e5e"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/issues/06/10/default.aspx">October 2006</a></div><div class="mnpMenuBorder" style="width: 180px"></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden" menu="m66be025db64f7146f504e0fec1b2bae3"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/find/default.aspx">Search</a></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden" menu="m3fd9abd6d4e6b1d47da1677743a69def"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/code.aspx">Source Code</a></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden" menu="m0e5c80cdf8bdd73274e5171bd96f4ed9"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/backissues.aspx">Back Issue Archive</a></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden" menu="mbf75615e0c7b0b018a47f1aaa4e9b7b9"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/columns/default.aspx">Column Archive</a></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/rss/default.aspx">RSS</a></div><div class="mnpMenuBorder" style="width: 180px"></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/Subscribe.aspx">Subscribe</a></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/backissues/default.aspx">Order Back Issues</a></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/service.aspx">Reader Services</a></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/staff.aspx">Meet the Staff</a></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/authors.aspx">Meet the Authors</a></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="http://www.sdmediagroup.com/msdnmag/mediakit/mediakit.htm">Media Kit</a></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/cdrom/default.aspx">Special CD and DVD Offers</a></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/podcast/default.aspx">Podcast</a></div><div class="mnpMenuBorder" style="width: 180px"></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/submit.aspx">Submit an Article</a></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/write.aspx">Write to Us</a></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/msdnmag/correct.aspx">Corrections</a></div><div class="mnpMenuBorder" style="width: 180px"></div><div class="mnpMenuRow" style="border-color: #F1F1F1; background: #F1F1F1; width: 176px; overflow-x: hidden"><img width="4" height="7" border="0" alt="*" title="" class="mnpMenuArrow" src="/library/mnp/2/gif/arrowLTR.gif" style="left: 166px; visibility: hidden"><a href="/isapi/gomscom.asp?TARGET=/technet/technetmag/default.aspx">TechNet Magazine</a></div><div class="mnpMenuBorder" style="width: 180px; margin-bottom: 0px"></div></div></div><div class="mnpAds" style="width: 181px; height: 100%; padding-bottom: 20px; background: #F1F1F1; border-style: solid; border-color: #999999; border-width: 0px 1px 0px 0px"><center><div style="height: 20px; background: inherit"></div><a href="http://estore.websitepros.com/1779793/StoreFront.bok" target="_blank"><img border="0" src="/msdnmag/images/promo/ad1.gif" alt="MSDN Magazine Archive CD"></a><br><div style="height: 20px; background: inherit"></div><a href="http://www.dotnetroadshow.com" target="_blank"><img border="0" src="/msdnmag/images/promo/ad2.gif" alt=".NET Roadshow 2007"></a><br></center></div></td>
          <td width="100%" dir="LTR">
        <table width="100%" cellpadding="0" cellspacing="0" height="46" bgcolor="#3366CC"><tr><td width="419"><img border="0" src="/msdnmag/images/magsub.gif" width="419" height="46" alt="MSDN Magazine"></td><td width="100%" title="MSDN Magazine" background="" bgcolor="#3366CC">&nbsp;</td></tr></table><!--NOINDEX_STOP-->
	<!----------------->
	<!--BEGIN_CONTENT-->
	<!----------------->
        <form name="locBar" method="post" action="Default.aspx" id="locBar" style="margin: 0px">
<input type="hidden" name="__VIEWSTATE" value="dDwxODM5MzQ5NTY7Oz4g5D9dbWD6IZVNGwD+P/FTzbX9EA==" />



<table width="100%" border="0" cellpadding="0" bgcolor="#3366CC" cellspacing="0">
    <tr>
        <td>
            <table width="419" border="0" cellpadding="0" cellspacing="0" background="/msdnmag/images/locBarBackGround.gif"
                style="background-image: url(/msdnmag/images/locBarBackGround.gif);">
                <tr>
                    <td style="width: 419px">
                        <br />&nbsp;
                        <br />&nbsp;
                    </td>
                </tr>
            </table>
        </td>
        <td align="right" valign="top">
            <table cellspacing="0" border="0">
                <tr>
                    <td>
                        <font color="white">Choose Your Language:
                            <select name="locBar1:ddlLoc" id="locBar1_ddlLoc" onchange="window.open(this.options[this.selectedIndex].value,'_top')">
	<option value="default.aspx?loc=en">English</option>
	<option value="default.aspx?loc=de">Deutsch</option>
	<option value="default.aspx?loc=es">Espa&#241;ol</option>
	<option value="default.aspx?loc=fr">Fran&#231;ais</option>
	<option value="default.aspx?loc=it">Italiano</option>
	<option value="default.aspx?loc=jp">日本語</option>
	<option value="default.aspx?loc=ko">한국어</option>
	<option value="default.aspx?loc=pt">Portugu&#234;s</option>
	<option value="default.aspx?loc=ru">Pусский</option>
	<option value="default.aspx?loc=zh">简体中文</option>
	<option value="default.aspx?loc=zx">繁體中文</option>

</select>&nbsp;<br />
                            </font>
                    </td>
                </tr>
            </table>
        </td>
    </tr>
</table>


</form>
        <DIV class="eyebrow"><a class="small" href="/default.aspx">MSDN Home</a> &gt; <a class="small" href="/msdnmag/default.aspx">MSDN Magazine</a> &gt; <A class="small" href="/msdnmag/issues/06/10/default.aspx">October 2006</A><HR></DIV>
        <TABLE border="0" cellpadding="0" cellspacing="0" width="100%"><TR><TD class="clsDocBody"><SPAN class="clsSmHead">App Fundamentals</SPAN><H1>Build A Great User Experience With Windows Presentation Foundation</H1><BR><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr><td width="75%"><DIV class="pd" xmlns:user="http://msdn.microsoft.com"><A title="More articles by this author" href="/msdnmag/find/?type=Au&amp;phrase=Michael%20Weinhardt&amp;words=exact">Michael Weinhardt</A></DIV></td><td><DIV align="right" id="menu_parent" xmlns:user="http://msdn.microsoft.com"><Table border="0" cellpadding="3" cellspacing="0"><tr valign="bottom" align="center"><td><a id="Print" title="Print a printer-friendly version of this page" href="default.aspx?loc=&amp;print=true" onmouseover="window.status='Print This Page';return true" onmouseout="window.status='';return true" OnClick="PrintButtonClick();return false;"><img border="0" src="/msdn-online/shared/graphics/icons/rtg_print.gif" alt=""></a></td><td><a href="#bottom"><img border="0" src="/msdn-online/shared/graphics/icons/rtg_email.gif" alt=""></a></td><td><a href="#bottom"><img border="0" src="/msdn-online/shared/graphics/icons/rtg_save.gif" alt=""></a></td><td><a href="/msdnmag/rss/rss.aspx?current=true"><img border="0" src="/msdnmag/images/interactive/rss.gif" alt=""></a></td><td><a href="#bottom"><img border="0" src="/msdnmag/images/interactive/rate.gif" alt=""></a></td><td><A href="#" onclick="return false;">more ...</A></td></tr></Table></DIV><DIV align="right" style="float: right; width: 175px;" xmlns:user="http://msdn.microsoft.com"><div id="menu_child" style="z-index:100; align:right; border: 1px solid #999999; background-color: white; width: 175px; padding: 5px"><table width="100%" border="0" cellpadding="2" cellspacing="3"><tr><td width="30" valign="middle" align="center"><img src="/msdn-online/shared/graphics/icons/rtg_print.gif" alt=""></td><td width="140" valign="middle"><a id="Print" title="Print a printer-friendly version of this page" href="default.aspx?loc=&amp;print=true" onmouseover="window.status='Print This Page';return true" onmouseout="window.status='';return true" OnClick="PrintButtonClick();return false;">Print</a></td></tr><tr><td valign="middle" align="center"><img src="/msdn-online/shared/graphics/icons/rtg_email.gif" alt=""></td><td valign="middle"><a href="#bottom">E-mail</a></td></tr><tr><td valign="middle" align="center"><img src="/msdn-online/shared/graphics/icons/rtg_save.gif" alt=""></td><td valign="middle"><a href="#bottom">Add to Favorites</a></td></tr><tr><td valign="middle" align="center"><img src="/msdnmag/images/interactive/rate.gif" alt=""></td><td valign="middle"><a href="#bottom">Rate</a></td></tr><tr><td valign="middle" align="center"><img src="/msdnmag/images/interactive/rss.gif" alt=""></td><td valign="middle"><a href="/msdnmag/rss/rss.aspx?current=true">RSS (Issues)
                  </a></td></tr><tr><td valign="middle" align="center"><img src="/msdnmag/images/interactive/addtoany.gif" alt=""></td><td valign="middle"><a href="http://www.addtoany.com/?linkname=MSDN+Magazine&amp;type=rss&amp;linkurl=http://msdn.microsoft.com/msdnmag/rss/rss.aspx?current=true">
                    Add RSS to Any
                  </a></td></tr><tr><td valign="middle" align="center"><img src="/msdn-online/shared/graphics/icons/library.gif" alt=""></td><td valign="middle"><a href="#bottom">Related Articles</a></td></tr><tr><td valign="middle" align="center"><img src="/msdnmag/images/interactive/spaces.gif" alt=""></td><td valign="middle"><a target="_blank" href="http://spaces.live.com/blogit.aspx?Title=App Fundamentals:+Build A Great User Experience With Windows Presentation Foundation&amp;Description=The Windows Presentation Foundation application model distinguishes&#xA;between standalone and browser applications and between menu driven and hyperlink driven navigation, resulting in  a more satisfying experience for your users.  &amp;SourceURL=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx">
                Live Spaces
              </a></td></tr><tr><td valign="middle" align="center"><img src="/msdnmag/images/interactive/digg.gif" alt=""></td><td valign="middle"><a target="_blank" href="&#xD;&#xA;                  http://digg.com/submit?phase=2&amp;url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx&amp;title=App Fundamentals:+Build A Great User Experience With Windows Presentation Foundation&amp;bodytext=The Windows Presentation Foundation application model distinguishes&#xA;between standalone and browser applications and between menu driven and hyperlink driven navigation, resulting in  a more satisfying experience for your users.  &amp;topic=programming&#xD;&#xA;                ">
                Digg This
              </a></td></tr><tr><td valign="middle" align="center"><img src="/msdnmag/images/interactive/blogger.gif" alt=""></td><td valign="middle"><a target="_blank" href="http://new.blogger.com/blog_this.pyra?t=The Windows Presentation Foundation application model distinguishes&#xA;between standalone and browser applications and between menu driven and hyperlink driven navigation, resulting in  a more satisfying experience for your users.  &amp;u=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx&amp;n='App Fundamentals:+Build A Great User Experience With Windows Presentation Foundation,'bloggerForm','scrollbars=no,width=475,height=300,top=175,left=75,status=yes,resizable=yes">
              BlogThis!
              </a></td></tr><tr><td valign="middle" align="center"><img src="/msdnmag/images/interactive/slashdot.gif" alt=""></td><td valign="middle"><a target="_blank" href="http://slashdot.org/bookmark.pl?url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx&amp;title=App Fundamentals:+Build A Great User Experience With Windows Presentation Foundation">
                Slashdot
              </a></td></tr><tr><td valign="middle" align="center"><img src="/msdnmag/images/interactive/delicious.gif" alt=""></td><td valign="middle"><a target="_blank" href="http://del.icio.us/post?url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx&amp;title=App Fundamentals:+Build A Great User Experience With Windows Presentation Foundation">
                del.icio.us
              </a></td></tr><tr><td valign="middle" align="center"><img src="/msdnmag/images/interactive/technorati.png" alt=""></td><td valign="middle"><a target="_blank" href="http://technorati.com/faves?add=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx">
                Technorati
              </a></td></tr><tr><td valign="middle" align="center"><img src="/msdn-online/shared/graphics/icodownl.gif" alt=""></td><td valign="middle"><a href="/msdnmag/code/?url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx">Explore
                    </a>
                    the code.
                    <br><br><a href="http://download.microsoft.com/download/f/2/7/f279e71e-efb0-4155-873d-5554a0608523/WPF2006_10.exe">
                  Download
                </a>
                the code.
              </td></tr></table></div></DIV><script type="text/javascript" xmlns:user="http://msdn.microsoft.com">
      at_attach("menu_parent", "menu_child", "hover", "y", "pointer");
    </script></td></tr></table><DIV class="clsBeta">This article is based on prerelease versions of WPF and the .NET Framework 3.0. All information herein is subject to change
      </DIV><HR><SPAN class="clsSearchBox">This article discusses:</SPAN><TABLE border="0" cellpadding="0" cellspacing="0"><TR><TD width="55%"><DIV class="clsDiscuss"><UL><LI class="clsInfoBox">Elements of a user experience
            </LI><LI class="clsInfoBox">The Windows Presentation Foundation Resource model
            </LI><LI class="clsInfoBox">The Windows Presentation Foundation Application type
            </LI><LI class="clsInfoBox">Designing an XBAP application
            </LI></UL></DIV></TD><TD><DIV class="clsInfoBox"><SPAN class="clsSmWhite"><B>This article uses the following technologies:</B><BR>.NET Framework 3.0, Visual Studio 2005, XAML, and C#
        </SPAN><BR></DIV></TD></TR></TABLE><BR><span id="dl_parent" style="font-size:100%;"><a id="Code" href="/msdnmag/code/?url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx"><img src="/msdn-online/shared/graphics/icodownl.gif" alt="Download Image" width="16" hspace="5" height="16" style="border:0px;">Get the sample code for this article.</a></span><div id="dl_child" style="z-index:100; border: 1px solid #999999; background-color: white; width: 500px; padding: 0px"><table style="background-image: url('/msdnmag/images/codebg.gif');" border="0" width="500" cellpadding="20" cellspacing="0"><tr><td valign="top"><b>
                    NEW:<a href="/msdnmag/code/?url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx">Explore</a>
                    the sample code online!
                  </b><br><br>
                  - or -
                  <br><br><b>Code download available at:
              </b><a href="http://download.microsoft.com/download/f/2/7/f279e71e-efb0-4155-873d-5554a0608523/WPF2006_10.exe">WPF2006_10.exe</a> (214KB)
            </td></tr></table></div><script type="text/javascript">
        at_attach("dl_parent", "dl_child", "hover", "y", "pointer");
      </script><HR><TABLE border="0" cellpadding="0" cellspacing="0" width="100%"><TR><TD width="50%"><IMG SRC="/msdnmag/images/minus.gif" CLASS="clsImgButton" VSPACE="2" HSPACE="5" HEIGHT="9" WIDTH="9" ALT="" align="absmiddle" ID="contentbtn" onclick="ToggleMenu(contentbtn, contentmenu);"><A href="#void" target="_self" onclick="ToggleMenu(contentbtn, contentmenu);" name="contents"><B>Contents</B></A><BR><DIV style="display:block;margin-left:20px;margin-top:10px;" id="contentmenu"><A target="_self" href="#S1">Application Type</A><BR><A target="_self" href="#S2">The Window</A><BR><A target="_self" href="#S3">The Page Class</A><BR><A target="_self" href="#S4">Hyperlink Class</A><BR><A target="_self" href="#S5">NavigationWindow</A><BR><A target="_self" href="#S6">NavigationService</A><BR><A target="_self" href="#S7">XAML Browser Applications </A><BR><A target="_self" href="#S8">Frame</A><BR><A target="_self" href="#S9">Windows Presentation Foundation Resources</A><BR><A target="_self" href="#S10">PageFunction</A><BR><A target="_self" href="#S11">Where Are We?</A><BR></DIV></TD></TR></TABLE><HR><BR><DIV class="articletext"><P class="clsNoIndent"><DIV class="dropcap">A</DIV>user experience is a sum of its content and the way its content is hosted. In Windows<SUP class="clsSmall">®</SUP> Presentation Foundation, content is created using standard controls, 2D and 3D graphics, animation, data binding, layouts, styling, and templating. However, the content is fairly useless until it is hosted in a way that allows users to both see and interact with it. The content needs to be packaged within an application and displayed through a window. This is where an application model comes in handy.</P><P>The Windows Presentation Foundation application model distinguishes between two application types: standalone and browser. A standalone application displays content through its own windows, dialogs, and message boxes, while a browser application consists of its own pages that are hosted in a browser.</P><P>Similarly, Windows Presentation Foundation distinguishes between two styles of navigation: menu driven and hyperlink driven. Menu-driven applications allow users to navigate content and functionality using menu bars, tool bars, windows, and dialogs, just as with any traditional desktop Windows-based application. Hyperlink-driven uses hyperlinks to deliver a navigation experience that resembles Web applications.</P><P>It goes without saying that standalone applications naturally support menu-driven navigation and browser applications naturally support hyperlink-driven navigation. But the Windows Presentation Foundation application model lets you mix and match elements of both. In most cases, this involves either partially or completely integrating a hyperlink-driven experience into a standalone application. The combination you use should be based upon the type of experience that will most benefit your users. Once you've decided on the experience you want to deliver, you can use the Windows Presentation Foundation application model to build it.</P><BR><A name="S1"></A><SPAN class="clsSubhead">Application Type</SPAN><BR><P>Consider the sample Box Application, shown in <SPAN class="clsFigs" xmlns:user="http://msdn.microsoft.com">Figure&#160;1</SPAN>. This is a standalone, menu-driven application that allows people who need boxes to list, order, view, and delete box orders. To provide this user experience, you need to begin with the most fundamental of all application model building blocks: creating an application.</P><DIV STYLE="width:425px;display:none;" ID="428425"><A HREF="Javascript:ToggleImages('428425', '403400');"><IMG src="fig01_L.gif" height="428" width="425" alt="Figure 1 The Box Application" border="0"></A><BR><SPAN class="clsCap">Figure 1</SPAN> <SPAN class="clsCaptxt">The Box Application (Click the image for a smaller view)
</SPAN></DIV><DIV STYLE="width:400px;margin:5px 0px 10px 5px;display:block;" ID="403400"><A HREF="Javascript:ToggleImages('403400', '428425');"><IMG src="fig01.gif" height="403" width="400" alt="Figure 1 The Box Application" border="0"></A><BR><SPAN class="clsCap">Figure 1</SPAN> <SPAN class="clsCaptxt">The Box Application (Click the image for a larger view)
</SPAN></DIV><P>A Windows-based application consists of some standard plumbing, including both an entry point and a message loop, and possibly may also require one or more of the following common application services:
<UL><LI>Processing command-line parameters</LI><LI>Returning an exit code</LI><LI>Application-scope state</LI><LI>Detecting and responding to unhandled exceptions</LI><LI>Managing application lifetime</LI></UL></P><P>Windows Presentation Foundation centralizes both plumbing and services within a single type, System.Windows.Application, which you can use from markup (XAML), code (C# or Visual Basic<SUP class="clsSmall">®</SUP>), or a combination of both (known as markup and codebehind). Application turns out to be so useful that Visual Studio<SUP class="clsSmall">®</SUP> 2005 automatically adds an instance of one to every new .NET Framework 3.0 (formerly known as WinFX<SUP class="clsSmall">®</SUP>) Windows Application project:
<PRE class="clsCode">
&lt;!--App.xaml (markup)--&gt;
&lt;Application 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  x:Class="BoxApplicationWindow.App" 
/&gt;

// App.xaml.cs (codebehind)
public partial class App : Application { ... }</PRE></P><P>If you've programmed with a Windows presentation technology before, such as Windows Forms and Win32<SUP class="clsSmall">®</SUP>, you may be in for a surprise. There isn't a single piece of code that looks remotely like the code used to establish the standard Windows-based application plumbing, including the entry point. This is because the application plumbing is generated for you, which is a result of Visual Studio 2005 configuring your Application markup file as an ApplicationDefinition build action, as shown in <SPAN class="clsFigs" xmlns:user="http://msdn.microsoft.com">Figure&#160;2</SPAN>.</P><DIV STYLE="width:310px;margin:5px 0px 10px 5px;display:block;" ID="267310"><IMG src="fig02.gif" height="267" width="310" alt="Figure 2 Set an Application XAML File" border="0"><BR><SPAN class="clsCap">Figure 2</SPAN> <SPAN class="clsCaptxt">Set an Application XAML File</SPAN></DIV><P>Under the covers, the equivalent of this code is generated:
<PRE class="clsCode">
// App.cs
using System; 

public partial class App : Application 
{
  [STAThread]
  public static void Main() 
  {
    // Initialize and run the application
    App application = new App();
    application.Run();
  }
}
</PRE>What exactly is created doesn't really matter, though, since you neither have to write it nor understand its intricacies. Instead, you are shielded by the most complete application abstraction in a Microsoft presentation technology to date, which you can use to create a running application with only a single piece of markup. All you need to do is use Application's services. For standalone applications, this involves showing a window when an application starts running.</P><DIV style="margin-top:5px;" align="right"><A onclick="OpenMenu(contentbtn, contentmenu);" target="_self" href="#contents" class="clsSmall"><IMG src="/msdnmag/images/top.gif" width="18" height="8" border="0" alt="Back to top" align="bottom" style="margin-left:5px;"></A></DIV><BR><A name="S2"></A><SPAN class="clsSubhead">The Window</SPAN><BR><P>In Windows Presentation Foundation, a window is a Window. A Window has always been the core unit of content hosting in standalone applications. You can add a Window definition to your project in Visual Studio 2005 by choosing Project | Add New Item | WinFX Window, which generates the following:
<PRE class="clsCode">
&lt;!--MainWindow.xaml (markup)--&gt; 
&lt;Window 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  x:Class="BoxApplication.MainWindow"
&lt;/Window&gt;

// MainWindow.xaml.cs (codebehind)
using System.Windows;
public partial class MainWindow : Window { ... }</PRE></P><P>When the window definition is added, Visual Studio 2005 automatically configures the markup file's build type to Page. When built, the markup is turned into a special type of resource that can be identified uniquely by a Uniform Resource Identifier (URI). Essentially, this enables Windows Presentation Foundation to load a Window declaratively from a URI, and you can use this capability to specify a window to be automatically opened when an application starts. You do this by setting the Application.StartupUri attribute in markup, as shown here:
<PRE class="clsCode">
  &lt;!--App.xaml (markup)--&gt;
  &lt;Application ... StartupUri="MainWindow.xaml"  /&gt;
</PRE>This creates and shows a window like the one in <SPAN class="clsFigs" xmlns:user="http://msdn.microsoft.com">Figure&#160;3</SPAN>. Like all windows, Windows Presentation Foundation windows contain a client area (this houses Windows Presentation Foundation content and controls) and a non-client area (a border, a title bar, and the various adornments associated with these).</P><DIV STYLE="width:357px;margin:5px 0px 10px 5px;display:block;" ID="217357"><IMG src="fig03.gif" height="217" width="357" alt="Figure 3 A Window and Its Parts" border="0"><BR><SPAN class="clsCap">Figure 3</SPAN> <SPAN class="clsCaptxt">A Window and Its Parts</SPAN></DIV><P>The window that results from Application.StartupUri is modeless, which means it doesn't prevent users from using other windows in the application. Since you haven't created any other windows yet, this isn't so exciting. However, if you need to show other modeless windows, as you'll probably need to do in any nontrivial application, simply call Window.Show:
<PRE class="clsCode">
// MainWindow.xaml.cs (codebehind)
public partial class MainWindow : Window 
{ 
  void helpContentsMenuItem_Click(object sender, RoutedEventArgs e) 
  {
    HelpWindow window = new HelpWindow();
    window.Owner = this; // Ensure window always appears above us
    window.Show();
  }
  ... 
 }</PRE></P><P>Windows Presentation Foundation also supports showing a window modally, which means the window prevents other windows in an application from being used. Modal windows are typically (but not always) used as dialogs, to collect data needed for completing a task such as creating a new order. To show a window modally in Windows Presentation Foundation, call Window.ShowDialog (see <A class="clsFigs" target="_self" href="default.aspx?loc=&amp;fig=true#fig4" onclick="OpenUrl('default.aspx?loc=&amp;fig=true#fig4'); return false;" xmlns:user="http://msdn.microsoft.com">Figure&#160;4</A>).</P><P>The Window class also supports typical dialog behavior, which allows users to accept or cancel a dialog and have that choice returned to the calling code for appropriate processing.</P><P>Message boxes are a special type of dialog for displaying information to users, or asking them questions, and is supported in Windows Presentation Foundation with the MessageBox type:
<PRE class="clsCode">
// MainWindow.xaml.cs (codebehind)
public partial class MainWindow : Window 
{ 
  void aboutMenuItem_Click(object sender, RoutedEventArgs e) 
  {
    MessageBox.Show("Box Application, Version 1.0");
  }
  ... 
}</PRE></P><P>Message boxes, dialogs, windows, and applications form the core of the standalone, menu-driven application development model. And these have been supported by previous presentation technologies for a long time now. However, Windows Presentation Foundation extends these with hyperlink-driven navigation support that begins with the fundamental unit of navigation content—the page.</P><DIV style="margin-top:5px;" align="right"><A onclick="OpenMenu(contentbtn, contentmenu);" target="_self" href="#contents" class="clsSmall"><IMG src="/msdnmag/images/top.gif" width="18" height="8" border="0" alt="Back to top" align="bottom" style="margin-left:5px;"></A></DIV><BR><A name="S3"></A><SPAN class="clsSubhead">The Page Class</SPAN><BR><P>Page is the Windows Presentation Foundation analog of the HTML Web page, which helped popularize the Web. As I mentioned, Windows Presentation Foundation supports hyperlink-driven navigation in both standalone and browser applications. The content cornerstone of the hyperlink-driven navigation experience in Windows Presentation Foundation is the Page.</P><P>You add a markup and codebehind Page definition to your project in Visual Studio 2005 by choosing Project | Add New File | WinFX Page. This generates code resembling what's shown in <A class="clsFigs" target="_self" href="default.aspx?loc=&amp;fig=true#fig5" onclick="OpenUrl('default.aspx?loc=&amp;fig=true#fig5'); return false;" xmlns:user="http://msdn.microsoft.com">Figure&#160;5</A>.</P><P>The Page markup file is configured as a Page build item. As with Window, this is done so it can be loaded from a URI, which means you can configure Application.StartupUri to automatically load a page when an application starts:
<PRE class="clsCode">
&lt;!--App.xaml (markup)--&gt;
&lt;Application ... StartupUri="HomePage.xaml" /&gt;</PRE></P><P>Because the Page class is not a window, and doesn't derive from Window, it can't host itself. Fortunately, the Application class is smart enough to detect when a particular page is set as the StartupUri. If so, Application creates a window in which to host the page.</P><DIV style="margin-top:5px;" align="right"><A onclick="OpenMenu(contentbtn, contentmenu);" target="_self" href="#contents" class="clsSmall"><IMG src="/msdnmag/images/top.gif" width="18" height="8" border="0" alt="Back to top" align="bottom" style="margin-left:5px;"></A></DIV><BR><A name="S4"></A><SPAN class="clsSubhead">Hyperlink Class</SPAN><BR><P>Any nontrivial hyperlink-driven application will have more than one XAML page, and you'll need to give your users a way to navigate between these pages. You can probably guess that Windows Presentation Foundation enables hyperlink-driven navigation with hyperlinks. You can add hyperlinks to your pages like so:
<PRE class="clsCode">
&lt;!--HomePage.xaml (markup)--&gt;
&lt;Page ... &gt;
  ...
      &lt;Hyperlink NavigateUri=          "OrderingGuidelinesPage.xaml"&gt;
    Ordering Guidelines
  &lt;/Hyperlink&gt;
  ...
&lt;/Page&gt;
</PRE>This hyperlink is configured to navigate to a XAML page using the same fundamental programming model as HTML HREFs. You specify a URI to navigate to (in this case, OrderingGuidelinesPage.xaml) and the text that users will see and click on to initiate navigation (in this example, "Ordering Guidelines").</P><P>Since so much browsable content is located in HTML-based Web pages, it's nice that Windows Presentation Foundation and Hyperlink let you seamlessly navigate to Web-based content. For example, the ordering guidelines already exist on the Box Application's Web site so, rather than replicating them as XAML pages within the application, you can simply change the value of the NavigateUri property:
<PRE class="clsCode">
&lt;!--HomePage.xaml (markup)--&gt;
&lt;Page ... &gt;
  ...
  &lt;Hyperlink NavigateUri="OrderingGuidelinesPage.html"&gt;
    Ordering Guidelines
  &lt;/Hyperlink&gt;
  ...
&lt;/Page&gt;
</PRE></P><DIV style="margin-top:5px;" align="right"><A onclick="OpenMenu(contentbtn, contentmenu);" target="_self" href="#contents" class="clsSmall"><IMG src="/msdnmag/images/top.gif" width="18" height="8" border="0" alt="Back to top" align="bottom" style="margin-left:5px;"></A></DIV><BR><A name="S5"></A><SPAN class="clsSubhead">NavigationWindow</SPAN><BR><P>At this point, you might be wondering one of several things. Since Page is not a window, where did the window that's hosting it come from? When a hyperlink is clicked, what actually handles the navigation? And how is HTML Web page content displayed from a Windows Presentation Foundation application? All of these things are taken care of by NavigationWindow.</P><P>When you set Application.StartupUri to either a XAML or HTML page, Application (knowing that neither of these can provide its own window) creates an instance of NavigationWindow to host them. NavigationWindow derives from Window and extends its visual appearance to look a little like a browser, as you can see in <SPAN class="clsFigs" xmlns:user="http://msdn.microsoft.com">Figure&#160;6</SPAN>.</P><DIV STYLE="width:311px;margin:5px 0px 10px 5px;display:block;" ID="234311"><IMG src="fig06.gif" height="234" width="311" alt="Figure 6 Created By NavigationWindow" border="0"><BR><SPAN class="clsCap">Figure 6</SPAN> <SPAN class="clsCaptxt">Created By NavigationWindow</SPAN></DIV><P>When a user clicks a hyperlink that appears on a XAML page, Hyperlink asks NavigationWindow to navigate to the specified URI. NavigationWindow proceeds to load the page that is located at the URI, thus hosting it. The URI location from which the page was loaded is stored in the NavigationWindow.Source property, while the loaded page content is available from the NavigationWindow.Content property.</P><P>When content changes, navigation is considered to have taken place and the previous content is added to the navigation history. This, too, is managed by NavigationWindow. The navigation UI provides two buttons and dropdown lists for navigation. Note that you are not limited to NavigationWindow's default chrome. Using Windows Presentation Foundation's support for styles, you can easily create your own navigation UI.</P><P>So far, I've shown you how to use markup for configuring the URIs that hyperlinks should navigate to. Sometimes, though, you can't determine your navigation declaratively. For example, if you want to view an order, you need to create an instance of Page and pass it the order you want to view. This can't be done declaratively. Instead, you need to use code, as shown in <A class="clsFigs" target="_self" href="default.aspx?loc=&amp;fig=true#fig7" onclick="OpenUrl('default.aspx?loc=&amp;fig=true#fig7'); return false;" xmlns:user="http://msdn.microsoft.com">Figure&#160;7</A>.</P><P>When the hyperlink is clicked, its Click event handler gets the order that is currently selected, passes it to ViewOrderPage during instantiation, and calls its host NavigationWindow's Navigate method, which then navigates to the page as an object, rather than as a URI.</P><P>You may find it odd to have to acquire a reference to the host NavigationWindow. This is necessary because Page does not have explicit knowledge about what is actually hosting it. Page can determine the host using its Parent property, but Parent returns a reference to a DependencyObject, rather than a strongly typed reference to a particular host type. Thus, casting Parent to a specific type implies that Page knows what can host it. But, as you'll discover, Page can have different types of hosts. Consequently, if you intend for your pages to be hosted by multiple types of hosts, you need a host-independent way of programmatically performing navigation.</P><DIV style="margin-top:5px;" align="right"><A onclick="OpenMenu(contentbtn, contentmenu);" target="_self" href="#contents" class="clsSmall"><IMG src="/msdnmag/images/top.gif" width="18" height="8" border="0" alt="Back to top" align="bottom" style="margin-left:5px;"></A></DIV><BR><A name="S6"></A><SPAN class="clsSubhead">NavigationService</SPAN><BR><P>In Windows Presentation Foundation, independence between a page and a page's host is established by NavigationService, which implements the basic machinery of a navigation engine including navigation, navigation history, navigation lifetime, content, and finding a navigation service for a piece of content. <A class="clsFigs" target="_self" href="default.aspx?loc=&amp;fig=true#fig8" onclick="OpenUrl('default.aspx?loc=&amp;fig=true#fig8'); return false;" xmlns:user="http://msdn.microsoft.com">Figure&#160;8</A> shows the essential members of the NavigationService type.NavigationWindow doesn't actually implement its own navigation engine; it uses its own instance of NavigationService. With that in mind, Page can actually get a reference to the NavigationService of the NavigationWindow that hosts it using GetNavigationService:
<PRE class="clsCode">
// HomePage.xaml.cs (codebehind)
public partial class HomePage : Page 
{ 
  void viewHyperlink_Click(object sender, RoutedEventArgs e) 
  {
    // View Order
    ViewOrderPage page = new ViewOrderPage(GetSelectedOrder());
    NavigationService ns = 
      NavigationService.GetNavigationService(this);
    ns.Navigate(page);
  }

  Order GetSelectedOrder() { ... }
  ...
}
</PRE>This lets Page do navigation without any specific knowledge of its host. This requirement is so common that Page provides a special helper property, NavigationService, which has the same effect:
<PRE class="clsCode">
// HomePage.xaml.cs (code-behind)
public partial class HomePage : Page 
{ 
  void viewHyperlink_Click(object sender, RoutedEventArgs e) 
  {
    // View Order
    ViewOrderPage page = new ViewOrderPage(GetSelectedOrder());
    this.NavigationService.Navigate(page);
  }
  
  Order GetSelectedOrder () { ... }
  ...
}</PRE></P><P><SPAN class="clsFigs" xmlns:user="http://msdn.microsoft.com">Figure&#160;9</SPAN> illustrates the relationship between NavigationWindow, NavigationService, and Page. As you can see, NavigationWindow re-implements its NavigationService's Content property. NavigationWindow re-implements the majority of NavigationService's members in this way, and even adds some more. For example, you can enumerate the content in back and forward navigation history via the BackStack and ForwardStack properties, respectively.</P><DIV STYLE="width:123px;float:right;margin:5px 0px 10px 5px;display:block;" ID="124123"><IMG src="fig09.gif" height="124" width="123" alt="Figure 9 The Relationship" border="0"><BR><SPAN class="clsCap">Figure 9</SPAN> <SPAN class="clsCaptxt">The Relationship</SPAN></DIV><P>Unfortunately, you can't create your own custom type that aggregates NavigationService (even though it is a public type, it has an internal constructor that consequently prevents instantiation). Instead, you have to rely on one of three Windows Presentation Foundation NavigationService aggregators to host content. Collectively, these are known as navigators and include NavigationWindow, Frame, and browsers (only Internet Explorer<SUP class="clsSmall">®</SUP> versions 6 and 7 for Windows Presentation Foundation version 1.0). When a page is coded to use its own NavigationService property, it can be hosted in all three without change, as <SPAN class="clsFigs" xmlns:user="http://msdn.microsoft.com">Figure&#160;10</SPAN> illustrates.</P><DIV STYLE="width:261px;margin:5px 0px 10px 5px;display:block;" ID="99261"><IMG src="fig10.gif" height="99" width="261" alt="Figure 10 Using Code for Navigation" border="0"><BR><SPAN class="clsCap">Figure 10</SPAN> <SPAN class="clsCaptxt">Using Code for Navigation</SPAN></DIV><P>Perhaps most exciting is that you can take a page hosted within a single standalone application and suddenly you're able to host it anywhere using Internet Explorer.</P><DIV style="margin-top:5px;" align="right"><A onclick="OpenMenu(contentbtn, contentmenu);" target="_self" href="#contents" class="clsSmall"><IMG src="/msdnmag/images/top.gif" width="18" height="8" border="0" alt="Back to top" align="bottom" style="margin-left:5px;"></A></DIV><BR><A name="S7"></A><SPAN class="clsSubhead">XAML Browser Applications </SPAN><BR><P>NavigationWindow, Page, and Hyperlink provide a nice way to offer browser-style user experiences in a standalone application. In one sense, NavigationWindow is a browser, though without all the frills built into today's browsers like favorites, tabbed browsing, and the like. Since most users are browser savvy, many will feel more comfortable with an application that provides the same level of capability or, indeed, integrates with browsers. If your application will benefit from a browser-hosted and hyperlink-driven environment, Windows Presentation Foundation XAML Browser Applications (XBAPs) are the way to go.</P><P>To create an XBAP version of the sample application, create a new .NET Framework 3.0 Web Browser Application in Visual Studio 2005, copy the files from the NavigationWindow version of the sample (excluding the application definition), and voilà. The resulting application will run hosted by Internet Explorer, as shown in <SPAN class="clsFigs" xmlns:user="http://msdn.microsoft.com">Figure&#160;11</SPAN>.</P><DIV STYLE="width:400px;margin:5px 0px 10px 5px;display:block;" ID="298400"><IMG src="fig11.gif" height="298" width="400" alt="Figure 11 App Hosted by Internet Explorer" border="0"><BR><SPAN class="clsCap">Figure 11</SPAN> <SPAN class="clsCaptxt">App Hosted by Internet Explorer</SPAN></DIV><P>XBAPs can also be published to and launched from Web servers, on either the intranet or the Internet. This is made possible through ClickOnce Deployment, which is included with the .NET Framework 3.0. To use ClickOnce, MSBuild generates the executable that users ultimately run, as well as two manifest files that ClickOnce requires for downloading and launching the executable. One of these is known as the application manifest; it has the .xbap file extension and is what users actually browse to when they want to launch an XBAP. Note that the launch process is seamless to the user—the experience of browsing to an XBAP application is like browsing to any application running in a browser.</P><P>When an application can be launched from the Internet, security is a significant factor. For this reason, XBAPs are not installed. Furthermore, XBAPs leverage the .NET Framework's Code Access Security (CAS) to protect users from malicious code through the use of an enforced security sandbox—XBAPs can only do things that are allowed for apps launched from the Internet zone, a restricted set of operations. Furthermore, if an XBAP attempts to execute functionality that exceeds what is enabled by the Internet zone, an exception is thrown and the application stops executing.</P><P>Internet zone permissions prevent a variety of capabilities in Windows Presentation Foundation version 1.0, including showing windows, using the SaveFileDialog, registry access, and accessing the HTML Document Object Model (DOM) via script. While you need to sacrifice features like these to enjoy the benefits of CAS-secured XBAP applications, you still have most of what is really cool about Windows Presentation Foundation at your command.</P><DIV style="margin-top:5px;" align="right"><A onclick="OpenMenu(contentbtn, contentmenu);" target="_self" href="#contents" class="clsSmall"><IMG src="/msdnmag/images/top.gif" width="18" height="8" border="0" alt="Back to top" align="bottom" style="margin-left:5px;"></A></DIV><BR><A name="S8"></A><SPAN class="clsSubhead">Frame</SPAN><BR><P>Frame embeds browser-style user experiences into content that may be hosted by other navigators (standalone or browser-based, menu- or hyperlink-driven). Given its flexibility, you should be guided by your intended user experience when determining how to use it.</P><P>Standalone, menu-driven applications don't provide the best model for navigating through document-style content, such as a help file. A hyperlink-driven approach may be more suitable and links can be easily embedded into a standalone application's window, as shown in <SPAN class="clsFigs" xmlns:user="http://msdn.microsoft.com">Figure&#160;12</SPAN>. This is enabled with the following markup:
<PRE class="clsCode">
    &lt;!--HelpDialog.xaml (markup)--&gt;
&lt;Window ... &gt;
    &lt;DockPanel&gt;
        &lt;TextBlock 
          Padding="20,20,20,20" 
          DockPanel.Dock="Top" 
          TextWrapping="Wrap" 
          FontSize="15" 
          FontWeight="Bold" &gt;
            Box Application Help
        &lt;/TextBlock&gt;
        &lt;Frame Padding="20,0,20,0"           Source="HelpPageContents.xaml" /&gt;
    &lt;/DockPanel&gt;
&lt;/Window&gt;
</PRE>Alternatively, Frame can be used much like the HTML IFRAME element by being hosted within the content of a Windows Presentation Foundation page, as shown in <SPAN class="clsFigs" xmlns:user="http://msdn.microsoft.com">Figure&#160;13</SPAN>. The markup will look like this:
<PRE class="clsCode">
 &lt;!--HelpPage.xaml (markup)--&gt;
 &lt;Page ... &gt;
     &lt;DockPanel&gt;
         &lt;TextBlock 
           Padding="20,20,20,20" 
           DockPanel.Dock="Top" 
           TextWrapping="Wrap" 
           FontSize="15" 
           FontWeight="Bold" &gt;
             Box Application Help
         &lt;/TextBlock&gt;
         &lt;Frame ... Source="HelpPageContents.xaml" /&gt;
     &lt;/DockPanel&gt;
 &lt;/Page&gt;</PRE></P><DIV STYLE="width:436px;display:none;" ID="220436"><A HREF="Javascript:ToggleImages('220436', '202400');"><IMG src="fig12_L.gif" height="220" width="436" alt="Figure 12 Browsable Content in a Standalone Window" border="0"></A><BR><SPAN class="clsCap">Figure 12</SPAN> <SPAN class="clsCaptxt">Browsable Content in a Standalone Window (Click the image for a smaller view)
</SPAN></DIV><DIV STYLE="width:400px;margin:5px 0px 10px 5px;display:block;" ID="202400"><A HREF="Javascript:ToggleImages('202400', '220436');"><IMG src="fig12.gif" height="202" width="400" alt="Figure 12 Browsable Content in a Standalone Window" border="0"></A><BR><SPAN class="clsCap">Figure 12</SPAN> <SPAN class="clsCaptxt">Browsable Content in a Standalone Window (Click the image for a larger view)
</SPAN></DIV><P>By default, when a frame is hosted within content that is itself directly or indirectly hosted by another navigator, the frame uses the navigation service that is managed by the parent navigator. This means that the frame's navigation history is really stored in its parent navigator's navigation history, along with the parent navigator's own navigation history. Thus, the frame's navigation history must be navigated all the way back or forward before the parent navigator's navigation history can be navigated. However, this is not a bad thing if your parent navigator hosts content that can be shared across the one or more pages. This is somewhat analogous to ASP.NET's master/child content.</P><DIV STYLE="width:443px;display:none;" ID="304443"><A HREF="Javascript:ToggleImages('304443', '274400');"><IMG src="fig13_L.gif" height="304" width="443" alt="Figure 13 Frame Hosted within Content" border="0"></A><BR><SPAN class="clsCap">Figure 13</SPAN> <SPAN class="clsCaptxt">Frame Hosted within Content (Click the image for a smaller view)
</SPAN></DIV><DIV STYLE="width:400px;margin:5px 0px 10px 5px;display:block;" ID="274400"><A HREF="Javascript:ToggleImages('274400', '304443');"><IMG src="fig13.gif" height="274" width="400" alt="Figure 13 Frame Hosted within Content" border="0"></A><BR><SPAN class="clsCap">Figure 13</SPAN> <SPAN class="clsCaptxt">Frame Hosted within Content (Click the image for a larger view)
</SPAN></DIV><P>On the other hand, such navigation can be painful for users when the pages  in a frame make up a single logical set of content—for instance, a help file rather than one or more help pages. Once a user goes to Help and navigates to the appropriate help page, he is unlikely to want to navigate back through all the help pages he browsed; instead, he'll probably want to go straight back to the previous parent page. In this situation, you can instruct a frame to use its own navigation history by setting its JournalOwnership property like so:
<PRE class="clsCode">
&lt;Page ... &gt;
  ...
  &lt;Frame ... JournalOwnership="OwnsJournal" /&gt;
  ...
&lt;/Page&gt;
</PRE>JournalOwnership is a property you set to determine which "journal" a frame will use (the internal Journal type encapsulates navigation history in Windows Presentation Foundation), and can be one of the JournalOwnership enumeration values:
<PRE class="clsCode">
enum JournalOwnership 
{
  Automatic,        // "UsesParentJournal" if hosted by Frame or 
                    // NavigationWindow, "OwnsJournal" otherwise. 
                    // (default)
  OwnsJournal,      // Frame manages navigation history
  UsesParentJournal // Frame's host manages navigation history
}</PRE></P><P>When Frame has its own navigation history, it displays its own navigation user interface to visually reinforce the distinction, as shown in <SPAN class="clsFigs" xmlns:user="http://msdn.microsoft.com">Figure&#160;14</SPAN>.</P>&gt;        <DIV STYLE="width:441px;display:none;" ID="324441"><A HREF="Javascript:ToggleImages('324441', '294400');"><IMG src="fig14_L.gif" height="324" width="441" alt="Figure 14 Frame with Its Own Navigation History" border="0"></A><BR><SPAN class="clsCap">Figure 14</SPAN> <SPAN class="clsCaptxt">Frame with Its Own Navigation History (Click the image for a smaller view)
</SPAN></DIV><DIV STYLE="width:400px;margin:5px 0px 10px 5px;display:block;" ID="294400"><A HREF="Javascript:ToggleImages('294400', '324441');"><IMG src="fig14.gif" height="294" width="400" alt="Figure 14 Frame with Its Own Navigation History" border="0"></A><BR><SPAN class="clsCap">Figure 14</SPAN> <SPAN class="clsCaptxt">Frame with Its Own Navigation History (Click the image for a larger view)
</SPAN></DIV><DIV style="margin-top:5px;" align="right"><A onclick="OpenMenu(contentbtn, contentmenu);" target="_self" href="#contents" class="clsSmall"><IMG src="/msdnmag/images/top.gif" width="18" height="8" border="0" alt="Back to top" align="bottom" style="margin-left:5px;"></A></DIV><BR><A name="S9"></A><SPAN class="clsSubhead">Windows Presentation Foundation Resources</SPAN><BR><P>So far, I've discussed pages that are embedded into an application assembly. However, content can be loaded from a variety of locations—it can be embedded in the same assembly as the code that uses it, it can be embedded in a referenced assembly, or it can consist of loose content files that are not embedded into any assembly at all. Loose content itself can be located on the local disk, a file share, or even a Web site. And, whether a piece of content is embedded or loose, it doesn't have to be a page; content can include a variety of media, such as images, video, and audio. Finally, content doesn't even have to belong to a particular application. HTML pages that belong to other Web applications are also fair game.</P><P>This flexibility allows developers to more easily deal with a variety of real-world scenarios. Sometimes content is specific enough to an application, and an application is so dependent on this content, that it makes the most sense to deploy the content with the application by embedding it right in the assembly. Some applications have content that changes regularly enough that constantly rebuilding assemblies to redeploy new content is impractical, hence the support for loose content (and since loose content can reside in a common location, Internet- and intranet-based XBAP applications can avoid downloading assemblies that aren't needed). Furthermore, sometimes content is shared by more than one application, but there still needs to be a guarantee that it is available.</P><P>To enable this flexibility, Windows Presentation Foundation incorporates a special mechanism for uniquely identifying and loading resources. It doesn't matter where content resides or whether the content is embedded or loose. The foundation of this mechanism is the Pack URI scheme, which is an extensible scheme for identifying application resources with unique URIs. Windows Presentation Foundation uses the Pack URI scheme to support several different, but common, scenarios for loading content.</P><P>Throughout this article, the sample code has used Pack URIs to identify and load windows and pages, whenever Application.StartupUri and Hyperlink.NavigateUri have been used:
<PRE class="clsCode">
&lt;!--App.xaml (markup)--&gt;
&lt;Application ... StartupUri="HomePage.xaml" /&gt;
</PRE>This example uses the relative version of the Pack URI, which is a nice simplification that allows you to type less. The absolute version of this Pack URI is shown here:
<PRE class="clsCode">
pack://application:,,,/HomePage.xaml</PRE></P><P>The absolute Pack URI is composed of three key parts: the scheme (pack://), the authority (application:), and the path (,/HomePage.xaml). The authority describes the type of container that has a resource, while the path describes the location of that resource relative to the container. An "application:" container is really an assembly, and the path is the location of a resource relative to the root of the assembly.</P><P>Whether an absolute or relative Pack URI is used, the content that it refers to can either be embedded within an assembly or exist as a loose XAML file that is stored in a location relative to the application executable. For a loose XAML page that is in the same folder as the application executable, the Pack URI looks like this:
<PRE class="clsCode">
pack://application:,,,/HomePage.xaml</PRE></P><P>Interestingly, the Pack URI for the loose XAML file is the same as the Pack URI for an embedded file of the same name. To distinguish between the two, Windows Presentation Foundation uses a basic resolution mechanism that first looks in the assembly for an embedded resource before looking for a loose resource.</P><P>A Pack URI can also be used to access Windows Presentation Foundation resources that are embedded in referenced assemblies, although with a slightly different syntax:
<PRE class="clsCode">
pack://application:,,,/BoxApplicationLibrary;component/HomePage.xaml
</PRE>The relative Pack URI equivalent is:
<PRE class="clsCode">
/BoxApplicationLibrary;component/HomePage.xaml</PRE></P><P>The Pack URI allows you to both locate and load a resource from the application's site of origin, that is, the location from which it is launched. For XBAP applications launched from a Web server, keeping content current is as simple as dropping new content onto the application's publish location. To access loose resources located at the site of origin, you need to use another special type of Pack URI that can only be used absolutely:
<PRE class="clsCode">
pack://siteoforigin:,,,/HomePage.xaml</PRE></P><P>For any page (embedded or loose), you can enable navigation to a fragment on the page. This is just like Web-style fragment navigation. You define a fragment on a page by giving a XAML element a Name attribute, like so:
<PRE class="clsCode">
&lt;Page ... &gt;
   &lt;TextBlock Name="Paragraph1" TextWrapping="Wrap"&gt;
     ...
   &lt;/TextBlock&gt;
&lt;/Page&gt;
</PRE>To navigate to a page fragment, you use yet another special Pack URI, by suffixing the page URI with "#XAMLElementName", like this:
<PRE class="clsCode">
HelpPage3.xaml#Paragraph3</PRE></P><DIV style="margin-top:5px;" align="right"><A onclick="OpenMenu(contentbtn, contentmenu);" target="_self" href="#contents" class="clsSmall"><IMG src="/msdnmag/images/top.gif" width="18" height="8" border="0" alt="Back to top" align="bottom" style="margin-left:5px;"></A></DIV><BR><A name="S10"></A><SPAN class="clsSubhead">PageFunction</SPAN><BR><P>With content coming from a variety of locations, and hyperlink-driven applications allowing navigation to any number of other locations, completing a task can be difficult. This is because hyperlink-driven applications can't easily constrain users to navigating to specific pages. No matter how many hyperlinks an application provides, users can still go anywhere they want using the browser's address bar. As a result, a user can leave the page that initiated processing of a task without knowing whether or not the task was completed. In the Web world, there are plenty of tricks to create pseudo-dialog style behaviors for Web pages, relying on session state and the like. Unfortunately, this requires a lot of overhead. Dialogs do solve the problem, but for security reasons Window cannot be instantiated from applications, such as XBAPs, that run within Internet Zone partial trust.</P><P>Fortunately, Windows Presentation Foundation supports modal dialog-style mechanics with page functions. These are encapsulated as the generic PageFunction type, which derives indirectly from Page. Consequently, a PageFunction looks much like a Page, and is also built similarly, as you can see in <A class="clsFigs" target="_self" href="default.aspx?loc=&amp;fig=true#fig15" onclick="OpenUrl('default.aspx?loc=&amp;fig=true#fig15'); return false;" xmlns:user="http://msdn.microsoft.com">Figure&#160;15</A>.</P><P>The purpose of this particular page function is to collect new order information, which is encapsulated by Order. Because tasks typically operate over data in this way, PageFunction is generic and is declared to operate over a specific piece of data, hence the special x:TypeArguments attribute for markup. If the value of x:TypeArguments and the generic PageFunction's type argument don't match, you will get a compilation error.</P><P>To call a PageFunction, the calling page needs to instantiate a PageFunction and manually navigate to it:
<PRE class="clsCode">
// HomePage.cs (codebehind)
public partial class HomePage : Page 
{
  void orderHyperlink_Click(object sender, RoutedEventArgs e) 
  {
    OrderABoxPageFunction pageFunction = new OrderABoxPageFunction();
    pageFunction.Return += new ReturnEventHandler&lt;Order&gt;(
      OrderABoxPageFunction_Returned);
    this.NavigationService.Navigate(pageFunction);
  }
  ...
}
</PRE>Next, the PageFunction needs to allow a user to complete the page before returning the result to the calling page:
<PRE class="clsCode">
// OrderABoxPageFunction.cs (codebehind)
public partial class OrderABoxPageFunction: 
  PageFunction&lt;Order&gt; 
{
  void orderHyperlink_Click(object sender, RoutedEventArgs e) 
  {
    // Return order
    this.OnReturn(new ReturnEventArgs&lt;Order&gt;(this.order));
  }
  void cancelHyperlink_Click(object sender, RoutedEventArgs e) 
  {
    // Cancel order
    this.OnReturn(null);
  }
  ...
}</PRE></P><P>PageFunction.OnReturn is called to return, passing an instance of the generic ReturnEventArgs. If the task is accepted, this contains an instance of the type over which the PageFunction operates. Otherwise, it's null. To detect PageFunction return, and to acquire the ReturnEventArgs and its data, the calling page needs to handle PageFunction.Returned, as shown in <A class="clsFigs" target="_self" href="default.aspx?loc=&amp;fig=true#fig16" onclick="OpenUrl('default.aspx?loc=&amp;fig=true#fig16'); return false;" xmlns:user="http://msdn.microsoft.com">Figure&#160;16</A>. The returned data is available from the Result property of the Returned event handler's ReturnEventArgs.</P><P>You'll likely want to ensure a PageFunction is removed from navigation history after the task completes. This requires only a simple configuration:
<PRE class="clsCode">
&lt;!--OrderABoxPageFunction.xaml (markup) --&gt;
&lt;PageFunction RemoveFromJournal="True" ... &gt;
  ...
  &lt;!--Content--&gt;
  ...
&lt;PageFunction&gt;
</PRE>By removing the page function from navigation history, you prevent users from navigating back to the page function. This is important because users may otherwise be able to edit data that has changed since the last time a page function was accessed, creating the potential for inconsistencies in the data.</P><P>Note that a task can be composed from more than one page of content, which is common for wizard-style user experiences. PageFunction is equally capable in this situation, since it is possible to use the same techniques for operating over one page function as for operating over multiple page functions.</P><DIV style="margin-top:5px;" align="right"><A onclick="OpenMenu(contentbtn, contentmenu);" target="_self" href="#contents" class="clsSmall"><IMG src="/msdnmag/images/top.gif" width="18" height="8" border="0" alt="Back to top" align="bottom" style="margin-left:5px;"></A></DIV><BR><A name="S11"></A><SPAN class="clsSubhead">Where Are We?</SPAN><BR><P>The Windows Presentation Foundation application model is extremely flexible. At its most basic, it enables both standalone and browser-hosted applications—both of which support menu-driven and hyperlink-driven navigation. Furthermore, application content can be packaged in either the application's assembly, in a referenced assembly, or as loose files located in a number of places. All in all, the type of user experience you create within the Windows Presentation Foundation application model is limited only by what you choose to do.
        </P><DIV style="margin-top:5px;" align="right"><A onclick="OpenMenu(contentbtn, contentmenu);" target="_self" href="#contents" class="clsSmall"><IMG src="/msdnmag/images/top.gif" width="18" height="8" border="0" alt="Back to top" align="bottom" style="margin-left:5px;"></A></DIV><BR><P>
        For more information, see the <A href="http://msdn2.microsoft.com/ms754130.aspx">Windows Presentation Foundation SDK</A>.
        </P><BR><table border="0" width="100%" cellpadding="5" cellspacing="0"><tr><td valign="top"><img src="/msdn-online/shared/graphics/icodownl.gif" alt="Download Image" width="16" hspace="5" height="16" style="border:0px;"><b>
                    NEW:
                    <a href="/msdnmag/code/?url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx">Explore</a>
                    the sample code online!
                  </b>
                  - or -
                <b>Code download available at:
              </b><a href="http://download.microsoft.com/download/f/2/7/f279e71e-efb0-4155-873d-5554a0608523/WPF2006_10.exe">WPF2006_10.exe</a> (214KB)
            </td></tr></table></DIV><HR><SPAN class="clsBio"><B>Michael Weinhardt</B> is a programmer/writer at Microsoft, working on the Windows Client SDK. Michael has coauthored a variety of articles, contributed to the "Wonders of Windows Forms" column at MSDN Online, reviewed several Windows technology books, and coauthored Windows Forms 2.0 Programming (Addison-Wesley Professional, 2006).
        </SPAN><BR><HR><A href="/msdnmag/subscribe.aspx"><IMG height="44" width="121" src="/msdnmag/images/promo/subbutton.gif" alt="Subscribe" border="0" style="margin:0px 0px 0px 0px;vertical-align:top;align:left;"></A>
   From the <A href="/msdnmag/issues/06/10/default.aspx">October 2006</A> issue of <A href="/msdnmag/default.aspx">MSDN Magazine</A>.
<HR><a name="bottom"></a><A href="#top" class="clsSmall" style="float:left;"><IMG src="/msdnmag/images/top.gif" width="18" height="8" border="0" alt="Back to top">Back to top
</A><SPAN style="float:right;"><B>QJ: </B>061003</SPAN><BR><HR><SPAN class="clsSmall">© 2007 Microsoft Corporation and CMP Media, LLC. All rights reserved; reproduction in part or in whole without permission is prohibited.</SPAN></TD><TD width="150"><a name="bottom"></a><IFRAME src="http://www.ddj.com/msdnads/msdn_premium.jhtml" scrolling="no" frameborder="0" width="145" height="2000"></IFRAME></TD></TR></TABLE><table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td class="clsDocBody">
            <div>
                <span class="clsSubhead">
                    </span>
            </div>
            <div>
            <!--  -->
                <UL></UL>
            </div>
        </td>
        <td width="150">
        </td>
    </tr>
</table>


                
<TABLE cellpadding='0' cellspacing='0' border='0' style='width:100%'>
<TR>
<TD style='width:500' nowrap>
</TD>
</TR>
<TR>
<TD>
<IFRAME id='frmRatings' src='/msdn-online/shared/components/ratings/ratings.aspx?ContentID=25061003&mnp2=1&Print=default.aspx?print=true&HideDiscuss=1' frameborder='0' scrolling='no' width='100%' height='250' vspace='0' hspace='0' ></IFRAME>
</TD></TR></TABLE>








	<!----------------->
	<!--END_CONTENT-->
	<!----------------->
		
					</td>
		
				</tr>
			</table>
		<!--NOINDEX_START--><br clear="all" style="line-height: 1px; overflow: hidden" /><table id="msviFooter" width="100%" cellpadding="0" cellspacing="0"><tr valign="bottom"><td id="msviFooter2" style="filter:progid:DXImageTransform.Microsoft.Gradient(startColorStr='#FFFFFF', endColorStr='#669AFF', gradientType='1')"><div id="msviLocalFooter"><nobr><a href="http://go.microsoft.com/?linkid=317027">Manage Your Profile</a> |</nobr><wbr /><nobr><a href="/isapi/gomscom.asp?TARGET=/legal/" target="_parent">Legal</a> |</nobr><wbr /><nobr><a href="http://go.microsoft.com/?linkid=2028439" target="_parent">Contact us</a> |</nobr><wbr /><nobr><a href="/flash/" target="_parent">MSDN Flash Newsletter</a></nobr></div><div id="msviGlobalFooter"><span dir="ltr">&#169; 2007 Microsoft Corporation. All rights reserved.&nbsp;</span><nobr><a href="http://www.microsoft.com/info/cpyright.mspx">Terms of Use</a> |</nobr><wbr /><nobr><a href="/library/toolbar/3.0/trademarks/en-us.mspx">Trademarks</a> |</nobr><wbr /><nobr><a href="http://www.microsoft.com/info/privacy.mspx">Privacy Statement</a></nobr></div></td><td bgcolor="#669AFF" width="105"><img src="/library/toolbar/3.0/text.aspx?t=TQ%3d%3d&amp;f=FFFFFF&amp;b=669AFF&amp;font=Microsoft+Logo+95%2c+13pt&amp;w=105&amp;h=29&amp;a=0&amp;l=0&amp;v=0&amp;c=eAdQAhJgwJihw2DKZGDGx4FnKIM%3d" width="105" height="29" alt="Microsoft" title="" border="0" /></td></tr></table><script language="javascript">var msviFooter2;if (document.getElementById){msviFooter2 = document.getElementById("msviFooter2");msviFooter2.style.filter = "";}</script><table cellpadding="0" cellspacing="0" width="100%" height="58" style="height: expression(msviFooter2.offsetHeight+1); width: expression(msviFooter2.offsetWidth)"><tr valign="top"><td><div style="width: 200px"></div></td><td width="100%" style="filter:progid:DXImageTransform.Microsoft.Gradient(startColorStr='#FFFFFF', endColorStr='#669AFF', gradientType='1')"></td></tr></table><layer visibility="hide"><div style="display:none"><img width="0" height="0" border="0" hspace="0" vspace="0" src="http://c.microsoft.com/trans_pixel.asp?source=msdn&amp;TYPE=PV&amp;p=msdnmag_issues_06_10_appfundamentals&amp;URI=%2fmsdnmag%2fissues%2f06%2f10%2fappfundamentals%2fDefault.aspx&amp;GUID=1F4FC18C-F71E-47FB-8FC9-612F8EE59C61&amp;r=http%3a%2f%2fwww.google.com%2fsearch%3fhl%3den%26q%3dxaml%2b%2b%2bnavigationwindow"></div></layer>
	

<script language="javascript" type="text/javascript">
var gDomain="m.webtrends.com";
var gDcsId="dcsmgru7m99k7mqmgrhudo0k8_8c6m";
var gTrackEvents=1;
var wtsp="_msdnmag_"
var gFpc="WT_FPC";if(document.cookie.indexOf(gFpc+"=")==-1){document.write("<SCR"+"IPT TYPE='text/javascript' SRC='"+"http"+(window.location.protocol.indexOf('https:')==0?'s':'')+"://"+gDomain+"/"+gDcsId+"/wtid.js"+"'><\/SCR"+"IPT>");}
</script>
<script src="/webtrends.js" type="text/javascript"></script>
<noscript>
<img alt="" border="0" id="DCSIMG" width="1" height="1" src="http://m.webtrends.com/dcsmgru7m99k7mqmgrhudo0k8_8c6m/njs.gif?dcsuri=/nojavascript&amp;WT.js=No">
</noscript>



</body>
</html>

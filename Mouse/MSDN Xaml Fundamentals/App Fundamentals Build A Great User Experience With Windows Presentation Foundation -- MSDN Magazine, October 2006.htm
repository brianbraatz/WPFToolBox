<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0063)http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/ -->
<HTML><HEAD><TITLE id=pagetitle>App Fundamentals: Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006</TITLE>
<META 
content="The Windows Presentation Foundation application model distinguishes&#10;between standalone and browser applications and between menu driven and hyperlink driven navigation, resulting in  a more satisfying experience for your users.  " 
name=Description>
<META http-equiv=PICS-Label 
content='(PICS-1.1 "http://www.rsac.org/ratingsv01.html" l comment "RSACi North America Server" by "inet@microsoft.com" r (n 0 s 0 v 0 l 0))'>
<META content=en-us name=MS.LOCALE>
<META content=history name=save>
<META http-equiv=Content-Type content="text/html; CHARSET=UTF-8">
<META content=all name=Robots><LINK 
href="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/css.css" 
type=text/css rel=Stylesheet>
<SCRIPT language=Javascript 
src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/menujs.xml&amp;clicktrax=False" 
type=text/javascript></SCRIPT>

<SCRIPT language=Javascript 
src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/msdnmag.js" 
type=text/javascript></SCRIPT>

<SCRIPT language=Javascript 
src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/js.aspx" 
type=text/javascript></SCRIPT>
<LINK 
href="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/mag.css" 
type=text/css rel=Stylesheet><LINK 
href="C:\Code\Example\WPF Xaml Expression\MSDN Xaml Fundamentals\App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files\css(1).css" 
type=text/css rel=stylesheet>
<SCRIPT language=JavaScript>var doImage=doImage;var TType=TType;
function mhHover(tbl,idx,cls){var t,d;if(document.getElementById)t=document.getElementById(tbl);else t=document.all(tbl);if(t==null)return;if(t.getElementsByTagName)d=t.getElementsByTagName("TD");else d=t.all.tags("TD");if(d==null)return;if(d.length<=idx)return;d[idx].className=cls;}
function footerjs(doc){if(doImage==null){var tt=TType==null?"PV":TType;doc.write('<layer visibility="hide"><div style="display:none"><img src="http://c.microsoft.com/trans_pixel.asp?source=msdn&TYPE=' + tt + '&p=msdnmag_issues_06_10_appfundamentals&URI=%2fmsdnmag%2fissues%2f06%2f10%2fappfundamentals%2fDefault.aspx&GUID=1F4FC18C-F71E-47FB-8FC9-612F8EE59C61&r=http%3a%2f%2fwww.google.com%2fsearch%3fhl%3den%26q%3dxaml%2b%2b%2bnavigationwindow" width=0 height=0 hspace=0 vspace=0 border=0 /></div></layer>');}}</SCRIPT>

<SCRIPT language=JavaScript 
src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/broker.js"></SCRIPT>

<META content="MSHTML 6.00.2900.3199" name=GENERATOR></HEAD>
<BODY leftMargin=0 topMargin=0><!--NOINDEX_START-->
<SCRIPT language=Javascript>
				if (self.name == "MNPMainFrame") top.location.href = self.location.href;
			</SCRIPT>

<DIV id=msviMasthead>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="100%">
      <TABLE height=22 cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD id=msviRegionIdGraphic bgColor=#ffffff></TD>
          <TD id=msviRegionGradient1 
          style="FILTER: progid:DXImageTransform.Microsoft.Gradient(startColorStr='#FFFFFF', endColorStr='#98B2E6', gradientType='1')" 
          width="50%"></TD>
          <TD id=msviRegionGradient2 
          style="FILTER: progid:DXImageTransform.Microsoft.Gradient(startColorStr='#98B2E6', endColorStr='#3568CC', gradientType='1')" 
          width="50%"></TD></TR></TBODY></TABLE></TD>
    <TD id=msviGlobalToolbar dir=ltr noWrap align=left bgColor=#3568cc 
height=22>
      <TABLE cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=gt0 onmouseover="mhHover('msviGlobalToolbar', 0, 'gt1')" 
          onmouseout="mhHover('msviGlobalToolbar', 0, 'gt0')" noWrap><A 
            href="http://www.microsoft.com/">Microsoft.com Home</A></TD>
          <TD class=gtsep>|</TD>
          <TD class=gt0 onmouseover="mhHover('msviGlobalToolbar', 2, 'gt1')" 
          onmouseout="mhHover('msviGlobalToolbar', 2, 'gt0')" noWrap><A 
            href="http://msdn.microsoft.com/library/toolbar/3.0/sitemap/en-us.mspx">Site 
            Map</A></TD></TR></TBODY></TABLE></TD></TR>
  <TR vAlign=top>
    <TD width="100%">
      <TABLE height=42 cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR vAlign=top>
          <TD id=msviBrandBanner bgColor=#ffffff><A 
            href="http://msdn.microsoft.com/"><IMG title="" height=42 alt=MSDN 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/msdn_masthead_ltr.gif" 
            width=225 border=0></A></TD>
          <TD 
          style="FILTER: progid:DXImageTransform.Microsoft.Gradient(startColorStr='#FFFFFF', endColorStr='#6799FF', gradientType='1')" 
          width="100%"></TD></TR></TBODY></TABLE></TD>
    <TD id=msviGlobalSearch bgColor=#6799ff>Search Microsoft.com for:<BR>
      <FORM id=msviSearchForm action=/library/toolbar/3.0/search.aspx><INPUT 
      type=hidden value=en-us name=View><INPUT type=hidden value=iso-8859-1 
      name=charset><NOBR>
      <DIV style="HEIGHT: 18px"><INPUT id=msviSearchBox maxLength=255 name=qu><INPUT id=msviGoButton type=submit value=Go></DIV></NOBR></FORM></TD></TR></TBODY></TABLE>
<DIV id=msviLocalToolbar>
<TABLE height=19 cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD id=msviHomePageLink noWrap><A 
      href="http://msdn.microsoft.com/default.aspx">MSDN Home</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 2, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 2, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/developercenters/">Developer 
Centers</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 4, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 4, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/library/default.asp">Library</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 6, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 6, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/downloads/">Downloads</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 8, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 8, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/howtobuy/">How to Buy</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 10, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 10, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/subscriptions/">Subscribers</A></TD>
    <TD><SPAN class=ltsep>|</SPAN></TD>
    <TD class=lt0 onmouseover="mhHover('msviLocalToolbar', 12, 'lt1')" 
    onmouseout="mhHover('msviLocalToolbar', 12, 'lt0')" noWrap><A 
      href="http://msdn.microsoft.com/worldwide.aspx">Worldwide</A></TD>
    <TD width="100%"></TD></TR></TBODY></TABLE></DIV></DIV>
<TABLE dir=ltr cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR vAlign=top>
    <TD style="OVERFLOW-X: hidden" width=181 height="100%">
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD class=mnpQuickSearch dir=ltr 
          style="BACKGROUND: #cccccc; COLOR: #000000">
            <FORM style="MARGIN: 0px" 
            action=/msdn-online/shared/components/mscomsearch30.aspx><NOBR><FONT 
            color=#000000>Search for</FONT><BR><INPUT class=mnpSearchBox id=qu 
            style="WIDTH: 165px" maxLength=255 name=qu><BR>
            <TABLE style="MARGIN-TOP: 2px" cellSpacing=0 cellPadding=0 
            width="100%" border=0>
              <TBODY>
              <TR>
                <TD class=mnpQuickSearch 
                style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px" 
                width="100%"><SELECT class=mnpSearchScopes 
                  style="WIDTH: 137px" name=SearchScope><OPTION value=1>MSDN 
                    and KB</OPTION><OPTION value=2>MSDN Library</OPTION><OPTION 
                    value=3>Code and Downloads</OPTION><OPTION value=7 
                    selected>MSDN Magazine</OPTION><OPTION value=5>Knowledge 
                    Base (KB)</OPTION></SELECT></TD>
                <TD><INPUT class=mnpSearchButton type=submit value=Go><BR></TD></TR></TBODY></TABLE><A 
            onmouseover="style.color='#0033CC';" style="COLOR: #000000" 
            onmouseout="style.color='#000000';" 
            href="http://search.microsoft.com/search/search.aspx?View=msdn&amp;st=a">Advanced 
            Search</A></NOBR></FORM></TD></TR></TBODY></TABLE>
      <DIV class=mnpMenuTop id=mnpMenuTop dir=ltr 
      style="OVERFLOW-X: hidden; WIDTH: 181px" 
      parent="/msdnmag/issues/06/10/default.aspx" 
      url="/msdnmag/issues/06/10/AppFundamentals/default.aspx">
      <DIV class=mnpInherit>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/default.aspx">MSDN Magazine 
      Home</A></DIV>
      <DIV class=mnpMenuBorder style="WIDTH: 180px"></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #999999; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #999999; WIDTH: 176px; BORDER-TOP-COLOR: #999999; BORDER-RIGHT-COLOR: #999999" 
      menu="m6cf1299b23714106b822694b32418e5e"><IMG class=mnpMenuArrow title="" 
      style="LEFT: 166px; VISIBILITY: hidden" height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/issues/06/10/default.aspx">October 
      2006</A></DIV>
      <DIV class=mnpMenuBorder style="WIDTH: 180px"></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1" 
      menu="m66be025db64f7146f504e0fec1b2bae3"><IMG class=mnpMenuArrow title="" 
      style="LEFT: 166px; VISIBILITY: hidden" height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/find/default.aspx">Search</A></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1" 
      menu="m3fd9abd6d4e6b1d47da1677743a69def"><IMG class=mnpMenuArrow title="" 
      style="LEFT: 166px; VISIBILITY: hidden" height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/code.aspx">Source Code</A></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1" 
      menu="m0e5c80cdf8bdd73274e5171bd96f4ed9"><IMG class=mnpMenuArrow title="" 
      style="LEFT: 166px; VISIBILITY: hidden" height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/backissues.aspx">Back Issue 
      Archive</A></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1" 
      menu="mbf75615e0c7b0b018a47f1aaa4e9b7b9"><IMG class=mnpMenuArrow title="" 
      style="LEFT: 166px; VISIBILITY: hidden" height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/columns/default.aspx">Column 
      Archive</A></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/rss/default.aspx">RSS</A></DIV>
      <DIV class=mnpMenuBorder style="WIDTH: 180px"></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/Subscribe.aspx">Subscribe</A></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/backissues/default.aspx">Order 
      Back Issues</A></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/service.aspx">Reader 
      Services</A></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/staff.aspx">Meet the 
      Staff</A></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/authors.aspx">Meet the 
      Authors</A></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://www.sdmediagroup.com/msdnmag/mediakit/mediakit.htm">Media 
      Kit</A></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/cdrom/default.aspx">Special CD and 
      DVD Offers</A></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/podcast/default.aspx">Podcast</A></DIV>
      <DIV class=mnpMenuBorder style="WIDTH: 180px"></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/submit.aspx">Submit an 
      Article</A></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/write.aspx">Write to Us</A></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/msdnmag/correct.aspx">Corrections</A></DIV>
      <DIV class=mnpMenuBorder style="WIDTH: 180px"></DIV>
      <DIV class=mnpMenuRow 
      style="BORDER-LEFT-COLOR: #f1f1f1; BACKGROUND: #f1f1f1; OVERFLOW-X: hidden; BORDER-BOTTOM-COLOR: #f1f1f1; WIDTH: 176px; BORDER-TOP-COLOR: #f1f1f1; BORDER-RIGHT-COLOR: #f1f1f1"><IMG 
      class=mnpMenuArrow title="" style="LEFT: 166px; VISIBILITY: hidden" 
      height=7 alt=* 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/arrowLTR.gif" 
      width=4 border=0><A 
      href="http://msdn.microsoft.com/isapi/gomscom.asp?TARGET=/technet/technetmag/default.aspx">TechNet 
      Magazine</A></DIV>
      <DIV class=mnpMenuBorder 
      style="MARGIN-BOTTOM: 0px; WIDTH: 180px"></DIV></DIV></DIV>
      <DIV class=mnpAds 
      style="BORDER-RIGHT: #999999 1px solid; BORDER-TOP: #999999 0px solid; BACKGROUND: #f1f1f1; PADDING-BOTTOM: 20px; BORDER-LEFT: #999999 0px solid; WIDTH: 181px; BORDER-BOTTOM: #999999 0px solid; HEIGHT: 100%">
      <CENTER>
      <DIV 
      style="BACKGROUND: none transparent scroll repeat 0% 0%; HEIGHT: 20px"></DIV><A 
      href="http://estore.websitepros.com/1779793/StoreFront.bok" 
      target=_blank><IMG alt="MSDN Magazine Archive CD" 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/ad1.gif" 
      border=0></A><BR>
      <DIV 
      style="BACKGROUND: none transparent scroll repeat 0% 0%; HEIGHT: 20px"></DIV><A 
      href="http://www.dotnetroadshow.com/" target=_blank><IMG 
      alt=".NET Roadshow 2007" 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/ad2.gif" 
      border=0></A><BR></CENTER></DIV></TD>
    <TD dir=ltr width="100%">
      <TABLE height=46 cellSpacing=0 cellPadding=0 width="100%" 
        bgColor=#3366cc><TBODY>
        <TR>
          <TD width=419><IMG height=46 alt="MSDN Magazine" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/magsub.gif" 
            width=419 border=0></TD>
          <TD title="MSDN Magazine" width="100%" 
          background="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/appfundamentals.htm" 
          bgColor=#3366cc>&nbsp;</TD></TR></TBODY></TABLE><!--NOINDEX_STOP--><!-----------------><!--BEGIN_CONTENT--><!----------------->
      <FORM id=locBar style="MARGIN: 0px" name=locBar action=Default.aspx 
      method=post><INPUT type=hidden 
      value=dDwxODM5MzQ5NTY7Oz4g5D9dbWD6IZVNGwD+P/FTzbX9EA== name=__VIEWSTATE> 
      <TABLE cellSpacing=0 cellPadding=0 width="100%" bgColor=#3366cc 
        border=0><TBODY>
        <TR>
          <TD>
            <TABLE 
            style="BACKGROUND-IMAGE: url(/msdnmag/images/locBarBackGround.gif)" 
            cellSpacing=0 cellPadding=0 width=419 
            background="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/locBarBackGround.gif" 
            border=0>
              <TBODY>
              <TR>
                <TD style="WIDTH: 419px"><BR>&nbsp; <BR>&nbsp; 
            </TD></TR></TBODY></TABLE></TD>
          <TD vAlign=top align=right>
            <TABLE cellSpacing=0 border=0>
              <TBODY>
              <TR>
                <TD><FONT color=white>Choose Your Language: <SELECT 
                  id=locBar1_ddlLoc 
                  onchange="window.open(this.options[this.selectedIndex].value,'_top')" 
                  name=locBar1:ddlLoc> <OPTION value=default.aspx?loc=en 
                    selected>English</OPTION> <OPTION 
                    value=default.aspx?loc=de>Deutsch</OPTION> <OPTION 
                    value=default.aspx?loc=es>Español</OPTION> <OPTION 
                    value=default.aspx?loc=fr>Français</OPTION> <OPTION 
                    value=default.aspx?loc=it>Italiano</OPTION> <OPTION 
                    value=default.aspx?loc=jp>日本語</OPTION> <OPTION 
                    value=default.aspx?loc=ko>한국어</OPTION> <OPTION 
                    value=default.aspx?loc=pt>Português</OPTION> <OPTION 
                    value=default.aspx?loc=ru>Pусский</OPTION> <OPTION 
                    value=default.aspx?loc=zh>简体中文</OPTION> <OPTION 
                    value=default.aspx?loc=zx>繁體中文</OPTION></SELECT>&nbsp;<BR></FONT></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></FORM>
      <DIV class=eyebrow><A class=small 
      href="http://msdn.microsoft.com/default.aspx">MSDN 
      Home</A>&nbsp;&gt;&nbsp;<A class=small 
      href="http://msdn.microsoft.com/msdnmag/default.aspx">MSDN 
      Magazine</A>&nbsp;&gt;&nbsp;<A class=small 
      href="http://msdn.microsoft.com/msdnmag/issues/06/10/default.aspx">October 
      2006</A>
      <HR>
      </DIV>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD class=clsDocBody><SPAN class=clsSmHead>App Fundamentals</SPAN>
            <H1>Build A Great User Experience With Windows Presentation 
            Foundation</H1><BR>
            <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
              <TBODY>
              <TR>
                <TD width="75%">
                  <DIV class=pd xmlns:user="http://msdn.microsoft.com"><A 
                  title="More articles by this author" 
                  href="http://msdn.microsoft.com/msdnmag/find/?type=Au&amp;phrase=Michael%20Weinhardt&amp;words=exact">Michael 
                  Weinhardt</A></DIV></TD>
                <TD>
                  <DIV id=menu_parent align=right 
                  xmlns:user="http://msdn.microsoft.com">
                  <TABLE cellSpacing=0 cellPadding=3 border=0>
                    <TBODY>
                    <TR vAlign=bottom align=middle>
                      <TD><A id=Print 
                        onmouseover="window.status='Print This Page';return true" 
                        title="Print a printer-friendly version of this page" 
                        onclick="PrintButtonClick();return false;" 
                        onmouseout="window.status='';return true" 
                        href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/default.aspx?loc=&amp;print=true"><IMG 
                        alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/rtg_print.gif" 
                        border=0></A></TD>
                      <TD><A 
                        href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#bottom"><IMG 
                        alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/rtg_email.gif" 
                        border=0></A></TD>
                      <TD><A 
                        href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#bottom"><IMG 
                        alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/rtg_save.gif" 
                        border=0></A></TD>
                      <TD><A 
                        href="http://msdn.microsoft.com/msdnmag/rss/rss.aspx?current=true"><IMG 
                        alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/rss.gif" 
                        border=0></A></TD>
                      <TD><A 
                        href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#bottom"><IMG 
                        alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/rate.gif" 
                        border=0></A></TD>
                      <TD><A onclick="return false;" 
                        href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#">more 
                        ...</A></TD></TR></TBODY></TABLE></DIV>
                  <DIV style="FLOAT: right; WIDTH: 175px" align=right 
                  xmlns:user="http://msdn.microsoft.com">
                  <DIV id=menu_child 
                  style="BORDER-RIGHT: #999999 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #999999 1px solid; PADDING-LEFT: 5px; Z-INDEX: 100; PADDING-BOTTOM: 5px; BORDER-LEFT: #999999 1px solid; WIDTH: 175px; PADDING-TOP: 5px; BORDER-BOTTOM: #999999 1px solid; BACKGROUND-COLOR: white; align: right">
                  <TABLE cellSpacing=3 cellPadding=2 width="100%" border=0>
                    <TBODY>
                    <TR>
                      <TD vAlign=center align=middle width=30><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/rtg_print.gif"></TD>
                      <TD vAlign=center width=140><A id=Print 
                        onmouseover="window.status='Print This Page';return true" 
                        title="Print a printer-friendly version of this page" 
                        onclick="PrintButtonClick();return false;" 
                        onmouseout="window.status='';return true" 
                        href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/default.aspx?loc=&amp;print=true">Print</A></TD></TR>
                    <TR>
                      <TD vAlign=center align=middle><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/rtg_email.gif"></TD>
                      <TD vAlign=center><A 
                        href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#bottom">E-mail</A></TD></TR>
                    <TR>
                      <TD vAlign=center align=middle><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/rtg_save.gif"></TD>
                      <TD vAlign=center><A 
                        href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#bottom">Add 
                        to Favorites</A></TD></TR>
                    <TR>
                      <TD vAlign=center align=middle><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/rate.gif"></TD>
                      <TD vAlign=center><A 
                        href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#bottom">Rate</A></TD></TR>
                    <TR>
                      <TD vAlign=center align=middle><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/rss.gif"></TD>
                      <TD vAlign=center><A 
                        href="http://msdn.microsoft.com/msdnmag/rss/rss.aspx?current=true">RSS 
                        (Issues) </A></TD></TR>
                    <TR>
                      <TD vAlign=center align=middle><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/addtoany.gif"></TD>
                      <TD vAlign=center><A 
                        href="http://www.addtoany.com/?linkname=MSDN+Magazine&amp;type=rss&amp;linkurl=http://msdn.microsoft.com/msdnmag/rss/rss.aspx?current=true">Add 
                        RSS to Any </A></TD></TR>
                    <TR>
                      <TD vAlign=center align=middle><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/library.gif"></TD>
                      <TD vAlign=center><A 
                        href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#bottom">Related 
                        Articles</A></TD></TR>
                    <TR>
                      <TD vAlign=center align=middle><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/spaces.gif"></TD>
                      <TD vAlign=center><A 
                        href="http://spaces.live.com/blogit.aspx?Title=App Fundamentals:+Build A Great User Experience With Windows Presentation Foundation&amp;Description=The Windows Presentation Foundation application model distinguishesbetween standalone and browser applications and between menu driven and hyperlink driven navigation, resulting in  a more satisfying experience for your users.  &amp;SourceURL=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx" 
                        target=_blank>Live Spaces </A></TD></TR>
                    <TR>
                      <TD vAlign=center align=middle><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/digg.gif"></TD>
                      <TD vAlign=center><A 
                        href="http://digg.com/submit?phase=2&amp;url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx&amp;title=App Fundamentals:+Build A Great User Experience With Windows Presentation Foundation&amp;bodytext=The Windows Presentation Foundation application model distinguishesbetween standalone and browser applications and between menu driven and hyperlink driven navigation, resulting in  a more satisfying experience for your users.  &amp;topic=programming" 
                        target=_blank>Digg This </A></TD></TR>
                    <TR>
                      <TD vAlign=center align=middle><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/blogger.gif"></TD>
                      <TD vAlign=center><A 
                        href="http://new.blogger.com/blog_this.pyra?t=The Windows Presentation Foundation application model distinguishesbetween standalone and browser applications and between menu driven and hyperlink driven navigation, resulting in  a more satisfying experience for your users.  &amp;u=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx&amp;n='App Fundamentals:+Build A Great User Experience With Windows Presentation Foundation,'bloggerForm','scrollbars=no,width=475,height=300,top=175,left=75,status=yes,resizable=yes" 
                        target=_blank>BlogThis! </A></TD></TR>
                    <TR>
                      <TD vAlign=center align=middle><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/slashdot.gif"></TD>
                      <TD vAlign=center><A 
                        href="http://slashdot.org/bookmark.pl?url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx&amp;title=App Fundamentals:+Build A Great User Experience With Windows Presentation Foundation" 
                        target=_blank>Slashdot </A></TD></TR>
                    <TR>
                      <TD vAlign=center align=middle><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/delicious.gif"></TD>
                      <TD vAlign=center><A 
                        href="http://del.icio.us/post?url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx&amp;title=App Fundamentals:+Build A Great User Experience With Windows Presentation Foundation" 
                        target=_blank>del.icio.us </A></TD></TR>
                    <TR>
                      <TD vAlign=center align=middle><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/technorati.png"></TD>
                      <TD vAlign=center><A 
                        href="http://technorati.com/faves?add=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx" 
                        target=_blank>Technorati </A></TD></TR>
                    <TR>
                      <TD vAlign=center align=middle><IMG alt="" 
                        src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/icodownl.gif"></TD>
                      <TD vAlign=center><A 
                        href="http://msdn.microsoft.com/msdnmag/code/?url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx">Explore 
                        </A>the code. <BR><BR><A 
                        href="http://download.microsoft.com/download/f/2/7/f279e71e-efb0-4155-873d-5554a0608523/WPF2006_10.exe">Download 
                        </A>the code. </TD></TR></TBODY></TABLE></DIV></DIV>
                  <SCRIPT type=text/javascript 
                  xmlns:user="http://msdn.microsoft.com">
      at_attach("menu_parent", "menu_child", "hover", "y", "pointer");
    </SCRIPT>
                </TD></TR></TBODY></TABLE>
            <DIV class=clsBeta>This article is based on prerelease versions of 
            WPF and the .NET Framework 3.0. All information herein is subject to 
            change </DIV>
            <HR>
            <SPAN class=clsSearchBox>This article discusses:</SPAN>
            <TABLE cellSpacing=0 cellPadding=0 border=0>
              <TBODY>
              <TR>
                <TD width="55%">
                  <DIV class=clsDiscuss>
                  <UL>
                    <LI class=clsInfoBox>Elements of a user experience 
                    <LI class=clsInfoBox>The Windows Presentation Foundation 
                    Resource model 
                    <LI class=clsInfoBox>The Windows Presentation Foundation 
                    Application type 
                    <LI class=clsInfoBox>Designing an XBAP application 
                  </LI></UL></DIV></TD>
                <TD>
                  <DIV class=clsInfoBox><SPAN class=clsSmWhite><B>This article 
                  uses the following technologies:</B><BR>.NET Framework 3.0, 
                  Visual Studio 2005, XAML, and C# 
              </SPAN><BR></DIV></TD></TR></TBODY></TABLE><BR><SPAN id=dl_parent 
            style="FONT-SIZE: 100%"><A id=Code 
            href="http://msdn.microsoft.com/msdnmag/code/?url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx"><IMG 
            style="BORDER-RIGHT: 0px; BORDER-TOP: 0px; BORDER-LEFT: 0px; BORDER-BOTTOM: 0px" 
            height=16 alt="Download Image" hspace=5 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/icodownl.gif" 
            width=16>Get the sample code for this article.</A></SPAN>
            <DIV id=dl_child 
            style="BORDER-RIGHT: #999999 1px solid; PADDING-RIGHT: 0px; BORDER-TOP: #999999 1px solid; PADDING-LEFT: 0px; Z-INDEX: 100; PADDING-BOTTOM: 0px; BORDER-LEFT: #999999 1px solid; WIDTH: 500px; PADDING-TOP: 0px; BORDER-BOTTOM: #999999 1px solid; BACKGROUND-COLOR: white">
            <TABLE style="BACKGROUND-IMAGE: url(/msdnmag/images/codebg.gif)" 
            cellSpacing=0 cellPadding=20 width=500 border=0>
              <TBODY>
              <TR>
                <TD vAlign=top><B>NEW:<A 
                  href="http://msdn.microsoft.com/msdnmag/code/?url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx">Explore</A> 
                  the sample code online! </B><BR><BR>- or - <BR><BR><B>Code 
                  download available at: </B><A 
                  href="http://download.microsoft.com/download/f/2/7/f279e71e-efb0-4155-873d-5554a0608523/WPF2006_10.exe">WPF2006_10.exe</A> 
                  (214KB) </TD></TR></TBODY></TABLE></DIV>
            <SCRIPT type=text/javascript>
        at_attach("dl_parent", "dl_child", "hover", "y", "pointer");
      </SCRIPT>

            <HR>

            <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
              <TBODY>
              <TR>
                <TD width="50%"><IMG class=clsImgButton id=contentbtn 
                  onclick="ToggleMenu(contentbtn, contentmenu);" height=9 alt="" 
                  hspace=5 
                  src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/minus.gif" 
                  width=9 align=absMiddle vspace=2><A 
                  onclick="ToggleMenu(contentbtn, contentmenu);" 
                  href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#void" 
                  target=_self name=contents><B>Contents</B></A><BR>
                  <DIV id=contentmenu 
                  style="MARGIN-TOP: 10px; DISPLAY: block; MARGIN-LEFT: 20px"><A 
                  href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#S1" 
                  target=_self>Application Type</A><BR><A 
                  href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#S2" 
                  target=_self>The Window</A><BR><A 
                  href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#S3" 
                  target=_self>The Page Class</A><BR><A 
                  href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#S4" 
                  target=_self>Hyperlink Class</A><BR><A 
                  href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#S5" 
                  target=_self>NavigationWindow</A><BR><A 
                  href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#S6" 
                  target=_self>NavigationService</A><BR><A 
                  href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#S7" 
                  target=_self>XAML Browser Applications </A><BR><A 
                  href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#S8" 
                  target=_self>Frame</A><BR><A 
                  href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#S9" 
                  target=_self>Windows Presentation Foundation 
                  Resources</A><BR><A 
                  href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#S10" 
                  target=_self>PageFunction</A><BR><A 
                  href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#S11" 
                  target=_self>Where Are We?</A><BR></DIV></TD></TR></TBODY></TABLE>
            <HR>
            <BR>
            <DIV class=articletext>
            <P class=clsNoIndent></P>
            <DIV class=dropcap>A</DIV>user experience is a sum of its content 
            and the way its content is hosted. In Windows<SUP 
            class=clsSmall>®</SUP> Presentation Foundation, content is created 
            using standard controls, 2D and 3D graphics, animation, data 
            binding, layouts, styling, and templating. However, the content is 
            fairly useless until it is hosted in a way that allows users to both 
            see and interact with it. The content needs to be packaged within an 
            application and displayed through a window. This is where an 
            application model comes in handy.
            <P></P>
            <P>The Windows Presentation Foundation application model 
            distinguishes between two application types: standalone and browser. 
            A standalone application displays content through its own windows, 
            dialogs, and message boxes, while a browser application consists of 
            its own pages that are hosted in a browser.</P>
            <P>Similarly, Windows Presentation Foundation distinguishes between 
            two styles of navigation: menu driven and hyperlink driven. 
            Menu-driven applications allow users to navigate content and 
            functionality using menu bars, tool bars, windows, and dialogs, just 
            as with any traditional desktop Windows-based application. 
            Hyperlink-driven uses hyperlinks to deliver a navigation experience 
            that resembles Web applications.</P>
            <P>It goes without saying that standalone applications naturally 
            support menu-driven navigation and browser applications naturally 
            support hyperlink-driven navigation. But the Windows Presentation 
            Foundation application model lets you mix and match elements of 
            both. In most cases, this involves either partially or completely 
            integrating a hyperlink-driven experience into a standalone 
            application. The combination you use should be based upon the type 
            of experience that will most benefit your users. Once you've decided 
            on the experience you want to deliver, you can use the Windows 
            Presentation Foundation application model to build it.</P><BR><A 
            name=S1></A><SPAN class=clsSubhead>Application Type</SPAN><BR>
            <P>Consider the sample Box Application, shown in <SPAN class=clsFigs 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;1</SPAN>. This is 
            a standalone, menu-driven application that allows people who need 
            boxes to list, order, view, and delete box orders. To provide this 
            user experience, you need to begin with the most fundamental of all 
            application model building blocks: creating an application.</P>
            <DIV id=428425 style="DISPLAY: none; WIDTH: 425px"><A 
            href="javascript:ToggleImages('428425',%20'403400');"><IMG 
            height=428 alt="Figure 1 The Box Application" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig01_L.gif" 
            width=425 border=0></A><BR><SPAN class=clsCap>Figure 
            1</SPAN>&nbsp;<SPAN class=clsCaptxt>The Box Application (Click the 
            image for a smaller view) </SPAN></DIV>
            <DIV id=403400 
            style="DISPLAY: block; MARGIN: 5px 0px 10px 5px; WIDTH: 400px"><A 
            href="javascript:ToggleImages('403400',%20'428425');"><IMG 
            height=403 alt="Figure 1 The Box Application" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig01.gif" 
            width=400 border=0></A><BR><SPAN class=clsCap>Figure 
            1</SPAN>&nbsp;<SPAN class=clsCaptxt>The Box Application (Click the 
            image for a larger view) </SPAN></DIV>
            <P>A Windows-based application consists of some standard plumbing, 
            including both an entry point and a message loop, and possibly may 
            also require one or more of the following common application 
            services: 
            <UL>
              <LI>Processing command-line parameters
              <LI>Returning an exit code
              <LI>Application-scope state
              <LI>Detecting and responding to unhandled exceptions
              <LI>Managing application lifetime</LI></UL>
            <P></P>
            <P>Windows Presentation Foundation centralizes both plumbing and 
            services within a single type, System.Windows.Application, which you 
            can use from markup (XAML), code (C# or Visual Basic<SUP 
            class=clsSmall>®</SUP>), or a combination of both (known as markup 
            and codebehind). Application turns out to be so useful that Visual 
            Studio<SUP class=clsSmall>®</SUP> 2005 automatically adds an 
            instance of one to every new .NET Framework 3.0 (formerly known as 
            WinFX<SUP class=clsSmall>®</SUP>) Windows Application project: <PRE class=clsCode>&lt;!--App.xaml (markup)--&gt;
&lt;Application 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  x:Class="BoxApplicationWindow.App" 
/&gt;

// App.xaml.cs (codebehind)
public partial class App : Application { ... }</PRE>
            <P></P>
            <P>If you've programmed with a Windows presentation technology 
            before, such as Windows Forms and Win32<SUP class=clsSmall>®</SUP>, 
            you may be in for a surprise. There isn't a single piece of code 
            that looks remotely like the code used to establish the standard 
            Windows-based application plumbing, including the entry point. This 
            is because the application plumbing is generated for you, which is a 
            result of Visual Studio 2005 configuring your Application markup 
            file as an ApplicationDefinition build action, as shown in <SPAN 
            class=clsFigs 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;2</SPAN>.</P>
            <DIV id=267310 
            style="DISPLAY: block; MARGIN: 5px 0px 10px 5px; WIDTH: 310px"><IMG 
            height=267 alt="Figure 2 Set an Application XAML File" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig02.gif" 
            width=310 border=0><BR><SPAN class=clsCap>Figure 2</SPAN>&nbsp;<SPAN 
            class=clsCaptxt>Set an Application XAML File</SPAN></DIV>
            <P>Under the covers, the equivalent of this code is generated: <PRE class=clsCode>// App.cs
using System; 

public partial class App : Application 
{
  [STAThread]
  public static void Main() 
  {
    // Initialize and run the application
    App application = new App();
    application.Run();
  }
}
</PRE>What exactly is created doesn't really matter, though, since 
            you neither have to write it nor understand its intricacies. 
            Instead, you are shielded by the most complete application 
            abstraction in a Microsoft presentation technology to date, which 
            you can use to create a running application with only a single piece 
            of markup. All you need to do is use Application's services. For 
            standalone applications, this involves showing a window when an 
            application starts running.
            <P></P>
            <DIV style="MARGIN-TOP: 5px" align=right><A class=clsSmall 
            onclick="OpenMenu(contentbtn, contentmenu);" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#contents" 
            target=_self><IMG style="MARGIN-LEFT: 5px" height=8 
            alt="Back to top" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/top.gif" 
            width=18 align=bottom border=0></A></DIV><BR><A name=S2></A><SPAN 
            class=clsSubhead>The Window</SPAN><BR>
            <P>In Windows Presentation Foundation, a window is a Window. A 
            Window has always been the core unit of content hosting in 
            standalone applications. You can add a Window definition to your 
            project in Visual Studio 2005 by choosing Project | Add New Item | 
            WinFX Window, which generates the following: <PRE class=clsCode>&lt;!--MainWindow.xaml (markup)--&gt; 
&lt;Window 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  x:Class="BoxApplication.MainWindow"
&lt;/Window&gt;

// MainWindow.xaml.cs (codebehind)
using System.Windows;
public partial class MainWindow : Window { ... }</PRE>
            <P></P>
            <P>When the window definition is added, Visual Studio 2005 
            automatically configures the markup file's build type to Page. When 
            built, the markup is turned into a special type of resource that can 
            be identified uniquely by a Uniform Resource Identifier (URI). 
            Essentially, this enables Windows Presentation Foundation to load a 
            Window declaratively from a URI, and you can use this capability to 
            specify a window to be automatically opened when an application 
            starts. You do this by setting the Application.StartupUri attribute 
            in markup, as shown here: <PRE class=clsCode>  &lt;!--App.xaml (markup)--&gt;
  &lt;Application ... StartupUri="MainWindow.xaml"  /&gt;
</PRE>This creates and shows a window like the one in <SPAN 
            class=clsFigs 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;3</SPAN>. Like 
            all windows, Windows Presentation Foundation windows contain a 
            client area (this houses Windows Presentation Foundation content and 
            controls) and a non-client area (a border, a title bar, and the 
            various adornments associated with these).
            <P></P>
            <DIV id=217357 
            style="DISPLAY: block; MARGIN: 5px 0px 10px 5px; WIDTH: 357px"><IMG 
            height=217 alt="Figure 3 A Window and Its Parts" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig03.gif" 
            width=357 border=0><BR><SPAN class=clsCap>Figure 3</SPAN>&nbsp;<SPAN 
            class=clsCaptxt>A Window and Its Parts</SPAN></DIV>
            <P>The window that results from Application.StartupUri is modeless, 
            which means it doesn't prevent users from using other windows in the 
            application. Since you haven't created any other windows yet, this 
            isn't so exciting. However, if you need to show other modeless 
            windows, as you'll probably need to do in any nontrivial 
            application, simply call Window.Show: <PRE class=clsCode>// MainWindow.xaml.cs (codebehind)
public partial class MainWindow : Window 
{ 
  void helpContentsMenuItem_Click(object sender, RoutedEventArgs e) 
  {
    HelpWindow window = new HelpWindow();
    window.Owner = this; // Ensure window always appears above us
    window.Show();
  }
  ... 
 }</PRE>
            <P></P>
            <P>Windows Presentation Foundation also supports showing a window 
            modally, which means the window prevents other windows in an 
            application from being used. Modal windows are typically (but not 
            always) used as dialogs, to collect data needed for completing a 
            task such as creating a new order. To show a window modally in 
            Windows Presentation Foundation, call Window.ShowDialog (see <A 
            class=clsFigs 
            onclick="OpenUrl('default.aspx?loc=&amp;fig=true#fig4'); return false;" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/default.aspx?loc=&amp;fig=true#fig4" 
            target=_self 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;4</A>).</P>
            <P>The Window class also supports typical dialog behavior, which 
            allows users to accept or cancel a dialog and have that choice 
            returned to the calling code for appropriate processing.</P>
            <P>Message boxes are a special type of dialog for displaying 
            information to users, or asking them questions, and is supported in 
            Windows Presentation Foundation with the MessageBox type: <PRE class=clsCode>// MainWindow.xaml.cs (codebehind)
public partial class MainWindow : Window 
{ 
  void aboutMenuItem_Click(object sender, RoutedEventArgs e) 
  {
    MessageBox.Show("Box Application, Version 1.0");
  }
  ... 
}</PRE>
            <P></P>
            <P>Message boxes, dialogs, windows, and applications form the core 
            of the standalone, menu-driven application development model. And 
            these have been supported by previous presentation technologies for 
            a long time now. However, Windows Presentation Foundation extends 
            these with hyperlink-driven navigation support that begins with the 
            fundamental unit of navigation content—the page.</P>
            <DIV style="MARGIN-TOP: 5px" align=right><A class=clsSmall 
            onclick="OpenMenu(contentbtn, contentmenu);" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#contents" 
            target=_self><IMG style="MARGIN-LEFT: 5px" height=8 
            alt="Back to top" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/top.gif" 
            width=18 align=bottom border=0></A></DIV><BR><A name=S3></A><SPAN 
            class=clsSubhead>The Page Class</SPAN><BR>
            <P>Page is the Windows Presentation Foundation analog of the HTML 
            Web page, which helped popularize the Web. As I mentioned, Windows 
            Presentation Foundation supports hyperlink-driven navigation in both 
            standalone and browser applications. The content cornerstone of the 
            hyperlink-driven navigation experience in Windows Presentation 
            Foundation is the Page.</P>
            <P>You add a markup and codebehind Page definition to your project 
            in Visual Studio 2005 by choosing Project | Add New File | WinFX 
            Page. This generates code resembling what's shown in <A 
            class=clsFigs 
            onclick="OpenUrl('default.aspx?loc=&amp;fig=true#fig5'); return false;" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/default.aspx?loc=&amp;fig=true#fig5" 
            target=_self 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;5</A>.</P>
            <P>The Page markup file is configured as a Page build item. As with 
            Window, this is done so it can be loaded from a URI, which means you 
            can configure Application.StartupUri to automatically load a page 
            when an application starts: <PRE class=clsCode>&lt;!--App.xaml (markup)--&gt;
&lt;Application ... StartupUri="HomePage.xaml" /&gt;</PRE>
            <P></P>
            <P>Because the Page class is not a window, and doesn't derive from 
            Window, it can't host itself. Fortunately, the Application class is 
            smart enough to detect when a particular page is set as the 
            StartupUri. If so, Application creates a window in which to host the 
            page.</P>
            <DIV style="MARGIN-TOP: 5px" align=right><A class=clsSmall 
            onclick="OpenMenu(contentbtn, contentmenu);" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#contents" 
            target=_self><IMG style="MARGIN-LEFT: 5px" height=8 
            alt="Back to top" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/top.gif" 
            width=18 align=bottom border=0></A></DIV><BR><A name=S4></A><SPAN 
            class=clsSubhead>Hyperlink Class</SPAN><BR>
            <P>Any nontrivial hyperlink-driven application will have more than 
            one XAML page, and you'll need to give your users a way to navigate 
            between these pages. You can probably guess that Windows 
            Presentation Foundation enables hyperlink-driven navigation with 
            hyperlinks. You can add hyperlinks to your pages like so: <PRE class=clsCode>&lt;!--HomePage.xaml (markup)--&gt;
&lt;Page ... &gt;
  ...
      &lt;Hyperlink NavigateUri=          "OrderingGuidelinesPage.xaml"&gt;
    Ordering Guidelines
  &lt;/Hyperlink&gt;
  ...
&lt;/Page&gt;
</PRE>This hyperlink is configured to navigate to a XAML page using 
            the same fundamental programming model as HTML HREFs. You specify a 
            URI to navigate to (in this case, OrderingGuidelinesPage.xaml) and 
            the text that users will see and click on to initiate navigation (in 
            this example, "Ordering Guidelines").
            <P></P>
            <P>Since so much browsable content is located in HTML-based Web 
            pages, it's nice that Windows Presentation Foundation and Hyperlink 
            let you seamlessly navigate to Web-based content. For example, the 
            ordering guidelines already exist on the Box Application's Web site 
            so, rather than replicating them as XAML pages within the 
            application, you can simply change the value of the NavigateUri 
            property: <PRE class=clsCode>&lt;!--HomePage.xaml (markup)--&gt;
&lt;Page ... &gt;
  ...
  &lt;Hyperlink NavigateUri="OrderingGuidelinesPage.html"&gt;
    Ordering Guidelines
  &lt;/Hyperlink&gt;
  ...
&lt;/Page&gt;
</PRE>
            <P></P>
            <DIV style="MARGIN-TOP: 5px" align=right><A class=clsSmall 
            onclick="OpenMenu(contentbtn, contentmenu);" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#contents" 
            target=_self><IMG style="MARGIN-LEFT: 5px" height=8 
            alt="Back to top" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/top.gif" 
            width=18 align=bottom border=0></A></DIV><BR><A name=S5></A><SPAN 
            class=clsSubhead>NavigationWindow</SPAN><BR>
            <P>At this point, you might be wondering one of several things. 
            Since Page is not a window, where did the window that's hosting it 
            come from? When a hyperlink is clicked, what actually handles the 
            navigation? And how is HTML Web page content displayed from a 
            Windows Presentation Foundation application? All of these things are 
            taken care of by NavigationWindow.</P>
            <P>When you set Application.StartupUri to either a XAML or HTML 
            page, Application (knowing that neither of these can provide its own 
            window) creates an instance of NavigationWindow to host them. 
            NavigationWindow derives from Window and extends its visual 
            appearance to look a little like a browser, as you can see in <SPAN 
            class=clsFigs 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;6</SPAN>.</P>
            <DIV id=234311 
            style="DISPLAY: block; MARGIN: 5px 0px 10px 5px; WIDTH: 311px"><IMG 
            height=234 alt="Figure 6 Created By NavigationWindow" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig06.gif" 
            width=311 border=0><BR><SPAN class=clsCap>Figure 6</SPAN>&nbsp;<SPAN 
            class=clsCaptxt>Created By NavigationWindow</SPAN></DIV>
            <P>When a user clicks a hyperlink that appears on a XAML page, 
            Hyperlink asks NavigationWindow to navigate to the specified URI. 
            NavigationWindow proceeds to load the page that is located at the 
            URI, thus hosting it. The URI location from which the page was 
            loaded is stored in the NavigationWindow.Source property, while the 
            loaded page content is available from the NavigationWindow.Content 
            property.</P>
            <P>When content changes, navigation is considered to have taken 
            place and the previous content is added to the navigation history. 
            This, too, is managed by NavigationWindow. The navigation UI 
            provides two buttons and dropdown lists for navigation. Note that 
            you are not limited to NavigationWindow's default chrome. Using 
            Windows Presentation Foundation's support for styles, you can easily 
            create your own navigation UI.</P>
            <P>So far, I've shown you how to use markup for configuring the URIs 
            that hyperlinks should navigate to. Sometimes, though, you can't 
            determine your navigation declaratively. For example, if you want to 
            view an order, you need to create an instance of Page and pass it 
            the order you want to view. This can't be done declaratively. 
            Instead, you need to use code, as shown in <A class=clsFigs 
            onclick="OpenUrl('default.aspx?loc=&amp;fig=true#fig7'); return false;" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/default.aspx?loc=&amp;fig=true#fig7" 
            target=_self 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;7</A>.</P>
            <P>When the hyperlink is clicked, its Click event handler gets the 
            order that is currently selected, passes it to ViewOrderPage during 
            instantiation, and calls its host NavigationWindow's Navigate 
            method, which then navigates to the page as an object, rather than 
            as a URI.</P>
            <P>You may find it odd to have to acquire a reference to the host 
            NavigationWindow. This is necessary because Page does not have 
            explicit knowledge about what is actually hosting it. Page can 
            determine the host using its Parent property, but Parent returns a 
            reference to a DependencyObject, rather than a strongly typed 
            reference to a particular host type. Thus, casting Parent to a 
            specific type implies that Page knows what can host it. But, as 
            you'll discover, Page can have different types of hosts. 
            Consequently, if you intend for your pages to be hosted by multiple 
            types of hosts, you need a host-independent way of programmatically 
            performing navigation.</P>
            <DIV style="MARGIN-TOP: 5px" align=right><A class=clsSmall 
            onclick="OpenMenu(contentbtn, contentmenu);" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#contents" 
            target=_self><IMG style="MARGIN-LEFT: 5px" height=8 
            alt="Back to top" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/top.gif" 
            width=18 align=bottom border=0></A></DIV><BR><A name=S6></A><SPAN 
            class=clsSubhead>NavigationService</SPAN><BR>
            <P>In Windows Presentation Foundation, independence between a page 
            and a page's host is established by NavigationService, which 
            implements the basic machinery of a navigation engine including 
            navigation, navigation history, navigation lifetime, content, and 
            finding a navigation service for a piece of content. <A 
            class=clsFigs 
            onclick="OpenUrl('default.aspx?loc=&amp;fig=true#fig8'); return false;" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/default.aspx?loc=&amp;fig=true#fig8" 
            target=_self 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;8</A> shows the 
            essential members of the NavigationService type.NavigationWindow 
            doesn't actually implement its own navigation engine; it uses its 
            own instance of NavigationService. With that in mind, Page can 
            actually get a reference to the NavigationService of the 
            NavigationWindow that hosts it using GetNavigationService: <PRE class=clsCode>// HomePage.xaml.cs (codebehind)
public partial class HomePage : Page 
{ 
  void viewHyperlink_Click(object sender, RoutedEventArgs e) 
  {
    // View Order
    ViewOrderPage page = new ViewOrderPage(GetSelectedOrder());
    NavigationService ns = 
      NavigationService.GetNavigationService(this);
    ns.Navigate(page);
  }

  Order GetSelectedOrder() { ... }
  ...
}
</PRE>This lets Page do navigation without any specific knowledge of 
            its host. This requirement is so common that Page provides a special 
            helper property, NavigationService, which has the same effect: <PRE class=clsCode>// HomePage.xaml.cs (code-behind)
public partial class HomePage : Page 
{ 
  void viewHyperlink_Click(object sender, RoutedEventArgs e) 
  {
    // View Order
    ViewOrderPage page = new ViewOrderPage(GetSelectedOrder());
    this.NavigationService.Navigate(page);
  }
  
  Order GetSelectedOrder () { ... }
  ...
}</PRE>
            <P></P>
            <P><SPAN class=clsFigs 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;9</SPAN> 
            illustrates the relationship between NavigationWindow, 
            NavigationService, and Page. As you can see, NavigationWindow 
            re-implements its NavigationService's Content property. 
            NavigationWindow re-implements the majority of NavigationService's 
            members in this way, and even adds some more. For example, you can 
            enumerate the content in back and forward navigation history via the 
            BackStack and ForwardStack properties, respectively.</P>
            <DIV id=124123 
            style="DISPLAY: block; FLOAT: right; MARGIN: 5px 0px 10px 5px; WIDTH: 123px"><IMG 
            height=124 alt="Figure 9 The Relationship" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig09.gif" 
            width=123 border=0><BR><SPAN class=clsCap>Figure 9</SPAN>&nbsp;<SPAN 
            class=clsCaptxt>The Relationship</SPAN></DIV>
            <P>Unfortunately, you can't create your own custom type that 
            aggregates NavigationService (even though it is a public type, it 
            has an internal constructor that consequently prevents 
            instantiation). Instead, you have to rely on one of three Windows 
            Presentation Foundation NavigationService aggregators to host 
            content. Collectively, these are known as navigators and include 
            NavigationWindow, Frame, and browsers (only Internet Explorer<SUP 
            class=clsSmall>®</SUP> versions 6 and 7 for Windows Presentation 
            Foundation version 1.0). When a page is coded to use its own 
            NavigationService property, it can be hosted in all three without 
            change, as <SPAN class=clsFigs 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;10</SPAN> 
            illustrates.</P>
            <DIV id=99261 
            style="DISPLAY: block; MARGIN: 5px 0px 10px 5px; WIDTH: 261px"><IMG 
            height=99 alt="Figure 10 Using Code for Navigation" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig10.gif" 
            width=261 border=0><BR><SPAN class=clsCap>Figure 
            10</SPAN>&nbsp;<SPAN class=clsCaptxt>Using Code for 
            Navigation</SPAN></DIV>
            <P>Perhaps most exciting is that you can take a page hosted within a 
            single standalone application and suddenly you're able to host it 
            anywhere using Internet Explorer.</P>
            <DIV style="MARGIN-TOP: 5px" align=right><A class=clsSmall 
            onclick="OpenMenu(contentbtn, contentmenu);" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#contents" 
            target=_self><IMG style="MARGIN-LEFT: 5px" height=8 
            alt="Back to top" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/top.gif" 
            width=18 align=bottom border=0></A></DIV><BR><A name=S7></A><SPAN 
            class=clsSubhead>XAML Browser Applications </SPAN><BR>
            <P>NavigationWindow, Page, and Hyperlink provide a nice way to offer 
            browser-style user experiences in a standalone application. In one 
            sense, NavigationWindow is a browser, though without all the frills 
            built into today's browsers like favorites, tabbed browsing, and the 
            like. Since most users are browser savvy, many will feel more 
            comfortable with an application that provides the same level of 
            capability or, indeed, integrates with browsers. If your application 
            will benefit from a browser-hosted and hyperlink-driven environment, 
            Windows Presentation Foundation XAML Browser Applications (XBAPs) 
            are the way to go.</P>
            <P>To create an XBAP version of the sample application, create a new 
            .NET Framework 3.0 Web Browser Application in Visual Studio 2005, 
            copy the files from the NavigationWindow version of the sample 
            (excluding the application definition), and voilà. The resulting 
            application will run hosted by Internet Explorer, as shown in <SPAN 
            class=clsFigs 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;11</SPAN>.</P>
            <DIV id=298400 
            style="DISPLAY: block; MARGIN: 5px 0px 10px 5px; WIDTH: 400px"><IMG 
            height=298 alt="Figure 11 App Hosted by Internet Explorer" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig11.gif" 
            width=400 border=0><BR><SPAN class=clsCap>Figure 
            11</SPAN>&nbsp;<SPAN class=clsCaptxt>App Hosted by Internet 
            Explorer</SPAN></DIV>
            <P>XBAPs can also be published to and launched from Web servers, on 
            either the intranet or the Internet. This is made possible through 
            ClickOnce Deployment, which is included with the .NET Framework 3.0. 
            To use ClickOnce, MSBuild generates the executable that users 
            ultimately run, as well as two manifest files that ClickOnce 
            requires for downloading and launching the executable. One of these 
            is known as the application manifest; it has the .xbap file 
            extension and is what users actually browse to when they want to 
            launch an XBAP. Note that the launch process is seamless to the 
            user—the experience of browsing to an XBAP application is like 
            browsing to any application running in a browser.</P>
            <P>When an application can be launched from the Internet, security 
            is a significant factor. For this reason, XBAPs are not installed. 
            Furthermore, XBAPs leverage the .NET Framework's Code Access 
            Security (CAS) to protect users from malicious code through the use 
            of an enforced security sandbox—XBAPs can only do things that are 
            allowed for apps launched from the Internet zone, a restricted set 
            of operations. Furthermore, if an XBAP attempts to execute 
            functionality that exceeds what is enabled by the Internet zone, an 
            exception is thrown and the application stops executing.</P>
            <P>Internet zone permissions prevent a variety of capabilities in 
            Windows Presentation Foundation version 1.0, including showing 
            windows, using the SaveFileDialog, registry access, and accessing 
            the HTML Document Object Model (DOM) via script. While you need to 
            sacrifice features like these to enjoy the benefits of CAS-secured 
            XBAP applications, you still have most of what is really cool about 
            Windows Presentation Foundation at your command.</P>
            <DIV style="MARGIN-TOP: 5px" align=right><A class=clsSmall 
            onclick="OpenMenu(contentbtn, contentmenu);" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#contents" 
            target=_self><IMG style="MARGIN-LEFT: 5px" height=8 
            alt="Back to top" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/top.gif" 
            width=18 align=bottom border=0></A></DIV><BR><A name=S8></A><SPAN 
            class=clsSubhead>Frame</SPAN><BR>
            <P>Frame embeds browser-style user experiences into content that may 
            be hosted by other navigators (standalone or browser-based, menu- or 
            hyperlink-driven). Given its flexibility, you should be guided by 
            your intended user experience when determining how to use it.</P>
            <P>Standalone, menu-driven applications don't provide the best model 
            for navigating through document-style content, such as a help file. 
            A hyperlink-driven approach may be more suitable and links can be 
            easily embedded into a standalone application's window, as shown in 
            <SPAN class=clsFigs 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;12</SPAN>. This 
            is enabled with the following markup: <PRE class=clsCode>    &lt;!--HelpDialog.xaml (markup)--&gt;
&lt;Window ... &gt;
    &lt;DockPanel&gt;
        &lt;TextBlock 
          Padding="20,20,20,20" 
          DockPanel.Dock="Top" 
          TextWrapping="Wrap" 
          FontSize="15" 
          FontWeight="Bold" &gt;
            Box Application Help
        &lt;/TextBlock&gt;
        &lt;Frame Padding="20,0,20,0"           Source="HelpPageContents.xaml" /&gt;
    &lt;/DockPanel&gt;
&lt;/Window&gt;
</PRE>Alternatively, Frame can be used much like the HTML IFRAME 
            element by being hosted within the content of a Windows Presentation 
            Foundation page, as shown in <SPAN class=clsFigs 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;13</SPAN>. The 
            markup will look like this: <PRE class=clsCode> &lt;!--HelpPage.xaml (markup)--&gt;
 &lt;Page ... &gt;
     &lt;DockPanel&gt;
         &lt;TextBlock 
           Padding="20,20,20,20" 
           DockPanel.Dock="Top" 
           TextWrapping="Wrap" 
           FontSize="15" 
           FontWeight="Bold" &gt;
             Box Application Help
         &lt;/TextBlock&gt;
         &lt;Frame ... Source="HelpPageContents.xaml" /&gt;
     &lt;/DockPanel&gt;
 &lt;/Page&gt;</PRE>
            <P></P>
            <DIV id=220436 style="DISPLAY: none; WIDTH: 436px"><A 
            href="javascript:ToggleImages('220436',%20'202400');"><IMG 
            height=220 alt="Figure 12 Browsable Content in a Standalone Window" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig12_L.gif" 
            width=436 border=0></A><BR><SPAN class=clsCap>Figure 
            12</SPAN>&nbsp;<SPAN class=clsCaptxt>Browsable Content in a 
            Standalone Window (Click the image for a smaller view) </SPAN></DIV>
            <DIV id=202400 
            style="DISPLAY: block; MARGIN: 5px 0px 10px 5px; WIDTH: 400px"><A 
            href="javascript:ToggleImages('202400',%20'220436');"><IMG 
            height=202 alt="Figure 12 Browsable Content in a Standalone Window" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig12.gif" 
            width=400 border=0></A><BR><SPAN class=clsCap>Figure 
            12</SPAN>&nbsp;<SPAN class=clsCaptxt>Browsable Content in a 
            Standalone Window (Click the image for a larger view) </SPAN></DIV>
            <P>By default, when a frame is hosted within content that is itself 
            directly or indirectly hosted by another navigator, the frame uses 
            the navigation service that is managed by the parent navigator. This 
            means that the frame's navigation history is really stored in its 
            parent navigator's navigation history, along with the parent 
            navigator's own navigation history. Thus, the frame's navigation 
            history must be navigated all the way back or forward before the 
            parent navigator's navigation history can be navigated. However, 
            this is not a bad thing if your parent navigator hosts content that 
            can be shared across the one or more pages. This is somewhat 
            analogous to ASP.NET's master/child content.</P>
            <DIV id=304443 style="DISPLAY: none; WIDTH: 443px"><A 
            href="javascript:ToggleImages('304443',%20'274400');"><IMG 
            height=304 alt="Figure 13 Frame Hosted within Content" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig13_L.gif" 
            width=443 border=0></A><BR><SPAN class=clsCap>Figure 
            13</SPAN>&nbsp;<SPAN class=clsCaptxt>Frame Hosted within Content 
            (Click the image for a smaller view) </SPAN></DIV>
            <DIV id=274400 
            style="DISPLAY: block; MARGIN: 5px 0px 10px 5px; WIDTH: 400px"><A 
            href="javascript:ToggleImages('274400',%20'304443');"><IMG 
            height=274 alt="Figure 13 Frame Hosted within Content" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig13.gif" 
            width=400 border=0></A><BR><SPAN class=clsCap>Figure 
            13</SPAN>&nbsp;<SPAN class=clsCaptxt>Frame Hosted within Content 
            (Click the image for a larger view) </SPAN></DIV>
            <P>On the other hand, such navigation can be painful for users when 
            the pages in a frame make up a single logical set of content—for 
            instance, a help file rather than one or more help pages. Once a 
            user goes to Help and navigates to the appropriate help page, he is 
            unlikely to want to navigate back through all the help pages he 
            browsed; instead, he'll probably want to go straight back to the 
            previous parent page. In this situation, you can instruct a frame to 
            use its own navigation history by setting its JournalOwnership 
            property like so: <PRE class=clsCode>&lt;Page ... &gt;
  ...
  &lt;Frame ... JournalOwnership="OwnsJournal" /&gt;
  ...
&lt;/Page&gt;
</PRE>JournalOwnership is a property you set to determine which 
            "journal" a frame will use (the internal Journal type encapsulates 
            navigation history in Windows Presentation Foundation), and can be 
            one of the JournalOwnership enumeration values: <PRE class=clsCode>enum JournalOwnership 
{
  Automatic,        // "UsesParentJournal" if hosted by Frame or 
                    // NavigationWindow, "OwnsJournal" otherwise. 
                    // (default)
  OwnsJournal,      // Frame manages navigation history
  UsesParentJournal // Frame's host manages navigation history
}</PRE>
            <P></P>
            <P>When Frame has its own navigation history, it displays its own 
            navigation user interface to visually reinforce the distinction, as 
            shown in <SPAN class=clsFigs 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;14</SPAN>.</P>&gt; 

            <DIV id=324441 style="DISPLAY: none; WIDTH: 441px"><A 
            href="javascript:ToggleImages('324441',%20'294400');"><IMG 
            height=324 alt="Figure 14 Frame with Its Own Navigation History" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig14_L.gif" 
            width=441 border=0></A><BR><SPAN class=clsCap>Figure 
            14</SPAN>&nbsp;<SPAN class=clsCaptxt>Frame with Its Own Navigation 
            History (Click the image for a smaller view) </SPAN></DIV>
            <DIV id=294400 
            style="DISPLAY: block; MARGIN: 5px 0px 10px 5px; WIDTH: 400px"><A 
            href="javascript:ToggleImages('294400',%20'324441');"><IMG 
            height=294 alt="Figure 14 Frame with Its Own Navigation History" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/fig14.gif" 
            width=400 border=0></A><BR><SPAN class=clsCap>Figure 
            14</SPAN>&nbsp;<SPAN class=clsCaptxt>Frame with Its Own Navigation 
            History (Click the image for a larger view) </SPAN></DIV>
            <DIV style="MARGIN-TOP: 5px" align=right><A class=clsSmall 
            onclick="OpenMenu(contentbtn, contentmenu);" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#contents" 
            target=_self><IMG style="MARGIN-LEFT: 5px" height=8 
            alt="Back to top" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/top.gif" 
            width=18 align=bottom border=0></A></DIV><BR><A name=S9></A><SPAN 
            class=clsSubhead>Windows Presentation Foundation 
Resources</SPAN><BR>
            <P>So far, I've discussed pages that are embedded into an 
            application assembly. However, content can be loaded from a variety 
            of locations—it can be embedded in the same assembly as the code 
            that uses it, it can be embedded in a referenced assembly, or it can 
            consist of loose content files that are not embedded into any 
            assembly at all. Loose content itself can be located on the local 
            disk, a file share, or even a Web site. And, whether a piece of 
            content is embedded or loose, it doesn't have to be a page; content 
            can include a variety of media, such as images, video, and audio. 
            Finally, content doesn't even have to belong to a particular 
            application. HTML pages that belong to other Web applications are 
            also fair game.</P>
            <P>This flexibility allows developers to more easily deal with a 
            variety of real-world scenarios. Sometimes content is specific 
            enough to an application, and an application is so dependent on this 
            content, that it makes the most sense to deploy the content with the 
            application by embedding it right in the assembly. Some applications 
            have content that changes regularly enough that constantly 
            rebuilding assemblies to redeploy new content is impractical, hence 
            the support for loose content (and since loose content can reside in 
            a common location, Internet- and intranet-based XBAP applications 
            can avoid downloading assemblies that aren't needed). Furthermore, 
            sometimes content is shared by more than one application, but there 
            still needs to be a guarantee that it is available.</P>
            <P>To enable this flexibility, Windows Presentation Foundation 
            incorporates a special mechanism for uniquely identifying and 
            loading resources. It doesn't matter where content resides or 
            whether the content is embedded or loose. The foundation of this 
            mechanism is the Pack URI scheme, which is an extensible scheme for 
            identifying application resources with unique URIs. Windows 
            Presentation Foundation uses the Pack URI scheme to support several 
            different, but common, scenarios for loading content.</P>
            <P>Throughout this article, the sample code has used Pack URIs to 
            identify and load windows and pages, whenever Application.StartupUri 
            and Hyperlink.NavigateUri have been used: <PRE class=clsCode>&lt;!--App.xaml (markup)--&gt;
&lt;Application ... StartupUri="HomePage.xaml" /&gt;
</PRE>This example uses the relative version of the Pack URI, which 
            is a nice simplification that allows you to type less. The absolute 
            version of this Pack URI is shown here: <PRE class=clsCode>pack://application:,,,/HomePage.xaml</PRE>
            <P></P>
            <P>The absolute Pack URI is composed of three key parts: the scheme 
            (pack://), the authority (application:), and the path 
            (,/HomePage.xaml). The authority describes the type of container 
            that has a resource, while the path describes the location of that 
            resource relative to the container. An "application:" container is 
            really an assembly, and the path is the location of a resource 
            relative to the root of the assembly.</P>
            <P>Whether an absolute or relative Pack URI is used, the content 
            that it refers to can either be embedded within an assembly or exist 
            as a loose XAML file that is stored in a location relative to the 
            application executable. For a loose XAML page that is in the same 
            folder as the application executable, the Pack URI looks like this: <PRE class=clsCode>pack://application:,,,/HomePage.xaml</PRE>
            <P></P>
            <P>Interestingly, the Pack URI for the loose XAML file is the same 
            as the Pack URI for an embedded file of the same name. To 
            distinguish between the two, Windows Presentation Foundation uses a 
            basic resolution mechanism that first looks in the assembly for an 
            embedded resource before looking for a loose resource.</P>
            <P>A Pack URI can also be used to access Windows Presentation 
            Foundation resources that are embedded in referenced assemblies, 
            although with a slightly different syntax: <PRE class=clsCode>pack://application:,,,/BoxApplicationLibrary;component/HomePage.xaml
</PRE>The relative Pack URI equivalent is: <PRE class=clsCode>/BoxApplicationLibrary;component/HomePage.xaml</PRE>
            <P></P>
            <P>The Pack URI allows you to both locate and load a resource from 
            the application's site of origin, that is, the location from which 
            it is launched. For XBAP applications launched from a Web server, 
            keeping content current is as simple as dropping new content onto 
            the application's publish location. To access loose resources 
            located at the site of origin, you need to use another special type 
            of Pack URI that can only be used absolutely: <PRE class=clsCode>pack://siteoforigin:,,,/HomePage.xaml</PRE>
            <P></P>
            <P>For any page (embedded or loose), you can enable navigation to a 
            fragment on the page. This is just like Web-style fragment 
            navigation. You define a fragment on a page by giving a XAML element 
            a Name attribute, like so: <PRE class=clsCode>&lt;Page ... &gt;
   &lt;TextBlock Name="Paragraph1" TextWrapping="Wrap"&gt;
     ...
   &lt;/TextBlock&gt;
&lt;/Page&gt;
</PRE>To navigate to a page fragment, you use yet another special 
            Pack URI, by suffixing the page URI with "#XAMLElementName", like 
            this: <PRE class=clsCode>HelpPage3.xaml#Paragraph3</PRE>
            <P></P>
            <DIV style="MARGIN-TOP: 5px" align=right><A class=clsSmall 
            onclick="OpenMenu(contentbtn, contentmenu);" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#contents" 
            target=_self><IMG style="MARGIN-LEFT: 5px" height=8 
            alt="Back to top" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/top.gif" 
            width=18 align=bottom border=0></A></DIV><BR><A name=S10></A><SPAN 
            class=clsSubhead>PageFunction</SPAN><BR>
            <P>With content coming from a variety of locations, and 
            hyperlink-driven applications allowing navigation to any number of 
            other locations, completing a task can be difficult. This is because 
            hyperlink-driven applications can't easily constrain users to 
            navigating to specific pages. No matter how many hyperlinks an 
            application provides, users can still go anywhere they want using 
            the browser's address bar. As a result, a user can leave the page 
            that initiated processing of a task without knowing whether or not 
            the task was completed. In the Web world, there are plenty of tricks 
            to create pseudo-dialog style behaviors for Web pages, relying on 
            session state and the like. Unfortunately, this requires a lot of 
            overhead. Dialogs do solve the problem, but for security reasons 
            Window cannot be instantiated from applications, such as XBAPs, that 
            run within Internet Zone partial trust.</P>
            <P>Fortunately, Windows Presentation Foundation supports modal 
            dialog-style mechanics with page functions. These are encapsulated 
            as the generic PageFunction type, which derives indirectly from 
            Page. Consequently, a PageFunction looks much like a Page, and is 
            also built similarly, as you can see in <A class=clsFigs 
            onclick="OpenUrl('default.aspx?loc=&amp;fig=true#fig15'); return false;" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/default.aspx?loc=&amp;fig=true#fig15" 
            target=_self 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;15</A>.</P>
            <P>The purpose of this particular page function is to collect new 
            order information, which is encapsulated by Order. Because tasks 
            typically operate over data in this way, PageFunction is generic and 
            is declared to operate over a specific piece of data, hence the 
            special x:TypeArguments attribute for markup. If the value of 
            x:TypeArguments and the generic PageFunction's type argument don't 
            match, you will get a compilation error.</P>
            <P>To call a PageFunction, the calling page needs to instantiate a 
            PageFunction and manually navigate to it: <PRE class=clsCode>// HomePage.cs (codebehind)
public partial class HomePage : Page 
{
  void orderHyperlink_Click(object sender, RoutedEventArgs e) 
  {
    OrderABoxPageFunction pageFunction = new OrderABoxPageFunction();
    pageFunction.Return += new ReturnEventHandler&lt;Order&gt;(
      OrderABoxPageFunction_Returned);
    this.NavigationService.Navigate(pageFunction);
  }
  ...
}
</PRE>Next, the PageFunction needs to allow a user to complete the 
            page before returning the result to the calling page: <PRE class=clsCode>// OrderABoxPageFunction.cs (codebehind)
public partial class OrderABoxPageFunction: 
  PageFunction&lt;Order&gt; 
{
  void orderHyperlink_Click(object sender, RoutedEventArgs e) 
  {
    // Return order
    this.OnReturn(new ReturnEventArgs&lt;Order&gt;(this.order));
  }
  void cancelHyperlink_Click(object sender, RoutedEventArgs e) 
  {
    // Cancel order
    this.OnReturn(null);
  }
  ...
}</PRE>
            <P></P>
            <P>PageFunction.OnReturn is called to return, passing an instance of 
            the generic ReturnEventArgs. If the task is accepted, this contains 
            an instance of the type over which the PageFunction operates. 
            Otherwise, it's null. To detect PageFunction return, and to acquire 
            the ReturnEventArgs and its data, the calling page needs to handle 
            PageFunction.Returned, as shown in <A class=clsFigs 
            onclick="OpenUrl('default.aspx?loc=&amp;fig=true#fig16'); return false;" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/default.aspx?loc=&amp;fig=true#fig16" 
            target=_self 
            xmlns:user="http://msdn.microsoft.com">Figure&nbsp;16</A>. The 
            returned data is available from the Result property of the Returned 
            event handler's ReturnEventArgs.</P>
            <P>You'll likely want to ensure a PageFunction is removed from 
            navigation history after the task completes. This requires only a 
            simple configuration: <PRE class=clsCode>&lt;!--OrderABoxPageFunction.xaml (markup) --&gt;
&lt;PageFunction RemoveFromJournal="True" ... &gt;
  ...
  &lt;!--Content--&gt;
  ...
&lt;PageFunction&gt;
</PRE>By removing the page function from navigation history, you 
            prevent users from navigating back to the page function. This is 
            important because users may otherwise be able to edit data that has 
            changed since the last time a page function was accessed, creating 
            the potential for inconsistencies in the data.
            <P></P>
            <P>Note that a task can be composed from more than one page of 
            content, which is common for wizard-style user experiences. 
            PageFunction is equally capable in this situation, since it is 
            possible to use the same techniques for operating over one page 
            function as for operating over multiple page functions.</P>
            <DIV style="MARGIN-TOP: 5px" align=right><A class=clsSmall 
            onclick="OpenMenu(contentbtn, contentmenu);" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#contents" 
            target=_self><IMG style="MARGIN-LEFT: 5px" height=8 
            alt="Back to top" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/top.gif" 
            width=18 align=bottom border=0></A></DIV><BR><A name=S11></A><SPAN 
            class=clsSubhead>Where Are We?</SPAN><BR>
            <P>The Windows Presentation Foundation application model is 
            extremely flexible. At its most basic, it enables both standalone 
            and browser-hosted applications—both of which support menu-driven 
            and hyperlink-driven navigation. Furthermore, application content 
            can be packaged in either the application's assembly, in a 
            referenced assembly, or as loose files located in a number of 
            places. All in all, the type of user experience you create within 
            the Windows Presentation Foundation application model is limited 
            only by what you choose to do. </P>
            <DIV style="MARGIN-TOP: 5px" align=right><A class=clsSmall 
            onclick="OpenMenu(contentbtn, contentmenu);" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#contents" 
            target=_self><IMG style="MARGIN-LEFT: 5px" height=8 
            alt="Back to top" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/top.gif" 
            width=18 align=bottom border=0></A></DIV><BR>
            <P>For more information, see the <A 
            href="http://msdn2.microsoft.com/ms754130.aspx">Windows Presentation 
            Foundation SDK</A>. </P><BR>
            <TABLE cellSpacing=0 cellPadding=5 width="100%" border=0>
              <TBODY>
              <TR>
                <TD vAlign=top><IMG 
                  style="BORDER-RIGHT: 0px; BORDER-TOP: 0px; BORDER-LEFT: 0px; BORDER-BOTTOM: 0px" 
                  height=16 alt="Download Image" hspace=5 
                  src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/icodownl.gif" 
                  width=16><B> NEW: <A 
                  href="http://msdn.microsoft.com/msdnmag/code/?url=http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/Default.aspx">Explore</A> 
                  the sample code online! </B>- or - <B>Code download available 
                  at: </B><A 
                  href="http://download.microsoft.com/download/f/2/7/f279e71e-efb0-4155-873d-5554a0608523/WPF2006_10.exe">WPF2006_10.exe</A> 
                  (214KB) </TD></TR></TBODY></TABLE></DIV>
            <HR>
            <SPAN class=clsBio><B>Michael Weinhardt</B> is a programmer/writer 
            at Microsoft, working on the Windows Client SDK. Michael has 
            coauthored a variety of articles, contributed to the "Wonders of 
            Windows Forms" column at MSDN Online, reviewed several Windows 
            technology books, and coauthored Windows Forms 2.0 Programming 
            (Addison-Wesley Professional, 2006). </SPAN><BR>
            <HR>
            <A href="http://msdn.microsoft.com/msdnmag/subscribe.aspx"><IMG 
            style="MARGIN: 0px; VERTICAL-ALIGN: top; align: left" height=44 
            alt=Subscribe 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/subbutton.gif" 
            width=121 border=0></A> &nbsp;From the&nbsp;<A 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/default.aspx">October 
            2006</A>&nbsp;issue of&nbsp;<A 
            href="http://msdn.microsoft.com/msdnmag/default.aspx">MSDN 
            Magazine</A>. 
            <HR>
            <A name=bottom></A><A class=clsSmall style="FLOAT: left" 
            href="http://msdn.microsoft.com/msdnmag/issues/06/10/appfundamentals/#top"><IMG 
            height=8 alt="Back to top" 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/top.gif" 
            width=18 border=0>Back to top </A><SPAN style="FLOAT: right"><B>QJ: 
            </B>061003</SPAN><BR>
            <HR>
            <SPAN class=clsSmall>© 2007 Microsoft Corporation and CMP Media, 
            LLC. All rights reserved; reproduction in part or in whole without 
            permission is prohibited.</SPAN></TD>
          <TD width=150><A name=bottom></A><IFRAME 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/msdn_premium.htm" 
            frameBorder=0 width=145 scrolling=no 
        height=2000></IFRAME></TD></TR></TBODY></TABLE>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD class=clsDocBody>
            <DIV><SPAN class=clsSubhead></SPAN></DIV>
            <DIV><!--  -->
            <UL></UL></DIV></TD>
          <TD width=150></TD></TR></TBODY></TABLE>
      <TABLE style="WIDTH: 100%" cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD style="WIDTH: 500px" noWrap></TD></TR>
        <TR>
          <TD><IFRAME id=frmRatings 
            src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/ratings.htm" 
            frameBorder=0 width="100%" scrolling=no 
        height=250></IFRAME></TD></TR></TBODY></TABLE><!-----------------><!--END_CONTENT--><!-----------------></TD></TR></TBODY></TABLE><!--NOINDEX_START--><BR 
style="OVERFLOW: hidden; LINE-HEIGHT: 1px" clear=all>
<TABLE id=msviFooter cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR vAlign=bottom>
    <TD id=msviFooter2 
    style="FILTER: progid:DXImageTransform.Microsoft.Gradient(startColorStr='#FFFFFF', endColorStr='#669AFF', gradientType='1')">
      <DIV id=msviLocalFooter><NOBR><A 
      href="http://go.microsoft.com/?linkid=317027">Manage Your Profile</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/isapi/gomscom.asp?TARGET=/legal/" 
      target=_parent>Legal</A> |</NOBR><WBR><NOBR><A 
      href="http://go.microsoft.com/?linkid=2028439" target=_parent>Contact 
      us</A> |</NOBR><WBR><NOBR><A href="http://msdn.microsoft.com/flash/" 
      target=_parent>MSDN Flash Newsletter</A></NOBR></DIV>
      <DIV id=msviGlobalFooter><SPAN dir=ltr>© 2007 Microsoft Corporation. All 
      rights reserved.&nbsp;</SPAN><NOBR><A 
      href="http://www.microsoft.com/info/cpyright.mspx">Terms of Use</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://msdn.microsoft.com/library/toolbar/3.0/trademarks/en-us.mspx">Trademarks</A> 
      |</NOBR><WBR><NOBR><A 
      href="http://www.microsoft.com/info/privacy.mspx">Privacy 
      Statement</A></NOBR></DIV></TD>
    <TD width=105 bgColor=#669aff><IMG title="" height=29 alt=Microsoft 
      src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/text.jpg" 
      width=105 border=0></TD></TR></TBODY></TABLE>
<SCRIPT language=javascript>var msviFooter2;if (document.getElementById){msviFooter2 = document.getElementById("msviFooter2");msviFooter2.style.filter = "";}</SCRIPT>

<TABLE height=58 cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR vAlign=top>
    <TD>
      <DIV style="WIDTH: 200px"></DIV></TD>
    <TD 
    style="FILTER: progid:DXImageTransform.Microsoft.Gradient(startColorStr='#FFFFFF', endColorStr='#669AFF', gradientType='1')" 
    width="100%"></TD></TR></TBODY></TABLE><LAYER visibility="hide">
<DIV style="DISPLAY: none"><IMG height=0 hspace=0 
src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/trans_pixel.gif" 
width=0 border=0></DIV></LAYER>
<SCRIPT language=javascript type=text/javascript>
var gDomain="m.webtrends.com";
var gDcsId="dcsmgru7m99k7mqmgrhudo0k8_8c6m";
var gTrackEvents=1;
var wtsp="_msdnmag_"
var gFpc="WT_FPC";if(document.cookie.indexOf(gFpc+"=")==-1){document.write("<SCR"+"IPT TYPE='text/javascript' SRC='"+"http"+(window.location.protocol.indexOf('https:')==0?'s':'')+"://"+gDomain+"/"+gDcsId+"/wtid.js"+"'><\/SCR"+"IPT>");}
</SCRIPT>

<SCRIPT 
src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/webtrends.js" 
type=text/javascript></SCRIPT>
<NOSCRIPT><IMG id=DCSIMG height=1 alt="" 
src="App Fundamentals Build A Great User Experience With Windows Presentation Foundation -- MSDN Magazine, October 2006_files/njs.gif" 
width=1 border=0> </NOSCRIPT></BODY></HTML>

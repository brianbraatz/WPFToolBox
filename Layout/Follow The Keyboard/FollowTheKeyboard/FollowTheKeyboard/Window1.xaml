<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xml:lang="en-US"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2006" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	x:Class="FollowTheKeyboard.Window1"
	x:Name="Window"
	Title="Follow The Keyboard"
	Width="640" Height="480" TabIndex="0">

	<Window.Resources>
		<ControlTemplate TargetType="{x:Type ContentControl}" x:Key="ContentControlControlTemplate1" >
			<Grid x:Name="Grid" >
				<Rectangle RadiusX="10" RadiusY="10" x:Name="Rectangle" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" Margin="5,5,5,5"/>
				<ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Center" Margin="5,5,0,5" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
			</Grid>
		</ControlTemplate>
	</Window.Resources>

	<Grid x:Name="LayoutRoot">
		<Grid.Background>
			<LinearGradientBrush EndPoint="0.5,0.0" StartPoint="0.5,1.0">
				<GradientStop Color="#FF545454" Offset="0"/>
				<GradientStop Color="#FFFFFFFF" Offset="1"/>
				<GradientStop Color="#FF232323" Offset="0.155"/>
				<GradientStop Color="#FF797878" Offset="0.845"/>
			</LinearGradientBrush>
		</Grid.Background>
		<DockPanel Margin="8,8,8,8" x:Name="DockPanel"  LastChildFill="False">
			<TextBlock HorizontalAlignment="Right" Margin="4,4,4,4" x:Name="SampleTitle"  TextWrapping="Wrap" DockPanel.Dock="Top">
				<Run FontSize="14" FontWeight="Bold">FollowTheKeyboard</Run>
			</TextBlock>
			<TextBlock HorizontalAlignment="Right" Margin="4,4,4,4" x:Name="SampleDescription"  TextWrapping="Wrap" DockPanel.Dock="Top">
				<Run FontSize="12" FontWeight="Bold">Click the gold control, then use the arrow keys to move it around the screen.</Run>
			</TextBlock>
			<StackPanel Margin="4,4,4,4" x:Name="ControlStack" Height="Auto" DockPanel.Dock="Right" VerticalAlignment="Center">
				<StackPanel.Background>
					<LinearGradientBrush EndPoint="0.508,-0.004" StartPoint="0.508,1.008">
						<GradientStop Color="#C7E5E5E5" Offset="0"/>
						<GradientStop Color="#FFFFFFFF" Offset="1"/>
						<GradientStop Color="#A49C9C9C" Offset="0.376"/>
					</LinearGradientBrush>
				</StackPanel.Background>
				<Label Margin="4,4,4,2" x:Name="SpeedLabel" Content="Speed:"/>
				<Slider Margin="4,2,4,4" x:Name="SpeedSlider" TabIndex="2" Value="10" Maximum="40" Minimum="1" SmallChange="1" LargeChange="5"/>
				<Label Margin="4,4,4,2" x:Name="SizeLabel" Content="Size:"/>
				<Slider Margin="4,2,4,4" x:Name="SizeSlider" TabIndex="3" Value="100" Maximum="500" Minimum="50" SmallChange="1" LargeChange="5"/>
				<Label Margin="4,4,4,2" x:Name="ContentLabel" Content="Content:" />
				<TextBox Margin="4,2,4,4" x:Name="ContentTextBox" TabIndex="4" Text="WPF" TextWrapping="Wrap"/>
				<CheckBox Margin="4,4,4,4" x:Name="ShowCodeCheckBox" Content="Show Code" TabIndex="5" IsChecked="True"/>
			</StackPanel>
			<FlowDocumentScrollViewer x:Name="SourceCodeViewer" Margin="4,4,4,4" Foreground="#4DFFFFFF" HorizontalAlignment="Left" VerticalAlignment="Top" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden" Visibility="Visible" Opacity="{Binding IsChecked, ElementName=ShowCodeCheckBox, Mode=Default}">
				<FlowDocument FontFamily="Tahoma" FontSize="12" xml:space="preserve">
					<Paragraph><Run>&lt;ContentControl</Run><LineBreak/><Run>  x:Name="MovableControl"</Run><LineBreak/><Run>  KeyDown="MovableControl_KeyDown"</Run><LineBreak/><Run>  MouseDown="MovableControl_MouseDown" [...]&gt;</Run></Paragraph>
					<Paragraph><Run>[...]</Run></Paragraph>
					<Paragraph><Run>private TranslateTransform translation = new TranslateTransform();</Run></Paragraph>
					<Paragraph><Run>public Window1()</Run><LineBreak/><Run>{</Run><LineBreak/><Run>    this.InitializeComponent();</Run><LineBreak/><Run>}</Run></Paragraph>
					<Paragraph><Run>protected override void OnInitialized(EventArgs e)</Run><LineBreak/><Run>{</Run><LineBreak/><Run>    base.OnInitialized(e);</Run><LineBreak/><Run>    this.MovableControl.RenderTransform = this.translation;</Run><LineBreak/><Run>    MovableControl.Focus();</Run><LineBreak/><Run>}</Run></Paragraph>
					<Paragraph><Run>private void MovableControl_MouseDown(object sender,</Run><LineBreak/><Run>    System.Windows.Input.MouseButtonEventArgs e)</Run><LineBreak/><Run>{</Run><LineBreak/><Run>    MovableControl.Focus();</Run><LineBreak/><Run>}</Run></Paragraph>
					<Paragraph><Run>private void MovableControl_KeyDown(object sender,</Run><LineBreak/><Run>    System.Windows.Input.KeyEventArgs e)</Run><LineBreak/><Run>{</Run><LineBreak/><Run>    double speed = this.SpeedSlider.Value;</Run><LineBreak/><Run>    e.Handled = true;</Run><LineBreak/><Run>    switch (e.Key)</Run><LineBreak/><Run>    {</Run><LineBreak/><Run>        case Key.Up:</Run><LineBreak/><Run>            this.translation.Y -= speed;</Run><LineBreak/><Run>            break;</Run><LineBreak/><Run>        case Key.Down:</Run><LineBreak/><Run>            this.translation.Y += speed;</Run><LineBreak/><Run>            break;</Run><LineBreak/><Run>        case Key.Left:</Run><LineBreak/><Run>            this.translation.X -= speed;</Run><LineBreak/><Run>            break;</Run><LineBreak/><Run>        case Key.Right:</Run><LineBreak/><Run>            this.translation.X += speed;</Run><LineBreak/><Run>            break;</Run><LineBreak/><Run>        case Key.Tab:</Run><LineBreak/><Run>            SpeedSlider.Focus();</Run><LineBreak/><Run>            break;</Run><LineBreak/><Run>        default:</Run><LineBreak/><Run>            e.Handled = false;</Run><LineBreak/><Run>            break;</Run><LineBreak/><Run>    }</Run><LineBreak/><Run>}</Run></Paragraph>
				</FlowDocument>
			</FlowDocumentScrollViewer>
		</DockPanel>
		<ContentControl x:Name="MovableControl" Template="{DynamicResource ContentControlControlTemplate1}" Width="{Binding Path=Value, ElementName=SizeSlider, Mode=Default}" Height="{Binding Path=Value, ElementName=SizeSlider, Mode=Default}" Foreground="#FFFFFFFF" KeyDown="MovableControl_KeyDown" MouseDown="MovableControl_MouseDown" TabIndex="1">
			<ContentControl.Background>
				<LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
					<GradientStop Color="#9F9D8635" Offset="0"/>
					<GradientStop Color="#7EFFF1BC" Offset="1"/>
					<GradientStop Color="#C84D472B" Offset="0.221"/>
				</LinearGradientBrush>
			</ContentControl.Background>
			<ContentControl.BorderBrush>
				<LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
					<GradientStop Color="#FFC0BEBE" Offset="0"/>
					<GradientStop Color="#FFE7E7E7" Offset="1"/>
					<GradientStop Color="#FF353535" Offset="0.508"/>
				</LinearGradientBrush>
			</ContentControl.BorderBrush>
			<TextBlock x:Name="ContentText"  Text="{Binding Path=Text, ElementName=ContentTextBox, Mode=Default}" TextWrapping="Wrap"/>
		</ContentControl>
		<RichTextBox x:Name="Sample_Information" Width="250" HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="Auto" Grid.RowSpan="2" IsReadOnly="True" Margin="-250,0,0,0">
				<FlowDocument>
					<Paragraph>The FollowTheKeyboard sample demonstrates how to use a mouse click to set keyboard focus to an element. When an element has keyboard focus, keyboard events are triggered which can be programmed against, as demonstrated in this sample.</Paragraph>
					<Paragraph>For more information, please see comments in the source code file (Window1.xaml.cs) and see the tutorial Follow the Keyboard that comes with this sample.</Paragraph>
				</FlowDocument>
		</RichTextBox>
	</Grid>
</Window>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head profile="http://gmpg.org/xfn/11"><title>PaulStovell.NET » XAML and WPF Coding Guidelines</title>



	

	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">	
	<meta name="generator" content="WordPress 2.1"><!-- leave this for stats please --> 

	<link rel="stylesheet" href="xaml-and-wpf-coding-guidelines_files/style.css" type="text/css" media="screen">
	<link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://feeds.feedburner.com/PaulStovell">
	<link rel="alternate" type="text/xml" title="RSS .92" href="http://feeds.feedburner.com/PaulStovell">
	<link rel="alternate" type="application/atom+xml" title="Atom 0.3" href="http://feeds.feedburner.com/PaulStovell">
	<link rel="pingback" href="http://www.paulstovell.net/blog/xmlrpc.php">

		<link rel="archives" title="October 2007" href="http://www.paulstovell.net/blog/index.php/2007/10/">
	<link rel="archives" title="September 2007" href="http://www.paulstovell.net/blog/index.php/2007/09/">
	<link rel="archives" title="August 2007" href="http://www.paulstovell.net/blog/index.php/2007/08/">
	<link rel="archives" title="July 2007" href="http://www.paulstovell.net/blog/index.php/2007/07/">
	<link rel="archives" title="June 2007" href="http://www.paulstovell.net/blog/index.php/2007/06/">
	<link rel="archives" title="May 2007" href="http://www.paulstovell.net/blog/index.php/2007/05/">
	<link rel="archives" title="April 2007" href="http://www.paulstovell.net/blog/index.php/2007/04/">
	<link rel="archives" title="March 2007" href="http://www.paulstovell.net/blog/index.php/2007/03/">
	<link rel="archives" title="February 2007" href="http://www.paulstovell.net/blog/index.php/2007/02/">
	<link rel="archives" title="January 2007" href="http://www.paulstovell.net/blog/index.php/2007/01/">
	<link rel="archives" title="December 2006" href="http://www.paulstovell.net/blog/index.php/2006/12/">
	<link rel="archives" title="November 2006" href="http://www.paulstovell.net/blog/index.php/2006/11/">
	<link rel="archives" title="October 2006" href="http://www.paulstovell.net/blog/index.php/2006/10/">
	<link rel="archives" title="September 2006" href="http://www.paulstovell.net/blog/index.php/2006/09/">
	<link rel="archives" title="August 2006" href="http://www.paulstovell.net/blog/index.php/2006/08/">
	<link rel="archives" title="July 2006" href="http://www.paulstovell.net/blog/index.php/2006/07/">
	<link rel="archives" title="June 2006" href="http://www.paulstovell.net/blog/index.php/2006/06/">
	<link rel="archives" title="May 2006" href="http://www.paulstovell.net/blog/index.php/2006/05/">
	<link rel="archives" title="March 2006" href="http://www.paulstovell.net/blog/index.php/2006/03/">
	<link rel="archives" title="February 2006" href="http://www.paulstovell.net/blog/index.php/2006/02/">
	<link rel="archives" title="January 2006" href="http://www.paulstovell.net/blog/index.php/2006/01/">
	<link rel="archives" title="December 2005" href="http://www.paulstovell.net/blog/index.php/2005/12/">
	<link rel="archives" title="November 2005" href="http://www.paulstovell.net/blog/index.php/2005/11/">
	<link rel="archives" title="October 2005" href="http://www.paulstovell.net/blog/index.php/2005/10/">
	<link rel="archives" title="September 2005" href="http://www.paulstovell.net/blog/index.php/2005/09/">
			<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.paulstovell.net/blog/xmlrpc.php?rsd">
<meta name="FAlbum" content="0.6.9">
<link rel="stylesheet" href="xaml-and-wpf-coding-guidelines_files/falbum.css" type="text/css"></head><body><div id="container">

<div id="header">

	<div id="menu">
		<ul>
			<li><a href="http://www.paulstovell.net/blog/" title="PaulStovell.NET">Home</a></li>
			<li><a href="http://www.paulstovell.net/blog/index.php/about/" title="About">About</a></li>
                        <li><a href="http://www.paulstovell.net/blog/index.php/presentations/" title="Presentations">Presentations</a></li>
                      <li><a href="http://www.paulstovell.net/blog/index.php/xaml-and-wpf-coding-guidelines/" title="XAML and WPF Coding Guidelines">XAML and WPF Coding Guidelines</a></li>
		</ul>
	</div>

	<div id="pagetitle">
		<h1><a href="http://www.paulstovell.net/blog/" title="PaulStovell.NET">PaulStovell.NET</a></h1>
	</div>

	<div id="syndication">
		<a href="http://feeds.feedburner.com/PaulStovell" title="Syndicate this site using RSS" class="feed">Entries <abbr title="Really Simple Syndication">RSS</abbr></a> | <a href="http://www.paulstovell.net/blog/index.php/comments/feed/" title="Syndicate comments using RSS">Comments RSS</a>
	</div>
	<div id="searchbox">
		<form method="get" id="searchform" action="http://www.paulstovell.net/blog/">
<div>
	<input value="" name="s" id="s" type="text">
	<input id="searchsubmit" value="Search" type="submit">
</div>
</form>	</div>

</div>

<div class="pagewrapper"><div class="page">


	<div class="wrapper"><!-- This wrapper class appears only on Page and Single Post pages. -->
	<div class="narrowcolumnwrapper"><div class="narrowcolumn">

		<div class="content">

			
			<div class="post" id="post-721">

				<h2><a href="http://www.paulstovell.net/blog/index.php/xaml-and-wpf-coding-guidelines/" rel="bookmark" title="XAML and WPF Coding Guidelines">XAML and WPF Coding Guidelines</a></h2>

				<div class="postinfo">
Posted on <span class="postdate">May 4th, 2007</span> by Paul Stovell 				</div>

				<div class="entry">

					<p>A number of people that I’ve spoken to about&nbsp;<em>Windows Presentation Foundation</em>
have asked about coding standards, guidelines&nbsp;and best practices
for working with it and XAML. Whilst WPF is still a relatively new
platform, and it will take time for real standards to emerge, I thought
I would have a go at making a list of the ones I follow currently.
These are based off experience with the WPF projects I’ve worked on so
far, so a number of them might not be suitable for everyone, but
hopefully they’ll serve as a good starting point.</p>
<p>I’ve broken them up into <em>XAML Conventions </em>and <em>Resource Organization</em>.</p>
<h2>XAML Conventions</h2>
<p>XAML is still XML and so the majority of the XML formatting
standards that you use will still apply. That said, here’s a couple of
extra ones I’ll throw in on top:</p>
<h3>1. Use x:Name instead of Name</h3>
<p>While they both do the same thing, <code>Name</code> can only be used for some elements, where <code>x:Name</code>
will work for any element (except elements in a resource dictionary).
When you’re looking through a long list of attributes on an element,
attributes starting with an “<code>x:</code>” prefix tend to be a
little easier to spot. To make it easy to find the name of an element
without looking twice, I always stick to <code>x:Name</code>.</p>
<h3>2. Place the first attribute of an element on the line underneath the element name</h3>
<p>Of course, this only applies when you’re setting a number of
attributes. If you decide to wrap the attributes onto the next line,
like this:</p>
<p><a href="http://www.paulstovell.net/blog/wp-content/uploads/2007/05/windowslivewriterxamlandwpfcodingstandards-fee3image0235.png" atomicselection="true"><img src="xaml-and-wpf-coding-guidelines_files/windowslivewriterxamlandwpfcodingstandards-fee3image0-th_003.png" height="60" width="479"></a></p>
<p>Change them so that the first attribute is on a newline, and put the closing angle bracket on its own line as well, like this:</p>
<p><a href="http://www.paulstovell.net/blog/wp-content/uploads/2007/05/windowslivewriterxamlandwpfcodingstandards-fee3image0275.png" atomicselection="true"><img src="xaml-and-wpf-coding-guidelines_files/windowslivewriterxamlandwpfcodingstandards-fee3image0-th_002.png" height="122" width="242"></a></p>
<p>This places all of your attributes at the same standard indentation
level, and&nbsp;stops them from being more indented than their child
elements. Also, if you do decide to wrap one element onto a newline,
wrap all of them - don’t go half way.</p>
<h3>3. Use DynamicResource sparingly</h3>
<p>I think I have used the “<code>{DynamicResource ...}</code>” markup expression once in my entire time with WPF. The “<code>{StaticResource ...}</code>” expression does almost the same thing, but has a lot less overhead. The “<em>Dynamic</em>” part of <code>DynamicResource</code>
means that the value of the resource may change (for example, by
changing the resource dictionary through code), and because of this WPF
has to add a load of hooks to detect these changes and act accordingly.
Since there are very few situations where you would want to change a
resource dynamically at runtime, stick with <code>StaticResource</code> unless you know you need <code>DynamicResource</code>.</p>
<h3>4. If you ever draw a line&nbsp;one pixel thick, use SnapsToDevicePixels</h3>
<p>This <a href="http://msdn2.microsoft.com/en-us/library/aa970908.aspx">article on MSDN</a> explains it. If you declare, say, a <code>Border</code> with a 1-pixel thick edge around it, the WPF <em>virtual pixel</em>
rendering engine&nbsp;may sometimes&nbsp;smooth it, drawing it half
over one pixel and half over the other. While this is often great for
many shapes, on a 96 DPI monitor (the standard) it can look pretty
obvious and often makes the element look out of the ordinary. I’ll
usually declare a <code>Style</code> resource that sets this property automatically for all <code>Border</code> elements.</p>
<h3>5. Give your root element a name</h3>
<p>As I explained in my <a href="http://paulstovell.net/blog/index.php/binding-oriented-programming/">Binding Oriented Programming</a> post, I give the root element of all of my XAML files an “<code>x:Name</code>” of “<code>_this</code>“, or more recently, “<code>PART_this</code>“.
By doing this, I can refer to properties on the object from my markup,
rather than having to explicitly set the value of my XAML elements from
code.</p>
<h3>6. Pick a Naming Convention for Elements</h3>
<p>When you apply an <code>x:Name</code> to something, try to be consistent. In some projects I’ll use an “_” prefix, and in others I’ll use “<code>PART_</code>“. The <code>PART_</code>
prefix, from memory, is used in a lot of the default styles that
inbuilt WPF elements come with, such as the default style of a <code>Button</code>. If I see an animation that is being applied to an element called <code>PART_ScheduleItemOuterBorder</code>, it’s going to be a lot easier to find and understand than if it were named “<code>myBorder</code>“, “<code>border1</code>” or “<code>MyBorder</code>“. While prefixes are generally a bad thing to use in code, in markup they do make things much easier to locate.</p>
<p><strong>UPDATE:</strong> It was correctly pointed out to me by a few people that the <code>PART_</code>
prefix wasn’t really intended to be used for all element names. Lately
I’ve just been sticking to a single underscore as my prefix. </p>
<h2>Resource Organization</h2>
<p>As your WPF projects grow larger, you’re going to start to get a lot
of resources and you’ll need to move them out of “App.xaml” (which,
while we’re on the subject, I always rename to “Application.xaml”). But
how do you organize them? Here’s what I use.</p>
<h3>1. Structuring Resources</h3>
<p>I think there are two different types of XAML files in any system:</p>
<ul>
<li><em>Functional XAML</em> files - these are usually Windows, User Controls, or Pages
</li><li><em>Resource XAML</em> files - these are usually Resource Dictionaries or your App.xaml file </li>
</ul>
<p>Resource XAML files can be subdivided even further:</p>
<ul>
<li><em>Generic Resource XAML</em> files - these contain things that are used throughout the application. <code>Brushes</code>, <code>ImageSources</code>, some <code>Styles</code> and <code>Converters</code> are good candidates here.
</li><li><em>Specific Resource XAML</em> files - these contain resources for a specific Windows, Controls or Pages. </li>
</ul>
<p>Now, you’re probably aware that you can put resources within the XAML of <em>Functional XAML</em> files, such as in a <code>Window.Resources</code>
element. I’ll often do this to start out with, but eventually I find it
easier to move the specific styles and resources for a given Window or
User Control into it’s own XAML file. This way, my “MainWindow.xaml”
might define the <em>structure</em> of the Window, while “MainWindowResources.xaml” might contain the <em>styles and resources</em> that are specific to that Window but won’t clutter up the structural markup.</p>
<p>So, an example project structure could look something like this:</p>
<ul>
<li><strong>WpfBankingApplication/</strong>
<ul>
<li><strong>/Shared/</strong> - a folder that contains resources shared throughout the entire application
<ul>
<li><strong>/Converters/</strong> - a folder that contains a list of generic C#&nbsp;<code>IValueConverters</code>, such as a DateTime formatting converter or a string formatting converter
</li><li><strong>/Images/</strong> - contains all the raw image files&nbsp;(.PNG, etc.)
</li><li><strong>/BrushResources.xaml</strong> - solid brushes, linear gradient brushes and drawing brushes
</li><li><strong>/ConverterResources.xaml</strong> - allows us to
reference any of the converters by merging our resource dictionary with
this file, rather than re-declaring our converters every time
</li><li><strong>/ImageResources.xaml</strong> - as above, allows&nbsp;us to declare an ImageSource once and reference it from anywhere. &nbsp;
</li><li><strong>/TextResources.xaml</strong> - styles applied to textual elements (Hyperlinks, TextBlocks, etc.)
</li><li><strong>/ControlResources.xaml</strong> - styles applied to specific types of controls, like perhaps custom-skinned Buttons or TextBoxes. </li>
</ul>
</li><li><strong>/HomeLoans/</strong>&nbsp;- folder for the “home loans”-specific functionality of the application
<ul>
<li><strong>/HomeLoanEntryWindow.xaml</strong> - a <em>functional XAML </em>file with the structural definition of the Home Loan Entry window.
</li><li><strong>/HomeLoanEntryWindowResources.xaml</strong>&nbsp;- a <em>resource XAML</em> file with the styles, control templates, custom brushes&nbsp;and other resources used by the Home Loans Entry window. </li>
</ul>
</li>
</ul>
</li>
</ul>
<p>This&nbsp;structure keeps all of our XAML files small, and makes it
pretty obvious to developers where they should place bits of
functionality. Aim to keep each XAML file to less than a couple of
hundred lines of XAML - 400 lines is probably the maximum I’d allow it
to grow to. If they go beyond that, it’s probably time to split them up
again.</p>
<h3>2. Resource Naming Conventions</h3>
<p>The biggest issue with using multiple resource XAML files is
figuring out where a specific style or resource comes from. In C#, we
can move our mouse over a type name and Visual Studio will tell us
where the class is defined, and we can even right-click it and “<em>Go to definition…</em>”
in order to go right to it. Unfortunately, the same can’t be done with
things in XAML, though that’s a good idea for an add-in <img src="xaml-and-wpf-coding-guidelines_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
<p>To aid me in figuring out where something comes from, I employ a
naming convention (again). The rules are simple. Notice in the project
structure above that all of the <em>Resource XAML</em> files are suffixed with “Resources.xaml”.</p>
<ol>
<li>Any resources or styles&nbsp;declared in an “<em>XYZ</em>Resources.xaml” file gets a prefix of “<em>XYZ</em>_”. So, if I declare standard light blue <code>SolidColorBrush</code> in <em>Brush</em>Resources.xaml, I’ll name it “<code><em>Brush</em>_LightBlue</code>“. This means if you ever see markup like this:
<p>&nbsp;<a href="http://www.paulstovell.net/blog/wp-content/uploads/2007/05/windowslivewriterxamlandwpfcodingstandards-fee3image0355.png" atomicselection="true"><img src="xaml-and-wpf-coding-guidelines_files/windowslivewriterxamlandwpfcodingstandards-fee3image0-thumb1.png" height="127" width="447"></a></p>
<p>You’ll know precisely where it comes from.</p>
</li><li>Any resources or styles&nbsp;declared in a <em>Functional XAML</em> file, such as “<em>HomeLoansEntryWindow.xaml</em>“, gets a prefix of “<code>Local_</code>“.
This is because these resources won’t be referred to outside of the
XAML file they’re declared in, so if you spot the “Local_” prefix you
can interpret it as “<em>in this file</em>“.
<p><a href="http://www.paulstovell.net/blog/wp-content/uploads/2007/05/windowslivewriterxamlandwpfcodingstandards-fee3image0395.png" atomicselection="true"><img src="xaml-and-wpf-coding-guidelines_files/windowslivewriterxamlandwpfcodingstandards-fee3image0-thumb2.png" height="133" width="447"></a>&nbsp;</p>
</li>
</ol>
<h2>That’s it!</h2>
<p>They’re all the ones that come to mind right now. If you’re looking
for other resources on XAML best practices and guidelines, check out
the following resources:</p>
<ol>
<li><a href="http://blogs.msdn.com/timothyc/archive/2006/06/16/634638.aspx">WPF Performance Q &amp; A</a>
by Tim Cahill. This is also a great discussion of WPF’s retained scene
rendering mode versus GDI+ and DirectX’s immediate mode, what it is,
why it makes a difference and what you can do to avoid problems with
it.
</li><li><a href="http://blogs.msdn.com/wpfsdk/archive/2007/01/15/maximizing-wpf-3d-performance-on-tier-2-hardware.aspx">Maximizing WPF 3D Performance on Tier 2 Hardware</a>. Most of this applies to 2D WPF performance as well.
</li><li><a href="http://blogs.msdn.com/wpfsdk/archive/2006/07/06/best-practices-for-globalization-and-localization-in-wpf.aspx">WPF Globalization and Localization best practices</a>. Some of this applies even if you aren’t writing a globalized application. </li>
</ol>
<p>What guidelines, standards or practices would you add to this list?</p>
					
					<p class="postinfo">
Filed under: <a href="http://www.paulstovell.net/blog/index.php/category/net/" title="View all posts in .NET" rel="category tag">.NET</a>,  <a href="http://www.paulstovell.net/blog/index.php/category/readify/" title="View all posts in Readify" rel="category tag">Readify</a>,  <a href="http://www.paulstovell.net/blog/index.php/category/coding/" title="View all posts in Coding" rel="category tag">Coding</a>,  <a href="http://www.paulstovell.net/blog/index.php/category/software/" title="View all posts in Software" rel="category tag">Software</a>,  <a href="http://www.paulstovell.net/blog/index.php/category/windows-presentation-foundation/" title="View all posts in Windows Presentation Foundation" rel="category tag">Windows Presentation Foundation</a>					</p>

					<!-- 
					<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
			xmlns:dc="http://purl.org/dc/elements/1.1/"
			xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
		<rdf:Description rdf:about="http://www.paulstovell.net/blog/index.php/xaml-and-wpf-coding-guidelines/"
    dc:identifier="http://www.paulstovell.net/blog/index.php/xaml-and-wpf-coding-guidelines/"
    dc:title="XAML and WPF Coding Guidelines"
    trackback:ping="http://www.paulstovell.net/blog/index.php/xaml-and-wpf-coding-guidelines/trackback/" />
</rdf:RDF>					 -->
				</div>
			</div>



			<div class="browse">« <a href="http://www.paulstovell.net/blog/index.php/kr-versus-allman-continued/">K&amp;R versus Allman, continued</a>  <a href="http://www.paulstovell.net/blog/index.php/net-framework-entlib-and-cab-balancing-act/">.NET Framework, EntLib and C.A.B. Balancing Act</a> »</div>



		</div><!-- End content -->

	</div></div><!-- End narrowcolumnwrapper and narrowcolumn classes -->


<!-- Start Comments Template -->

	<div class="narrowcolumnwrapper"><div class="narrowcolumn">

		<div class="content">

			<div class="post">


<!-- You can start editing here. -->

	<h3 id="comments">22 Responses to “XAML and WPF Coding Guidelines”</h3>

<ol class="commentlist">

	<li class="alt" id="comment-1103">

<div class="commentmetadata">
<strong><a href="http://blog.developpez.com/index.php?blog=121" rel="external nofollow">Matthieu MEZIL</a></strong>, on <a href="#comment-1103" title="">May 5th, 2007 at 8:18 am</a> Said: 		</div>

<p>Thank you for your advices. I am starting with WPF and I am very interested by these kind of post.</p>
	</li>



	<li class="" id="comment-1104">

<div class="commentmetadata">
<strong><a href="http://wpf.netfx3.com/blogs/presentation_bloggers/archive/2007/05/04/paul-stovell-wpf-coding-guidelines.aspx" rel="external nofollow">WPF Team Bloggers</a></strong>, on <a href="#comment-1104" title="">May 5th, 2007 at 10:37 am</a> Said: 		</div>

<p><strong>Paul Stovell: WPF Coding Guidelines</strong></p>
<p>Paul Stovell has a list of guidelines he is recommending. Looks like a bunch of good ideas. Go tell him</p>
	</li>



	<li class="alt" id="comment-1105">

<div class="commentmetadata">
<strong><a href="http://blog.boschin.it/archive/2007/05/05/Appunti-di-WPF-WPF-Coding-Guidelines.aspx" rel="external nofollow">di .NET e di altre Amenit</a></strong>, on <a href="#comment-1105" title="">May 5th, 2007 at 8:54 pm</a> Said: 		</div>

<p><strong>Appunti di WPF: WPF Coding Guidelines</strong></p>
<p>Appunti di WPF: WPF Coding Guidelines</p>
	</li>



	<li class="" id="comment-1108">

<div class="commentmetadata">
<strong><a href="http://blogs.developpeur.org/pierrick/archive/2007/05/05/guidelines-pour-wpf.aspx" rel="external nofollow">Pierrick's Blog</a></strong>, on <a href="#comment-1108" title="">May 6th, 2007 at 4:59 am</a> Said: 		</div>

<p><strong>guidelines pour WPF</strong></p>
<p>Vous cherchez des bonnes pratiques pour coder en XAML, Paul Stovell s’est lancé dans l’écriture d’une</p>
	</li>



	<li class="alt" id="comment-1113">

<div class="commentmetadata">
<strong><a href="http://blogs.msdn.com/nikolajw/archive/2007/05/07/wpf-guidelines.aspx" rel="external nofollow">NikolajW</a></strong>, on <a href="#comment-1113" title="">May 7th, 2007 at 9:42 pm</a> Said: 		</div>

<p><strong>WPF Guidelines</strong></p>
<p>Jeg faldt lige over Paul Stovells WPF coding guidelines . Ser ud som om han har fat i noget <img src="xaml-and-wpf-coding-guidelines_files/icon_smile.gif" alt=":)" class="wp-smiley"></p>
	</li>



	<li class="" id="comment-1114">

<div class="commentmetadata">
<strong><a href="http://joshsmithonwpf.wordpress.com/2007/05/07/excellent-guidelines-by-paul-stovell/" rel="external nofollow">Excellent guidelines by Paul Stovell « Josh Smith on WPF</a></strong>, on <a href="#comment-1114" title="">May 7th, 2007 at 11:42 pm</a> Said: 		</div>

<p>[…] guidelines by Paul&nbsp;Stovell I just discovered that Paul
Stovell posted a set of XAML and WPF coding guidelines.� � I really
like his� advice on resource organization.� He provides a scalable way
to structure […]</p>
	</li>



	<li class="alt" id="comment-1116">

<div class="commentmetadata">
<strong><a href="http://dev.net.ua/blogs/mikechaliy/archive/2007/05/07/XAML-Coding-Guidelines.aspx" rel="external nofollow">Mike Chaliy's Blog</a></strong>, on <a href="#comment-1116" title="">May 8th, 2007 at 12:33 am</a> Said: 		</div>

<p><strong>Стандарт кодування для XAML</strong></p>
<p>Більш ніж код з нестандартним форматуванням, я ненавиджу код в якому декілька форматувань. Мабуть багато</p>
	</li>



	<li class="" id="comment-1117">

<div class="commentmetadata">
<strong><a href="http://mhinze.com/links-for-2007-05-07/" rel="external nofollow">links for 2007-05-07 » mhinze.com</a></strong>, on <a href="#comment-1117" title="">May 8th, 2007 at 2:26 am</a> Said: 		</div>

<p>[…] PaulStovell.NET » XAML and WPF Coding Guidelines (tags: wpf .net xaml silverlight) […]</p>
	</li>



	<li class="alt" id="comment-1118">

<div class="commentmetadata">
<strong>edddy</strong>, on <a href="#comment-1118" title="">May 8th, 2007 at 4:04 am</a> Said: 		</div>

<p>Excellent post, very good for newbies like me.</p>
	</li>



	<li class="" id="comment-1119">

<div class="commentmetadata">
<strong><a href="http://geeks.ms/blogs/cristian/archive/2007/05/07/wpf-gu-237-a-de-codificaci-243-n-para-wpf-y-xaml.aspx" rel="external nofollow">CODE FACTORY - Proof of Concept</a></strong>, on <a href="#comment-1119" title="">May 8th, 2007 at 4:07 am</a> Said: 		</div>

<p><strong>WPF: Guía de codificación para WPF y XAML</strong></p>
<p>Paul Stovell, MVP en Client Application Development de Australia, ha publicado en su blog una pequeña</p>
	</li>



	<li class="alt" id="comment-1120">

<div class="commentmetadata">
<strong><a href="http://www.labloguera.net/bloguera/blogs/cristian/archive/2007/05/07/wpf-gu-a-de-codificaci-n-para-wpf-y-xaml.aspx" rel="external nofollow">Code Factory</a></strong>, on <a href="#comment-1120" title="">May 8th, 2007 at 4:32 am</a> Said: 		</div>

<p><strong>WPF: Guía de codificación para WPF y XAML</strong></p>
<p>Paul Stovell, MVP en Client Application Development de Australia, ha publicado en su blog una pequeña</p>
	</li>



	<li class="" id="comment-1124">

<div class="commentmetadata">
<strong><a href="http://gruchala.eu/index.php/2007/05/08/pare-rzeczy-do-winfx/" rel="external nofollow">gruchala.eu, blog » Parę rzeczy do WinFX</a></strong>, on <a href="#comment-1124" title="">May 8th, 2007 at 5:00 pm</a> Said: 		</div>

<p>[…] sourceforge) dostępny jest program pomagający opracowanie Help’a
- Package This. Paul Stovell na swojej stronie zamieszcza pierwsze,
nieoficjalne zalecenia dotyczące standardów kodowania […]</p>
	</li>



	<li class="alt" id="comment-1127">

<div class="commentmetadata">
<strong><a href="http://mbrownchicago.spaces.live.com/" rel="external nofollow">Mike Brown</a></strong>, on <a href="#comment-1127" title="">May 9th, 2007 at 3:08 am</a> Said: 		</div>

<p>EXCELLENT set of guidelines. I can definitely see the benefit of
doing that. I already use a few of them in my code, it’s good to see
validation from another developer!</p>
	</li>



	<li class="" id="comment-1128">

<div class="commentmetadata">
<strong><a href="http://blendtastic.wordpress.com/2007/05/08/paul-stovells-xaml-and-wpf-coding-guidelines/" rel="external nofollow">Paul Stovell's XAML and WPF Coding Guidelines « Blendtastic</a></strong>, on <a href="#comment-1128" title="">May 9th, 2007 at 9:33 am</a> Said: 		</div>

<p>[…] <a href="http://www.paulstovell.net/blog/index.php/xaml-and-wpf-coding-guidelines/" rel="nofollow">http://www.paulstovell.net/blog/index.php/xaml-and-wpf-coding-guidelines/</a> […]</p>
	</li>



	<li class="alt" id="comment-1130">

<div class="commentmetadata">
<strong><a href="http://blendtastic.wordpress.com/" rel="external nofollow">Alan Le</a></strong>, on <a href="#comment-1130" title="">May 9th, 2007 at 10:43 am</a> Said: 		</div>

<p>Excellent post. I wholehearted agree with everything separating the
window specific resources into their own files, like
HomeLoanEntryWindowResources.xaml. </p>
<p>There are several reasons why I keep window-specific style resources
in the same file with the structural xaml. In Expression Blend, if the
resource is on the same window xaml file, you can modify the style and
see the result right away. If you edit resource for the style on a
separate resource xaml file, you don’t get to see the change as you’re
changing it. A second reason is that it adds more bloat. The number of
xaml pages in the project is multiplied by two. Also if some pages have
their own styles and others do not, it can be hard for developers new
to WPF to understand the distinction why some windows have
windownameResources.xaml and others do not.</p>
	</li>



	<li class="" id="comment-1131">

<div class="commentmetadata">
<strong><a href="http://blendtastic.wordpress.com/" rel="external nofollow">Alan Le</a></strong>, on <a href="#comment-1131" title="">May 9th, 2007 at 10:45 am</a> Said: 		</div>

<p>typo in my last post. I meant to say:</p>
<p>I wholehearted agree with everything except separating the window
specific resources into their own files, like
HomeLoanEntryWindowResources.xaml.</p>
	</li>



	<li class="alt" id="comment-1142">

<div class="commentmetadata">
<strong><a href="http://www.galasoft-lb.ch/" rel="external nofollow">Laurent</a></strong>, on <a href="#comment-1142" title="">May 14th, 2007 at 7:31 am</a> Said: 		</div>

<p>Hi Paul,</p>
<p>I’ve been considering writing WPF guidelines for my firm too (I work for Siemens), and you beat me to it <img src="xaml-and-wpf-coding-guidelines_files/icon_wink.gif" alt=";-)" class="wp-smiley">
Congrats. I will shamelessly (but with your agreement) reuse them in
our project. Possibly we will extend them, in which case I’ll notify
you.</p>
<p>I have a remark to guideline 3: DynamicResource can actually speed
the loading of an application up. You see, StaticResource are always
evaluated when the application starts (when the XAML is parsed).
DynamicResource, OTOH, is only evaluated when needed. In some cases, it
may never be evaluated at all (for example in a trigger, if it is never
triggered).</p>
<p>I think that guideline number 3 should be modified to integrate the
comment above. Warning users against using DynamicResource is fine, but
there are situations where it makes sense!</p>
<p>Please contact me per email if you want to discuss this.</p>
<p>Greetings,<br>
Laurent (also a recent MVP, congrats on yours <img src="xaml-and-wpf-coding-guidelines_files/icon_wink.gif" alt=";-)" class="wp-smiley"></p>
	</li>



	<li class="" id="comment-1707">

<div class="commentmetadata">
<strong><a href="http://www.paulstovell.net/blog/index.php/wpf-training-day-links-and-resources/" rel="external nofollow">PaulStovell.NET » WPF Training Day - Links and Resources</a></strong>, on <a href="#comment-1707" title="">July 3rd, 2007 at 1:08 am</a> Said: 		</div>

<p>[…] My XAML and WPF Coding Guidelines […]</p>
	</li>



	<li class="alt" id="comment-2423">

<div class="commentmetadata">
<strong><a href="http://blog.suddenelfilio.net/2007/08/28/xaml-and-wpf-coding-guidelines/" rel="external nofollow">XAML and WPF Coding Guidelines « Suddenelfilio’s Weblog</a></strong>, on <a href="#comment-2423" title="">August 28th, 2007 at 9:00 pm</a> Said: 		</div>

<p>[…] PaulStovell.NET » XAML and WPF Coding Guidelines […]</p>
	</li>



	<li class="" id="comment-2440">

<div class="commentmetadata">
<strong><a href="http://yba.com/" rel="external nofollow">Visitor046</a></strong>, on <a href="#comment-2440" title="">September 5th, 2007 at 3:46 am</a> Said: 		</div>

<p>I have visited your site 533-times</p>
	</li>



	<li class="alt" id="comment-2441">

<div class="commentmetadata">
<strong><a href="http://low.com/" rel="external nofollow">Visitor394</a></strong>, on <a href="#comment-2441" title="">September 5th, 2007 at 3:48 am</a> Said: 		</div>

<p>I could not find this site in the Search Engines index</p>
	</li>



	<li class="" id="comment-2503">

<div class="commentmetadata">
<strong><a href="http://www.clariusconsulting.net/kzu" rel="external nofollow">Daniel Cazzulino</a></strong>, on <a href="#comment-2503" title="">September 27th, 2007 at 3:21 pm</a> Said: 		</div>

<p>This would make for an awesome community-authored wiki.</p>
<p>How about using jottit?</p>
<p><a href="http://wpf.jottit.com/" rel="nofollow">http://wpf.jottit.com/</a><br>
<a href="http://xaml.jottit.com/" rel="nofollow">http://xaml.jottit.com/</a></p>
<p>?</p>
	</li>


	</ol>




		<h3 id="respond">Leave a Reply</h3>


<form action="http://www.paulstovell.net/blog/wp-comments-post.php" method="post" id="commentform">

<p><input name="author" id="author" value="" size="40" tabindex="1" type="text">
<label for="author"><small>Name (required)</small></label></p>

<p><input name="email" id="email" value="" size="40" tabindex="2" type="text">
<label for="email"><small>Mail (will not be published) (required)</small></label></p>

<p><input name="url" id="url" value="" size="40" tabindex="3" type="text">
<label for="url"><small>Website</small></label></p>


<!--<p><small><strong>XHTML:</strong> You can use these tags&#58; &lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;code&gt; &lt;em&gt; &lt;i&gt; &lt;strike&gt; &lt;strong&gt; </small></p>-->

<p><textarea name="comment" id="comment" cols="60" rows="10" tabindex="4"></textarea></p>

<p><input name="submit" id="submit" tabindex="5" value="Submit Comment" type="submit">
<input name="comment_post_ID" value="721" type="hidden">
</p>


</form>



			</div>

		</div><!-- End content for comments template -->

	</div></div><!-- End narrowcolumnwrapper and narrowcolumn classes for comments template -->
	</div><!-- End wrapper class -->

<!-- Start Sidebar -->

	<div class="sidebar">

<ul>
<li><h2>Welcome</h2>
<img src="xaml-and-wpf-coding-guidelines_files/me.jpg" alt="Me in 2006" style="margin: 5px;" border="0"><br>
My name is Paul Stovell, and I'm an <strong>Adelaide</strong> (Australia) based software developer for a company called <a href="http://www.readify.net/">Readify</a>. I was recently awarded a <a href="https://mvp.support.microsoft.com/profile=9A811A54-F2C9-41AE-9E27-00EB0A1EA921">Microsoft MVP award for Client Application Development</a>,
and I spend the best part of my time working on smart-client Windows
applications, Windows Presentation Foundation and going deep into data
binding and solution architecture. <p align="center">
<img style="margin: 5px;" src="xaml-and-wpf-coding-guidelines_files/mvp.jpg" align="middle" border="0">
</p>
<p align="center">
<a href="http://jcooney.net/archive/2007/02/01/42999.aspx">
<img style="margin: 5px;" src="xaml-and-wpf-coding-guidelines_files/worksonmymachine_logo_small.png" align="middle" border="0"></a>
</p>


</li>
</ul>






<ul>


	<li><h2>Calendar</h2>
		<ul>
			<li><table id="wp-calendar">
	<caption>October 2007</caption>
	<thead>
	<tr>
		<th abbr="Sunday" scope="col" title="Sunday">S</th>
		<th abbr="Monday" scope="col" title="Monday">M</th>
		<th abbr="Tuesday" scope="col" title="Tuesday">T</th>
		<th abbr="Wednesday" scope="col" title="Wednesday">W</th>
		<th abbr="Thursday" scope="col" title="Thursday">T</th>
		<th abbr="Friday" scope="col" title="Friday">F</th>
		<th abbr="Saturday" scope="col" title="Saturday">S</th>
	</tr>
	</thead>

	<tfoot>
	<tr>
		<td abbr="September" colspan="3" id="prev"><a href="http://www.paulstovell.net/blog/index.php/2007/09/" title="View posts for September 2007">« Sep</a></td>
		<td class="pad">&nbsp;</td>
		<td colspan="3" id="next" class="pad">&nbsp;</td>
	</tr>
	</tfoot>

	<tbody>
	<tr>
		<td colspan="1" class="pad">&nbsp;</td><td>1</td><td>2</td><td>3</td><td><a href="http://www.paulstovell.net/blog/index.php/2007/10/04/" title="Object Initializers - the end of convenience constructors?">4</a></td><td>5</td><td>6</td>
	</tr>
	<tr>
		<td>7</td><td>8</td><td>9</td><td>10</td><td>11</td><td><a href="http://www.paulstovell.net/blog/index.php/2007/10/12/" title="WPF Binding Bug leads to possible Memory Issues">12</a></td><td>13</td>
	</tr>
	<tr>
		<td><a href="http://www.paulstovell.net/blog/index.php/2007/10/14/" title="Daniel Bartholomew on CardSpace">14</a></td><td><a href="http://www.paulstovell.net/blog/index.php/2007/10/15/" title="Reporting Services Automation with PowerShell">15</a></td><td><a href="http://www.paulstovell.net/blog/index.php/2007/10/16/" title="Introducing SyncLINQ">16</a></td><td>17</td><td>18</td><td>19</td><td>20</td>
	</tr>
	<tr>
		<td>21</td><td id="today">22</td><td>23</td><td>24</td><td>25</td><td>26</td><td>27</td>
	</tr>
	<tr>
		<td>28</td><td>29</td><td>30</td><td>31</td>
		<td class="pad" colspan="3">&nbsp;</td>
	</tr>
	</tbody>
	</table></li>
		</ul>
	</li>



	

	<li><h2>Meta</h2>
		<ul>
						<li><a href="http://www.paulstovell.net/blog/wp-login.php">Login</a></li>
			<li><a href="http://www.wpdesigner.com/" title="Theme by WPDesigner">WPDesigner</a></li>
					</ul>
	</li>

</ul>
<ul>

	<li class="pagenav"><h2>Pages</h2><ul><li class="page_item"><a href="http://www.paulstovell.net/blog/index.php/presentations/" title="Presentations">Presentations</a></li>
</ul></li>
	<li><h2>Categories</h2>
		<ul>
				<li><a href="http://www.paulstovell.net/blog/index.php/category/net/" title="View all posts filed under .NET">.NET</a> (148)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/adventures-in-java/" title="View all posts filed under Adventures in Java">Adventures in Java</a> (3)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/architecture/" title="View all posts filed under Architecture">Architecture</a> (43)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/binding-patterns/" title="View all posts filed under Binding Patterns">Binding Patterns</a> (2)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/blogroll/" title="View all posts filed under Blogroll">Blogroll</a> (1)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/csharp/" title="View all posts filed under C#">C#</a> (23)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/c/" title="View all posts filed under C++">C++</a> (5)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/code-snippets/" title="View all posts filed under Code snippets">Code snippets</a> (5)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/coding/" title="View all posts filed under Coding">Coding</a> (25)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/data-binding/" title="View all posts filed under Data Binding">Data Binding</a> (27)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/fun/" title="View all posts filed under Fun">Fun</a> (42)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/hosting/" title="View all posts filed under Hosting">Hosting</a> (3)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/ideas/" title="View all posts filed under Ideas">Ideas</a> (53)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/industry/" title="View all posts filed under Industry">Industry</a> (21)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/misc/" title="View all posts filed under Misc">Misc</a> (82)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/personal-development/" title="View all posts filed under Personal Development">Personal Development</a> (59)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/readify/" title="View all posts filed under Readify">Readify</a> (108)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/rest/" title="View all posts filed under REST">REST</a> (2)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/ruby/" title="View all posts filed under Ruby">Ruby</a> (5)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/singleuserblog/" title="View all posts filed under SingleUserBlog">SingleUserBlog</a> (2)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/soap/" title="View all posts filed under SOAP">SOAP</a> (2)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/software/" title="View all posts filed under Software">Software</a> (125)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/tfs/" title="View all posts filed under TFS">TFS</a> (10)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/trial-balance/" title="View all posts filed under Trial Balance">Trial Balance</a> (39)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/uncategorized/" title="View all posts filed under Uncategorized">Uncategorized</a> (42)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/vista/" title="View all posts filed under Vista">Vista</a> (20)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/web-services/" title="View all posts filed under Web Services">Web Services</a> (3)
</li>
	<li><a href="http://www.paulstovell.net/blog/index.php/category/windows-presentation-foundation/" title="View all posts filed under Windows Presentation Foundation">Windows Presentation Foundation</a> (42)
</li>
		</ul>
	</li>

	<li><h2>Archives</h2>
		<ul>
				<li><a href="http://www.paulstovell.net/blog/index.php/2007/10/" title="October 2007">October 2007</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2007/09/" title="September 2007">September 2007</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2007/08/" title="August 2007">August 2007</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2007/07/" title="July 2007">July 2007</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2007/06/" title="June 2007">June 2007</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2007/05/" title="May 2007">May 2007</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2007/04/" title="April 2007">April 2007</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2007/03/" title="March 2007">March 2007</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2007/02/" title="February 2007">February 2007</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2007/01/" title="January 2007">January 2007</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2006/12/" title="December 2006">December 2006</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2006/11/" title="November 2006">November 2006</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2006/10/" title="October 2006">October 2006</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2006/09/" title="September 2006">September 2006</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2006/08/" title="August 2006">August 2006</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2006/07/" title="July 2006">July 2006</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2006/06/" title="June 2006">June 2006</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2006/05/" title="May 2006">May 2006</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2006/03/" title="March 2006">March 2006</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2006/02/" title="February 2006">February 2006</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2006/01/" title="January 2006">January 2006</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2005/12/" title="December 2005">December 2005</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2005/11/" title="November 2005">November 2005</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2005/10/" title="October 2005">October 2005</a></li>
	<li><a href="http://www.paulstovell.net/blog/index.php/2005/09/" title="September 2005">September 2005</a></li>
		</ul>
	</li>

</ul>


<script type="text/javascript" src="xaml-and-wpf-coding-guidelines_files/publisher.js"></script>
<script type="text/javascript" src="xaml-and-wpf-coding-guidelines_files/broadcast.txt"></script><div style="border: 4px solid rgb(216, 219, 188); margin: 0.5em; padding: 0pt; background: rgb(255, 255, 255) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; font-family: arial,sans-serif; font-size: 10pt; -moz-border-radius-topleft: 8px; -moz-border-radius-topright: 8px; -moz-border-radius-bottomright: 8px; -moz-border-radius-bottomleft: 8px;" id="readerpublishermodule0" class="reader-publisher-module"><h3 style="border-style: none none solid; border-color: -moz-use-text-color -moz-use-text-color rgb(216, 219, 188); border-width: medium medium 1px; margin: 0pt 0.5em; padding: 0.2em 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; -moz-border-radius-topleft: 8px; -moz-border-radius-topright: 8px; -moz-border-radius-bottomright: 0pt; -moz-border-radius-bottomleft: 0pt; color: rgb(45, 133, 9);">Paul's Shared Items</h3><ul style="border: medium none ; margin: 0pt 0.5em; padding: 0.2em; background: transparent none repeat scroll 0%; overflow: hidden; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal;"><li style="border: medium none ; margin: 0pt; padding: 0.4em 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; list-style-type: none;"><a style="border-style: none none solid; border-color: -moz-use-text-color -moz-use-text-color rgb(151, 224, 122); border-width: medium medium 1px; margin: 0pt; padding: 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; color: rgb(88, 191, 47);" class="i" title="JIT Updates" href="http://tirania.org/blog/archive/2007/Oct-15.html">JIT Updates</a></li><li style="border: medium none ; margin: 0pt; padding: 0.4em 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; list-style-type: none;"><a style="border-style: none none solid; border-color: -moz-use-text-color -moz-use-text-color rgb(151, 224, 122); border-width: medium medium 1px; margin: 0pt; padding: 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; color: rgb(88, 191, 47);" class="i" title="Validation Engine" href="http://blog.spencen.com/2007/10/15/validation-engine.aspx">Validation Engine</a></li><li style="border: medium none ; margin: 0pt; padding: 0.4em 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; list-style-type: none;"><a style="border-style: none none solid; border-color: -moz-use-text-color -moz-use-text-color rgb(151, 224, 122); border-width: medium medium 1px; margin: 0pt; padding: 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; color: rgb(88, 191, 47);" class="i" title="Hanselminutes Podcast 84 - Concurency Programming with .NET Parallel 
Framework Extensions" href="http://feeds.feedburner.com/%7Er/ScottHanselman/%7E3/169041012/HanselminutesPodcast84ConcurencyProgrammingWithNETParallelFrameworkExtensions.aspx">Hanselminutes Podcast 84 - Concurency Programming...</a></li><li style="border: medium none ; margin: 0pt; padding: 0.4em 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; list-style-type: none;"><a style="border-style: none none solid; border-color: -moz-use-text-color -moz-use-text-color rgb(151, 224, 122); border-width: medium medium 1px; margin: 0pt; padding: 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; color: rgb(88, 191, 47);" class="i" title="Scaling ALT.Net Concepts" href="http://feeds.feedburner.com/%7Er/AyendeRahien/%7E3/169141517/Scaling-ALT.Net-Concepts.aspx">Scaling ALT.Net Concepts</a></li><li style="border: medium none ; margin: 0pt; padding: 0.4em 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; list-style-type: none;"><a style="border-style: none none solid; border-color: -moz-use-text-color -moz-use-text-color rgb(151, 224, 122); border-width: medium medium 1px; margin: 0pt; padding: 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; color: rgb(88, 191, 47);" class="i" title="Simple != Poor Quality, period!" href="http://feeds.feedburner.com/%7Er/AyendeRahien/%7E3/168945476/Simple--Poor-Quality-period.aspx">Simple != Poor Quality, period!</a></li></ul><div style="border-style: solid none none; border-color: rgb(216, 219, 188) -moz-use-text-color -moz-use-text-color; border-width: 1px medium medium; margin: 0pt; padding: 0.2em 8px; background: rgb(245, 251, 235) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: right; text-indent: 0pt; text-decoration: none; font-weight: normal; -moz-border-radius-topleft: 0pt; -moz-border-radius-topright: 0pt; -moz-border-radius-bottomright: 4px; -moz-border-radius-bottomleft: 4px; font-size: small; white-space: nowrap;" class="f"><a href="http://www.google.com/reader/shared/user/09933736808586540098/state/com.google/broadcast" style="border: medium none ; margin: 0pt; padding: 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: underline; font-weight: normal; color: rgb(173, 176, 148);">Read more...</a></div></div>
	</div>


<!-- End Sidebar -->
</div></div><!-- End pagewrapper and page classes -->

</div><!-- End container id -->


</body></html>